{"version":3,"sources":["webpack:///./src/views/login.vue?95a4","webpack:///../../../src/components/VCard/index.ts","webpack:///./src/views/login.vue?6540","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/msal/lib-es6/utils/CryptoUtils.js","webpack:///./node_modules/msal/lib-es6/utils/Constants.js","webpack:///./node_modules/msal/lib-es6/authority/Authority.js","webpack:///./node_modules/msal/lib-es6/error/AuthError.js","webpack:///./node_modules/msal/lib-es6/utils/StringUtils.js","webpack:///./node_modules/msal/lib-es6/error/ClientAuthError.js","webpack:///./node_modules/msal/lib-es6/error/ClientConfigurationError.js","webpack:///./node_modules/msal/lib-es6/ScopeSet.js","webpack:///./node_modules/msal/lib-es6/utils/UrlUtils.js","webpack:///./node_modules/msal/lib-es6/cache/AccessTokenKey.js","webpack:///./node_modules/msal/lib-es6/cache/AccessTokenValue.js","webpack:///./node_modules/msal/lib-es6/packageMetadata.js","webpack:///./node_modules/msal/lib-es6/ServerRequestParameters.js","webpack:///./node_modules/msal/lib-es6/XHRClient.js","webpack:///./node_modules/msal/lib-es6/authority/TrustedAuthority.js","webpack:///./node_modules/msal/lib-es6/Logger.js","webpack:///./node_modules/msal/lib-es6/ClientInfo.js","webpack:///./node_modules/msal/lib-es6/utils/TimeUtils.js","webpack:///./node_modules/msal/lib-es6/utils/TokenUtils.js","webpack:///./node_modules/msal/lib-es6/IdToken.js","webpack:///./node_modules/msal/lib-es6/cache/AccessTokenCacheItem.js","webpack:///./node_modules/msal/lib-es6/cache/BrowserStorage.js","webpack:///./node_modules/msal/lib-es6/utils/RequestUtils.js","webpack:///./node_modules/msal/lib-es6/cache/AuthCache.js","webpack:///./node_modules/msal/lib-es6/Account.js","webpack:///./node_modules/msal/lib-es6/utils/WindowUtils.js","webpack:///./node_modules/msal/lib-es6/utils/ResponseUtils.js","webpack:///./node_modules/msal/lib-es6/authority/AuthorityFactory.js","webpack:///./node_modules/msal/lib-es6/Configuration.js","webpack:///./node_modules/msal/lib-es6/error/ServerError.js","webpack:///./node_modules/msal/lib-es6/error/InteractionRequiredAuthError.js","webpack:///./node_modules/msal/lib-es6/AuthResponse.js","webpack:///./node_modules/msal/lib-es6/telemetry/TelemetryConstants.js","webpack:///./node_modules/msal/lib-es6/telemetry/ApiEvent.js","webpack:///./node_modules/msal/lib-es6/telemetry/TelemetryUtils.js","webpack:///./node_modules/msal/lib-es6/telemetry/TelemetryEvent.js","webpack:///./node_modules/msal/lib-es6/telemetry/DefaultEvent.js","webpack:///./node_modules/msal/lib-es6/telemetry/HttpEvent.js","webpack:///./node_modules/msal/lib-es6/telemetry/TelemetryManager.js","webpack:///./node_modules/msal/lib-es6/utils/AuthCacheUtils.js","webpack:///./node_modules/msal/lib-es6/UserAgentApplication.js","webpack:///./src/config/index.js","webpack:///src/views/login.vue","webpack:///./src/views/login.vue?1308","webpack:///../../../src/components/VForm/VForm.ts","webpack:///./src/views/login.vue?9c91"],"names":["VCardActions","VCardSubtitle","VCardText","VCardTitle","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","staticStyle","logo","_v","ref","on","$event","preventDefault","onSubmit","msalLogin","microsoft","staticRenderFns","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","__spreadArrays","il","r","k","a","j","jl","ServerHashParamKeys","CryptoUtils","createNewGuid","cryptoObj","window","crypto","getRandomValues","buffer","Uint8Array","decimalToHex","guidHolder","hex","guidResponse","Math","random","isGuid","guid","regexGuid","test","num","toString","base64Encode","input","btoa","encodeURIComponent","replace","match","p1","String","fromCharCode","Number","base64Decode","encodedString","Error","decodeURIComponent","atob","split","map","c","charCodeAt","slice","join","deserialize","query","pl","search","decode","obj","exec","Constants","defineProperty","get","enumerable","configurable","_popUpWidth","set","width","_popUpHeight","height","openidScope","profileScope","SESSION_STORAGE","TemporaryCacheKeys","PersistentCacheKeys","ErrorCacheKeys","ResponseTypes","id_token","token","id_token_token","SSOTypes","DEFAULT_AUTHORITY","AAD_INSTANCE_DISCOVERY_ENDPOINT","WELL_KNOWN_SUFFIX","AuthorityType","DisallowedEQParams","SID","LOGIN_HINT","NetworkRequestType","GET","POST","PromptState","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","FramePrefix","ID_TOKEN_FRAME","TOKEN_FRAME","AuthErrorMessage","unexpectedError","code","desc","noWindowObjectError","_super","AuthError","errorCode","errorMessage","_this","name","createUnexpectedError","errDesc","createNoWindowObjectError","StringUtils","isEmpty","str","validateAndParseJsonCacheKey","parsedKey","JSON","parse","error","ClientAuthErrorMessage","endpointResolutionError","popUpWindowError","tokenRenewalError","invalidIdToken","invalidStateError","nonceMismatchError","loginProgressError","acquireTokenProgressError","userCancelledError","callbackError","userLoginRequiredError","userDoesNotExistError","clientInfoDecodingError","clientInfoNotPopulatedError","nullOrEmptyIdToken","idTokenNotParsed","tokenEncodingError","invalidInteractionType","cacheParseError","blockTokenRequestsInHiddenIframe","ClientAuthError","createEndpointResolutionError","errDetail","createPopupWindowError","createTokenRenewalTimeoutError","createInvalidIdTokenError","idToken","createInvalidStateError","invalidState","actualState","createNonceMismatchError","invalidNonce","actualNonce","createLoginInProgressError","createAcquireTokenInProgressError","createUserCancelledError","createErrorInCallbackFunction","errorDesc","createUserLoginRequiredError","createUserDoesNotExistError","createClientInfoDecodingError","caughtError","createClientInfoNotPopulatedError","createIdTokenNullOrEmptyError","invalidRawTokenString","createIdTokenParsingError","caughtParsingError","createTokenEncodingError","incorrectlyEncodedToken","createInvalidInteractionTypeError","createCacheParseError","key","createBlockTokenRequestsInHiddenIframeError","ClientConfigurationErrorMessage","configurationNotSet","storageNotSupported","noRedirectCallbacksSet","invalidCallbackObject","scopesRequired","emptyScopes","nonArrayScopes","invalidPrompt","invalidAuthorityType","authorityUriInsecure","authorityUriInvalidPath","unsupportedAuthorityValidation","untrustedAuthority","b2cAuthorityUriInvalidPath","b2cKnownAuthoritiesNotSet","claimsRequestParsingError","emptyRequestError","invalidCorrelationIdError","telemetryConfigError","ssoSilentError","invalidAuthorityMetadataError","ClientConfigurationError","createNoSetConfigurationError","createStorageNotSupportedError","givenCacheLocation","createRedirectCallbacksNotSetError","createInvalidCallbackObjectError","callbackObject","createEmptyScopesArrayError","scopesValue","createScopesNonArrayError","createScopesRequiredError","createInvalidPromptError","promptValue","createClaimsRequestParsingError","claimsRequestParseError","createEmptyRequestError","_a","createInvalidCorrelationIdError","createKnownAuthoritiesNotSetError","createInvalidAuthorityTypeError","createUntrustedAuthorityError","host","createTelemetryConfigError","config","requiredKeys","applicationName","applicationVersion","telemetryEmitter","missingKeys","keys","reduce","concat","createSsoSilentError","createInvalidAuthorityMetadataError","ScopeSet","isIntersectingScopes","cachedScopes","scopes","convertedCachedScopes","trimAndConvertArrayToLowerCase","requestScopes","indexOf","toLowerCase","containsScope","every","trimAndConvertToLowerCase","scope","trim","trimScopes","removeElement","scopeVal","filter","parseScope","scopeList","validateInputScope","isArray","getScopeFromState","state","splitIndex","resourceDelimiter","substring","appendScopes","reqScopes","reqExtraScopesToConsent","convertedExtraScopes","convertedReqScopes","onlyContainsOidcScopes","scopesCount","oidcScopesFound","containsAnyOidcScopes","containsOpenIdScope","containsProfileScope","onlyContainsClientId","clientId","appendDefaultScopes","extendedScopes","removeDefaultScopes","translateClientIdIfSingleScope","oidcScopes","UrlUtils","createNavigateUrl","serverRequestParams","createNavigationUrlString","authEndpoint","authorityInstance","AuthorizationEndpoint","requestUrl","responseType","redirectUri","nonce","xClientSku","xClientVer","claimsValue","queryParameters","extraQueryParameters","correlationId","getCurrentUrl","location","href","removeHashFromUrl","url","replaceTenantPath","tenantId","lowerCaseUrl","urlObject","GetUrlComponents","pathArray","PathSegments","common","ORGANIZATIONS","CONSUMERS","constructAuthorityUriFromObject","CanonicalizeUri","Protocol","HostNameAndPort","isCommonAuthority","authority","isOrganizationsAuthority","isConsumersAuthority","regEx","RegExp","urlComponents","AbsolutePath","pathSegments","val","Search","Hash","endsWith","suffix","urlRemoveQueryStringParameter","updatedUrl","regex","getHashFromUrl","urlStringOrFragment","hashIndex1","hashIndex2","urlContainsHash","urlString","parameters","deserializeHash","ERROR_DESCRIPTION","ERROR","ACCESS_TOKEN","ID_TOKEN","urlFragment","hash","getHostFromUri","uri","extractedUri","AccessTokenKey","uid","utid","homeAccountIdentifier","AccessTokenValue","accessToken","expiresIn","version","ServerRequestParameters","CanonicalAuthority","populateQueryParams","account","request","adalIdTokenObject","silentCall","prompt","claimsRequest","isSSOParam","constructUnifiedCacheQueryParameter","addHintParameters","eQParams","generateQueryParametersString","idTokenObject","ssoType","ssoData","serverReqParam","idTokenClaims","login_hint","sid","userName","loginHint","upn","addSSOParameter","params","_b","qParams","ssoParam","paramsString","forEach","domain_hint","determineResponseType","accountsMatch","responseTypeForMatchingAccounts","XhrClient","sendRequestAsync","method","enableCaching","xhr","XMLHttpRequest","open","onload","jsonResponse","status","handleError","responseText","response","statusCode","onerror","send","TrustedAuthority","setTrustedAuthoritiesFromConfig","validateAuthority","knownAuthorities","getTrustedHostList","TrustedHostList","getAliases","authorityToVerify","telemetryManager","client","httpMethod","instanceDiscoveryEndpoint","httpEvent","createAndStartHttpEvent","httpResponseStatus","stopEvent","catch","err","serverErrorCode","setTrustedAuthoritiesFromNetwork","metadata","entry","authorities","IsInTrustedHostList","LogLevel","Authority","authorityMetadata","IsValidationEnabled","validateAsUri","tenantDiscoveryResponse","isAdfs","authorityUrl","components","ADFS","canonicalAuthority","Adfs","Default","CanonicalAuthorityUrlComponents","validateResolved","Tenant","EndSessionEndpoint","Issuer","hasCachedMetadata","canonicalAuthorityUrlComponents","DiscoverEndpoints","openIdConfigurationEndpoint","resolveEndpointsAsync","openIdConfigurationEndpointResponse","GetOpenIdConfigurationEndpoint","DefaultOpenIdConfigurationEndpoint","ClientInfo","rawClientInfo","decodedClientInfo","clientInfo","stripPolicyFromUid","_uid","_utid","createClientInfoFromIdToken","subject","stringify","uidSegments","urlSegments","reverse","policy","encodeClientInfo","TimeUtils","parseExpiresIn","expires","parseInt","now","round","Date","getTime","relativeNowMs","performance","TokenUtils","decodeJwt","jwtToken","idTokenPartsRegex","matches","crackedToken","header","JWSPayload","JWSSig","validateExpirationIsWithinOffset","expiration","tokenRenewalOffsetSeconds","offset","extractIdToken","encodedIdToken","decodedToken","base64IdToken","base64Decoded","IdToken","rawIdToken","claims","issuer","objectId","preferredName","homeObjectId","cloudInstance","AccessTokenCacheItem","BrowserStorage","cacheLocation","storageSupported","setItem","enableCookieStorage","setItemCookie","getItem","getItemCookie","removeItem","clear","cName","cValue","cookieStr","expireTime","getCookieExpirationTime","document","cookie","ca","charAt","clearItemCookie","cookieLifeDays","today","expr","toUTCString","RequestUtils","validateRequest","isLoginCall","interactionType","extraScopesToConsent","validatePromptParameter","validateEQParameters","validateClaimsRequest","validateAndGenerateState","validateAndGenerateCorrelationId","validatedRequest","param","userState","generateLibraryState","stateObject","id","ts","stateString","parseLibraryState","libraryState","interactionTypeRedirect","createRequestSignature","AuthCache","storeAuthStateInCookie","temporaryCache","rollbackEnabled","migrateCacheEntries","idTokenKey","cachePrefix","IDTOKEN","clientInfoKey","CLIENT_INFO","errorKey","errorDescKey","ERROR_DESC","idTokenValue","aud","clientInfoValue","errorValue","errorDescValue","values_1","keysToMigrate","cacheKey","index","duplicateCacheEntry","newKey","generateCacheKey","addInstanceId","adalIdToken","matchKeyForType","tokenType","accountMatches","tokenTypeMatches","setTemporaryItem","getTemporaryItem","resetCacheItems","storage","resetTempCacheItems","stateId","isTokenRenewalInProgress","tokenRenewalInProgress","setInteractionInProgress","REDIRECT_REQUEST","getAllTokensByType","results","tokens","matchedTokenKey","newAccessTokenCacheItem","getAllAccessTokens","getAllIdTokens","getAllTokens","accessTokens","idTokens","isInteractionInProgress","matchClientId","getInteractionInProgress","INTERACTION_STATUS","newInProgressValue","stateValue","renewStatus","generateTemporaryCacheKey","RENEW_STATUS","inProgress","clearMsalCookie","NONCE_IDTOKEN","STATE_LOGIN","LOGIN_REQUEST","STATE_ACQ_TOKEN","cookies","cookieString","cookieName","generateAcquireTokenAccountKey","accountId","ACQUIRE_TOKEN_ACCOUNT","generateAuthorityKey","AUTHORITY","tempCacheKey","Account","accountIdentifier","environment","createAccount","compareAccounts","a1","a2","WindowUtils","isInIframe","parent","isInPopup","opener","generateFrameName","prefix","requestSignature","monitorIframeForHash","contentWindow","timeout","urlNavigate","logger","nowMark","timeoutMark","verbose","intervalId","setInterval","errorPii","clearInterval","POLLING_INTERVAL_MS","monitorPopupForHash","maxTicks","ticks","closed","clearUrlFragment","loadFrame","frameName","timeoutMs","infoPii","setTimeout","frameHandle","loadFrameSync","addHiddenIFrame","src","iframeId","info","adalFrame","getElementById","ifr","createElement","setAttribute","style","visibility","position","border","getElementsByTagName","appendChild","removeHiddenIframe","iframe","parentNode","removeChild","getIframeWithHash","iframes","iframeArray","item","getPopups","openedWindows","getPopUpWithHash","popup","trackPopup","closePopups","close","blockReloadInHiddenIframes","checkIfBackButtonIsPressed","cacheStorage","redirectCache","splitCache","shift","history","replaceState","pathname","ResponseUtils","setResponseIdToken","originalResponse","idTokenObj","exp","expiresOn","uniqueId","buildAuthResponse","authResponse","serverAuthenticationRequest","accountState","idTokenResponse","idTokeTokenResponse","tokenResponse","AuthorityFactory","saveMetadataFromNetwork","metadataMap","getMetadata","saveMetadataFromConfig","authorityMetadataJson","parsedMetadata","authorization_endpoint","end_session_endpoint","CreateInstance","Map","Logger","localCallback","options","level","Info","piiLoggingEnabled","logMessage","logLevel","containsPii","log","timestamp","executeCallback","message","warning","Warning","warningPii","Verbose","verbosePii","isPiiLoggingEnabled","FRAME_TIMEOUT","OFFSET","NAVIGATE_FRAME_WAIT","DEFAULT_AUTH_OPTIONS","postLogoutRedirectUri","navigateToLoginRequestUrl","DEFAULT_CACHE_OPTIONS","DEFAULT_SYSTEM_OPTIONS","loadFrameTimeout","navigateFrameWait","DEFAULT_FRAMEWORK_OPTIONS","isAngular","unprotectedResources","protectedResourceMap","buildConfiguration","auth","cache","system","_d","framework","overlayedConfig","ServerErrorMessage","serverUnavailable","unknownServerError","ServerError","createServerUnavailableError","createUnknownServerError","InteractionRequiredAuthErrorMessage","interactionRequired","consentRequired","loginRequired","InteractionRequiredAuthError","isInteractionRequiredError","errorString","interactionRequiredCodes","createLoginRequiredAuthError","createInteractionRequiredAuthError","createConsentRequiredAuthError","buildResponseStateOnly","fromCache","API_CODE","API_EVENT_IDENTIFIER","EVENT_NAME_PREFIX","EVENT_NAME_KEY","START_TIME_KEY","ELAPSED_TIME_KEY","TELEMETRY_BLOB_EVENT_NAMES","MsalCorrelationIdConstStrKey","ApiTelemIdConstStrKey","ApiIdConstStrKey","BrokerAppConstStrKey","CacheEventCountConstStrKey","HttpEventCountTelemetryBatchKey","IdpConstStrKey","IsSilentTelemetryBatchKey","IsSuccessfulConstStrKey","ResponseTimeConstStrKey","TenantIdConstStrKey","UiEventCountTelemetryBatchKey","TENANT_PLACEHOLDER","scrubTenantFromUri","pathParams","tenantPosition","hashPersonalIdentifier","valueToHash","prependEventNamePrefix","supportsBrowserPerformance","mark","measure","endBrowserPerformanceMeasurement","measureName","startMark","endMark","clearMeasures","clearMarks","startBrowserPerformanceMeasurement","TelemetryEvent","eventName","eventLabel","eventId","event","setElapsedTime","time","stop","startTimestamp","displayName","perfStartMark","perfEndMark","start","telemetryCorrelationId","DefaultEvent","platform","eventCount","sdk","sdkVersion","networkInformation","connectionSpeed","getEventCount","EVENT_KEYS","AUTHORITY_TYPE","PROMPT","TENANT_ID","USER_ID","WAS_SUCESSFUL","API_ERROR_CODE","mapEventIdentiferToCode","AcquireTokenSilent","AcquireTokenPopup","AcquireTokenRedirect","LoginPopup","LoginRedirect","Logout","ApiEvent","piiEnabled","apiEventIdentifier","apiCode","wasSuccessful","authorityType","promptType","HTTP_PATH","USER_AGENT","QUERY_PARAMETERS","API_VERSION","RESPONSE_CODE","O_AUTH_ERROR_CODE","HTTP_METHOD","REQUEST_ID_HEADER","SPE_INFO","SERVER_ERROR_CODE","SERVER_SUB_ERROR_CODE","URL","HttpEvent","scrubbedUri","httpPath","userAgent","queryParams","apiVersion","requestIdHeader","speInfo","subErrorCode","TelemetryManager","completedEvents","inProgressEvents","eventCountByCorrelationId","onlySendFailureTelemetry","telemetryPlatform","libraryName","navigator","connection","effectiveType","getTelemetrymanagerStub","telemetryManagerConfig","startEvent","incrementEventCount","flush","orphanedEvents","getOrphanedEvents","eventsToFlush","eventCountsToFlush","defaultEvent","eventsWithDefaultEvent","createAndStartApiEvent","apiEvent","stopAndFlushApiEvent","apiErrorCode","correlation","memo","eventKey","event_1","AuthCacheUtils","filterTokenCacheItemsByScope","tokenCacheItems","cacheItem","searchScopes","filterTokenCacheItemsByAuthority","filterTokenCacheItemsByDomain","requestDomain","cacheItemDomain","UserAgentApplication","configuration","authResponseCallback","tokenReceivedCallback","errorReceivedCallback","inCookie","getTelemetryManagerFromConfig","telemetry","activeRenewals","renewStates","callbackMappedToRenewStates","promiseMappedToRenewStates","msal","urlHash","stateInfo","getResponseState","handleRedirectAuthenticationResponse","getAuthorityInstance","handleRedirectCallback","authOrTokenCallback","redirectError","authErrorHandler","redirectResponse","authResponseHandler","interactionTypePopup","authErr","loginRedirect","userRequest","acquireTokenInteractive","acquireTokenRedirect","loginPopup","resp","acquireTokenPopup","thrownError","stateOnlyResponse","getAccountState","getAccount","acquireTokenHelper","extractADALIdToken","tokenRequest","buildIDTokenRequest","silentLogin","acquireTokenSilent","acquireTokenAuthority","popUpWindow","loginStartPage","error_1","navigate","err_1","getTokenType","redirectStartPage","getRedirectUri","updateCacheEntries","response_mode_fragment","requestType","login","renewToken","registerCallback","openPopup","popUpWidth","popUpHeight","handleAuthenticationResponse","broadcast","onRedirectNavigate","navigateWindow","ssoSilent","interactionTypeSilent","userContainedClaims","cacheResultResponse","err_2","forceRefresh","getCachedToken","renewIdToken","res","title","winLeft","screenLeft","screenX","winTop","screenTop","screenY","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","left","top_1","popupWindow","focus","loadIframeTimeout","expectedState","error_2","logout","logoutAsync","requestCorrelationId","correlationIdParam","postLogoutQueryParam","error_3","clearCache","getPostLogoutRedirectUri","clearCacheForScope","accessTokenItems","isCallback","processCallBack","respStateInfo","parentCallback","saveTokenFromHash","locationHash","tokenResponseCallback","loginRequestUrl","currentUrl","finalRedirectUrl","loginRequestUrlComponents","stateResponse","STATE","parsedState","unknown","stateMatch","silentAuthenticationState","statesInParentContext","getCachedIdToken","getCachedAccessToken","getTokenCacheItemByAuthority","filteredAuthorityItems","accessTokenCacheItem","idTokenCacheItems","matchAuthority","idTokenCacheItem","idTokenIsStillValid","evaluateTokenExpiration","scopeFilteredTokenCacheItems","tokenIsStillValid","responseAccount","aState","tokenCacheItem","prompt_none","saveToken","accessTokenKey","accessTokenValue","saveIdToken","saveAccessToken","accessTokenResponse","SCOPE","consentedScopes","accessTokenCacheItems","EXPIRES_IN","hashParams","authorityKey","acquireTokenAccountKey","LOGIN_ERROR","no_account","hashErr","hashErrDesc","SESSION_STATE","populateAuthority","accountKey","acquireTokenAccountKey_noaccount","cachedAccount","acquireTokenAccount","cachedNonce","cachedAuthority","getAllAccounts","accounts","getUniqueAccounts","flags","uniqueAccounts","data","evt","CustomEvent","detail","dispatchEvent","getCachedTokenInternal","accountObject","newAuthority","getScopesForEndpoint","endpoint","size","_i","from","getLoginInProgress","setloginInProgress","loginInProgress","getAcquireTokenInProgress","setAcquireTokenInProgress","acquireTokenInProgress","getLogger","setLogger","reqRedirectUri","getCurrentConfiguration","setAccountCache","getAccountId","setAuthorityCache","grant_type","axios","secretToken","email","methods","mixins","provide","form","inheritAttrs","props","disabled","lazyValidation","readonly","Boolean","inputs","watchers","errorBag","watch","handler","errors","deep","immediate","watchInput","watcher","valid","shouldValidate","validate","reset","resetErrorBag","resetValidation","register","unregister","found","find","unwatch","render","h","novalidate","attrs$","submit","$slots","component","VBtn","VCard","VCol","VContainer","VForm","VImg","VRow"],"mappings":"gHAAA,yBAAoe,EAAG,G,oCCAve,gGAGMA,EAAe,eAArB,mBACMC,EAAgB,eAAtB,oBACMC,EAAY,eAAlB,gBACMC,EAAa,eAAnB,iBAYI,Q,yCClBJ,IAAI,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACE,YAAY,mBAAmBC,MAAM,CAAC,GAAK,UAAU,MAAQ,KAAK,CAACH,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,UAAU,CAACH,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,YAAYH,EAAG,MAAM,CAACI,YAAY,CAAC,OAAS,MAAM,SAAW,WAAW,IAAM,MAAM,KAAO,KAAK,mBAAmB,UAAU,QAAU,sBAAsB,gBAAgB,OAAO,UAAU,KAAKD,MAAM,CAAC,IAAMP,EAAIS,UAAUL,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,SAAS,CAACH,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,aAAa,CAACH,EAAG,MAAM,CAACE,YAAY,oBAAoB,CAACF,EAAG,QAAQ,CAACA,EAAG,YAAY,CAACA,EAAG,MAAM,CAACI,YAAY,CAAC,OAAS,QAAQ,gBAAgB,OAAO,aAAa,sBAAsBD,MAAM,CAAC,YAAY,MAAM,IAAMP,EAAIS,QAAQL,EAAG,IAAI,CAACE,YAAY,QAAQ,CAACN,EAAIU,GAAG,gEAAgEN,EAAG,YAAY,CAACA,EAAG,QAAQ,CAACO,IAAI,WAAWC,GAAG,CAAC,OAAS,SAASC,GAAgC,OAAxBA,EAAOC,iBAAwBd,EAAIe,SAASF,MAAW,CAACT,EAAG,OAAO,CAACA,EAAG,OAAO,CAACA,EAAG,MAAM,CAACE,YAAY,+BAA+BF,EAAG,OAAO,CAACI,YAAY,CAAC,eAAe,OAAO,gBAAgB,OAAO,cAAc,QAAQD,MAAM,CAAC,KAAO,UAAUK,GAAG,CAAC,MAAQZ,EAAIgB,YAAY,CAACZ,EAAG,OAAO,CAACI,YAAY,CAAC,SAAW,WAAW,UAAU,KAAK,MAAQ,OAAO,KAAO,QAAQD,MAAM,CAAC,IAAMP,EAAIiB,aAAajB,EAAIU,GAAG,6BAA6B,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,UACn1CQ,EAAkB,G,kCCelBC,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,KAClEP,EAAcC,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAO5B,KAAK6B,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GAG5E,IAAII,EAAW,WAQlB,OAPAA,EAAWX,OAAOY,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIX,KADTU,EAAIG,UAAUF,GACAD,EAAOd,OAAOS,UAAUJ,eAAec,KAAKL,EAAGV,KAAIS,EAAET,GAAKU,EAAEV,IAE9E,OAAOS,GAEJF,EAASS,MAAMzC,KAAMsC,YA8BzB,SAASI,EAAUC,EAASC,EAAYC,EAAGC,GAC9C,SAASC,EAAMC,GAAS,OAAOA,aAAiBH,EAAIG,EAAQ,IAAIH,GAAE,SAAUI,GAAWA,EAAQD,MAC/F,OAAO,IAAKH,IAAMA,EAAIK,WAAU,SAAUD,EAASE,GAC/C,SAASC,EAAUJ,GAAS,IAAMK,EAAKP,EAAUQ,KAAKN,IAAW,MAAOO,GAAKJ,EAAOI,IACpF,SAASC,EAASR,GAAS,IAAMK,EAAKP,EAAU,SAASE,IAAW,MAAOO,GAAKJ,EAAOI,IACvF,SAASF,EAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOT,OAASD,EAAMU,EAAOT,OAAOW,KAAKP,EAAWI,GAClGH,GAAMP,EAAYA,EAAUL,MAAME,EAASC,GAAc,KAAKU,WAI/D,SAASM,EAAYjB,EAASkB,GACjC,IAAsGC,EAAGC,EAAG7B,EAAG8B,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPjC,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOkC,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEV,KAAMgB,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,oBAAXC,SAA0BP,EAAEO,OAAOC,UAAY,WAAa,OAAOxE,OAAUgE,EACvJ,SAASM,EAAKjC,GAAK,OAAO,SAAUoC,GAAK,OAAOpB,EAAK,CAAChB,EAAGoC,KACzD,SAASpB,EAAKqB,GACV,GAAIZ,EAAG,MAAM,IAAIa,UAAU,mCAC3B,MAAOV,EAAG,IACN,GAAIH,EAAI,EAAGC,IAAM7B,EAAY,EAARwC,EAAG,GAASX,EAAE,UAAYW,EAAG,GAAKX,EAAE,YAAc7B,EAAI6B,EAAE,YAAc7B,EAAEM,KAAKuB,GAAI,GAAKA,EAAET,SAAWpB,EAAIA,EAAEM,KAAKuB,EAAGW,EAAG,KAAKhB,KAAM,OAAOxB,EAE3J,OADI6B,EAAI,EAAG7B,IAAGwC,EAAK,CAAS,EAARA,EAAG,GAAQxC,EAAEc,QACzB0B,EAAG,IACP,KAAK,EAAG,KAAK,EAAGxC,EAAIwC,EAAI,MACxB,KAAK,EAAc,OAAXT,EAAEC,QAAgB,CAAElB,MAAO0B,EAAG,GAAIhB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIW,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKT,EAAEI,IAAIO,MAAOX,EAAEG,KAAKQ,MAAO,SACxC,QACI,GAAM1C,EAAI+B,EAAEG,OAAMlC,EAAIA,EAAEK,OAAS,GAAKL,EAAEA,EAAEK,OAAS,MAAkB,IAAVmC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAET,EAAI,EAAG,SACjG,GAAc,IAAVS,EAAG,MAAcxC,GAAMwC,EAAG,GAAKxC,EAAE,IAAMwC,EAAG,GAAKxC,EAAE,IAAM,CAAE+B,EAAEC,MAAQQ,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYT,EAAEC,MAAQhC,EAAE,GAAI,CAAE+B,EAAEC,MAAQhC,EAAE,GAAIA,EAAIwC,EAAI,MAC7D,GAAIxC,GAAK+B,EAAEC,MAAQhC,EAAE,GAAI,CAAE+B,EAAEC,MAAQhC,EAAE,GAAI+B,EAAEI,IAAIQ,KAAKH,GAAK,MACvDxC,EAAE,IAAI+B,EAAEI,IAAIO,MAChBX,EAAEG,KAAKQ,MAAO,SAEtBF,EAAKb,EAAKrB,KAAKG,EAASsB,GAC1B,MAAOV,GAAKmB,EAAK,CAAC,EAAGnB,GAAIQ,EAAI,EAAK,QAAUD,EAAI5B,EAAI,EACtD,GAAY,EAARwC,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE1B,MAAO0B,EAAG,GAAKA,EAAG,QAAK,EAAQhB,MAAM,IA2C3E,SAASoB,IACZ,IAAK,IAAI3C,EAAI,EAAGC,EAAI,EAAG2C,EAAKzC,UAAUC,OAAQH,EAAI2C,EAAI3C,IAAKD,GAAKG,UAAUF,GAAGG,OACxE,IAAIyC,EAAIxD,MAAMW,GAAI8C,EAAI,EAA3B,IAA8B7C,EAAI,EAAGA,EAAI2C,EAAI3C,IACzC,IAAK,IAAI8C,EAAI5C,UAAUF,GAAI+C,EAAI,EAAGC,EAAKF,EAAE3C,OAAQ4C,EAAIC,EAAID,IAAKF,IAC1DD,EAAEC,GAAKC,EAAEC,GACjB,OAAOH,EC9IX,IC0KWK,ED1KPC,EAA6B,WAC7B,SAASA,KAkJT,OA5IAA,EAAYC,cAAgB,WAuBxB,IAAIC,EAAYC,OAAOC,OACvB,GAAIF,GAAaA,EAAUG,gBAAiB,CACxC,IAAIC,EAAS,IAAIC,WAAW,IAQ5B,OAPAL,EAAUG,gBAAgBC,GAE1BA,EAAO,IAAM,GACbA,EAAO,IAAM,GAEbA,EAAO,IAAM,IACbA,EAAO,IAAM,IACNN,EAAYQ,aAAaF,EAAO,IAAMN,EAAYQ,aAAaF,EAAO,IACvEN,EAAYQ,aAAaF,EAAO,IAAMN,EAAYQ,aAAaF,EAAO,IACtE,IAAMN,EAAYQ,aAAaF,EAAO,IAAMN,EAAYQ,aAAaF,EAAO,IAC5E,IAAMN,EAAYQ,aAAaF,EAAO,IAAMN,EAAYQ,aAAaF,EAAO,IAC5E,IAAMN,EAAYQ,aAAaF,EAAO,IAAMN,EAAYQ,aAAaF,EAAO,IAC5E,IAAMN,EAAYQ,aAAaF,EAAO,KAAON,EAAYQ,aAAaF,EAAO,KAC7EN,EAAYQ,aAAaF,EAAO,KAAON,EAAYQ,aAAaF,EAAO,KACvEN,EAAYQ,aAAaF,EAAO,KAAON,EAAYQ,aAAaF,EAAO,KAO7E,IAJA,IAAIG,EAAa,uCACbC,EAAM,mBACNhB,EAAI,EACJiB,EAAe,GACV7D,EAAI,EAAGA,EAAI,GAAIA,IACE,MAAlB2D,EAAW3D,IAAgC,MAAlB2D,EAAW3D,KAEpC4C,EAAoB,GAAhBkB,KAAKC,SAAgB,GAEP,MAAlBJ,EAAW3D,GACX6D,GAAgBD,EAAIhB,GAEG,MAAlBe,EAAW3D,IAEhB4C,GAAK,EACLA,GAAK,EACLiB,GAAgBD,EAAIhB,IAGpBiB,GAAgBF,EAAW3D,GAGnC,OAAO6D,GAOfX,EAAYc,OAAS,SAAUC,GAC3B,IAAIC,EAAY,6EAChB,OAAOA,EAAUC,KAAKF,IAO1Bf,EAAYQ,aAAe,SAAUU,GACjC,IAAIR,EAAMQ,EAAIC,SAAS,IACvB,MAAOT,EAAIzD,OAAS,EAChByD,EAAM,IAAMA,EAEhB,OAAOA,GAQXV,EAAYoB,aAAe,SAAUC,GACjC,OAAOC,KAAKC,mBAAmBF,GAAOG,QAAQ,mBAAmB,SAAsBC,EAAOC,GAC1F,OAAOC,OAAOC,aAAaC,OAAO,KAAOH,SAQjD1B,EAAY8B,aAAe,SAAUT,GACjC,IAAIU,EAAgBV,EAAMG,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAC3D,OAAQO,EAAc9E,OAAS,GAC3B,KAAK,EACD,MACJ,KAAK,EACD8E,GAAiB,KACjB,MACJ,KAAK,EACDA,GAAiB,IACjB,MACJ,QACI,MAAM,IAAIC,MAAM,yBAExB,OAAOC,mBAAmBC,KAAKH,GAAeI,MAAM,IAAIC,KAAI,SAAUC,GAClE,MAAO,KAAO,KAAOA,EAAEC,WAAW,GAAGnB,SAAS,KAAKoB,OAAO,MAC3DC,KAAK,MAOZxC,EAAYyC,YAAc,SAAUC,GAChC,IAAIjB,EACAkB,EAAK,MACLC,EAAS,oBACTC,EAAS,SAAUhG,GAAK,OAAOoF,mBAAmBpF,EAAE2E,QAAQmB,EAAI,OAChEG,EAAM,GACVrB,EAAQmB,EAAOG,KAAKL,GACpB,MAAOjB,EACHqB,EAAID,EAAOpB,EAAM,KAAOoB,EAAOpB,EAAM,IACrCA,EAAQmB,EAAOG,KAAKL,GAExB,OAAOI,GAEJ9C,EAnJqB,GCC5BgD,EAA2B,WAC3B,SAASA,KAiKT,OA/JAjH,OAAOkH,eAAeD,EAAW,cAAe,CAC5CE,IAAK,WAAc,MAAO,WAE1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,SAAU,CACvCE,IAAK,WAAc,MAAO,UAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,WAAY,CACzCE,IAAK,WAAc,MAAO,YAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,cAAe,CAC5CE,IAAK,WAAc,MAAO,gBAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,cAAe,CAC5CE,IAAK,WAAc,MAAO,QAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,SAAU,CACvCE,IAAK,WAAc,MAAO,UAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,aAAc,CAC3CE,IAAK,WAAc,MAAO,cAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,MAAO,CACpCE,IAAK,WAAc,MAAO,OAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,cAAe,CAC5CE,IAAK,WAAc,MAAO,eAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,wBAAyB,CACtDE,IAAK,WAAc,MAAO,0BAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,cAAe,CAC5CE,IAAK,WAAc,MAAO,gBAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,SAAU,CACvCE,IAAK,WAAc,MAAO,UAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,yBAA0B,CACvDE,IAAK,WAAc,MAAO,2BAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,oBAAqB,CAClDE,IAAK,WAAc,MAAO,KAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,iBAAkB,CAC/CE,IAAK,WAAc,MAAO,KAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,aAAc,CAC3CE,IAAK,WAAc,OAAOxI,KAAK2I,aAC/BC,IAAK,SAAUC,GACX7I,KAAK2I,YAAcE,GAEvBJ,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,cAAe,CAC5CE,IAAK,WAAc,OAAOxI,KAAK8I,cAC/BF,IAAK,SAAUG,GACX/I,KAAK8I,aAAeC,GAExBN,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,QAAS,CACtCE,IAAK,WAAc,MAAO,SAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,aAAc,CAC3CE,IAAK,WAAc,MAAO,eAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,UAAW,CACxCE,IAAK,WAAc,MAAO,WAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,OAAQ,CACrCE,IAAK,WAAc,MAAO,QAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,wBAAyB,CACtDE,IAAK,WAAc,MAAO,yBAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,SAAU,CACvCE,IAAK,WAAc,MAAO,UAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,cAAe,CAC5CE,IAAK,WAAc,MAAO,UAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,eAAgB,CAC7CE,IAAK,WAAc,MAAO,WAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,aAAc,CAC3CE,IAAK,WAAc,MAAO,CAACxI,KAAKgJ,YAAahJ,KAAKiJ,eAClDR,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,0BAA2B,CACxDE,IAAK,WAAc,MAAO,uBAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,uBAAwB,CACrDE,IAAK,WAAc,MAAO,oBAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,wBAAyB,CACtDE,IAAK,WAAc,MAAO,qBAC1BC,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeD,EAAW,aAAc,CAC3CE,IAAK,WAAc,MAAO,cAC1BC,YAAY,EACZC,cAAc,IAElBJ,EAAUK,YAAc,IACxBL,EAAUQ,aAAe,IAClBR,EAlKmB,GAqKnBY,EAAkB,kBAK7B,SAAW7D,GACPA,EAAoB,SAAW,QAC/BA,EAAoB,SAAW,QAC/BA,EAAoB,SAAW,QAC/BA,EAAoB,qBAAuB,oBAC3CA,EAAoB,gBAAkB,eACtCA,EAAoB,YAAc,WAClCA,EAAoB,cAAgB,aACpCA,EAAoB,iBAAmB,gBACvCA,EAAoB,eAAiB,eATzC,CAUGA,IAAwBA,EAAsB,KAQ1C,IASI8D,EAeAC,EAKAC,EA7BAC,EAAgB,CACvBC,SAAU,WACVC,MAAO,QACPC,eAAgB,mBAOpB,SAAWN,GACPA,EAAmB,aAAe,YAClCA,EAAmB,yBAA2B,sBAC9CA,EAAmB,iBAAmB,gBACtCA,EAAmB,eAAiB,cACpCA,EAAmB,mBAAqB,qBACxCA,EAAmB,eAAiB,cACpCA,EAAmB,iBAAmB,gBACtCA,EAAmB,iBAAmB,gBACtCA,EAAmB,gBAAkB,qBACrCA,EAAmB,YAAc,UACjCA,EAAmB,sBAAwB,qBAC3CA,EAAmB,oBAAsB,oBAZ7C,CAaGA,IAAuBA,EAAqB,KAE/C,SAAWC,GACPA,EAAoB,WAAa,UACjCA,EAAoB,eAAiB,cAFzC,CAGGA,IAAwBA,EAAsB,KAEjD,SAAWC,GACPA,EAAe,eAAiB,cAChCA,EAAe,SAAW,QAC1BA,EAAe,cAAgB,oBAHnC,CAIGA,IAAmBA,EAAiB,KAChC,IAOIK,EAPAC,EAAoB,4CACpBC,EAAkCD,EAAoB,8DACtDE,EAAoB,oCAM/B,SAAWH,GACPA,EAAS,WAAa,UACtBA,EAAS,OAAS,MAClBA,EAAS,cAAgB,aACzBA,EAAS,iBAAmB,gBAC5BA,EAAS,aAAe,YACxBA,EAAS,YAAc,WACvBA,EAAS,cAAgB,oBACzBA,EAAS,kBAAoB,yBARjC,CASGA,IAAaA,EAAW,KAIpB,IC/OII,ED+OAC,EAAqB,CAC5BL,EAASM,IACTN,EAASO,YAEFC,EAAqB,CAC5BC,IAAK,MACLC,KAAM,QAQCC,EAAc,CACrBC,MAAO,QACPC,eAAgB,iBAChBC,QAAS,UACTC,KAAM,QAKCC,EAAc,CACrBC,eAAgB,mBAChBC,YAAa,kBEhRNC,EAAmB,CAC1BC,gBAAiB,CACbC,KAAM,mBACNC,KAAM,uCAEVC,oBAAqB,CACjBF,KAAM,mBACNC,KAAM,yCAMV,EAA2B,SAAUE,GAErC,SAASC,EAAUC,EAAWC,GAC1B,IAAIC,EAAQJ,EAAO1I,KAAKxC,KAAMqL,IAAiBrL,KAK/C,OAJAqB,OAAOC,eAAegK,EAAOH,EAAUrJ,WACvCwJ,EAAMF,UAAYA,EAClBE,EAAMD,aAAeA,EACrBC,EAAMC,KAAO,YACND,EAQX,OAfA3J,EAAUwJ,EAAWD,GASrBC,EAAUK,sBAAwB,SAAUC,GACxC,OAAO,IAAIN,EAAUN,EAAiBC,gBAAgBC,KAAMF,EAAiBC,gBAAgBE,KAAO,KAAOS,IAE/GN,EAAUO,0BAA4B,SAAUD,GAC5C,OAAO,IAAIN,EAAUN,EAAiBI,oBAAoBF,KAAMF,EAAiBI,oBAAoBD,KAAO,IAAMS,IAE/GN,EAhBmB,CAiB5B7D,OC5BEqE,EAA6B,WAC7B,SAASA,KA8BT,OAvBAA,EAAYC,QAAU,SAAUC,GAC5B,MAAuB,qBAARA,IAAwBA,GAAO,IAAMA,EAAItJ,QAO5DoJ,EAAYG,6BAA+B,SAAUD,GACjD,IACI,IAAIE,EAAYC,KAAKC,MAAMJ,GAO3B,OAAQE,GAAkC,kBAAdA,EAA0BA,EAAY,KAEtE,MAAOG,GACH,OAAO,OAGRP,EA/BqB,GCArBQ,EAAyB,CAChCC,wBAAyB,CACrBrB,KAAM,6BACNC,KAAM,2EAEVqB,iBAAkB,CACdtB,KAAM,qBACNC,KAAM,4GAEVsB,kBAAmB,CACfvB,KAAM,sBACNC,KAAM,kDAEVuB,eAAgB,CACZxB,KAAM,mBACNC,KAAM,4BAEVwB,kBAAmB,CACfzB,KAAM,sBACNC,KAAM,kBAEVyB,mBAAoB,CAChB1B,KAAM,uBACNC,KAAM,2CAEV0B,mBAAoB,CAChB3B,KAAM,uBACNC,KAAM,8EAEV2B,0BAA2B,CACvB5B,KAAM,8BACNC,KAAM,qFAEV4B,mBAAoB,CAChB7B,KAAM,iBACNC,KAAM,4BAEV6B,cAAe,CACX9B,KAAM,iBACNC,KAAM,uDAEV8B,uBAAwB,CACpB/B,KAAM,mBACNC,KAAM,2FAEV+B,sBAAuB,CACnBhC,KAAM,oBACNC,KAAM,wDAEVgC,wBAAyB,CACrBjC,KAAM,6BACNC,KAAM,+GAEViC,4BAA6B,CACzBlC,KAAM,kCACNC,KAAM,iGAEVkC,mBAAoB,CAChBnC,KAAM,yBACNC,KAAM,sFAEVmC,iBAAkB,CACdpC,KAAM,yBACNC,KAAM,iFAEVoC,mBAAoB,CAChBrC,KAAM,uBACNC,KAAM,qDAEVqC,uBAAwB,CACpBtC,KAAM,2BACNC,KAAM,uEAEVsC,gBAAiB,CACbvC,KAAM,qBACNC,KAAM,iEAEVuC,iCAAkC,CAC9BxC,KAAM,uBACNC,KAAM,8CAMV,EAAiC,SAAUE,GAE3C,SAASsC,EAAgBpC,EAAWC,GAChC,IAAIC,EAAQJ,EAAO1I,KAAKxC,KAAMoL,EAAWC,IAAiBrL,KAG1D,OAFAsL,EAAMC,KAAO,kBACblK,OAAOC,eAAegK,EAAOkC,EAAgB1L,WACtCwJ,EAyEX,OA9EA3J,EAAU6L,EAAiBtC,GAO3BsC,EAAgBC,8BAAgC,SAAUC,GACtD,IAAIrC,EAAec,EAAuBC,wBAAwBpB,KAIlE,OAHI0C,IAAc/B,EAAYC,QAAQ8B,KAClCrC,GAAgB,aAAeqC,GAE5B,IAAIF,EAAgBrB,EAAuBC,wBAAwBrB,KAAMM,IAEpFmC,EAAgBG,uBAAyB,SAAUD,GAC/C,IAAIrC,EAAec,EAAuBE,iBAAiBrB,KAI3D,OAHI0C,IAAc/B,EAAYC,QAAQ8B,KAClCrC,GAAgB,aAAeqC,GAE5B,IAAIF,EAAgBrB,EAAuBE,iBAAiBtB,KAAMM,IAE7EmC,EAAgBI,+BAAiC,WAC7C,OAAO,IAAIJ,EAAgBrB,EAAuBG,kBAAkBvB,KAAMoB,EAAuBG,kBAAkBtB,OAEvHwC,EAAgBK,0BAA4B,SAAUC,GAClD,OAAO,IAAIN,EAAgBrB,EAAuBI,eAAexB,KAAMoB,EAAuBI,eAAevB,KAAO,iBAAmB8C,IAG3IN,EAAgBO,wBAA0B,SAAUC,EAAcC,GAC9D,OAAO,IAAIT,EAAgBrB,EAAuBK,kBAAkBzB,KAAMoB,EAAuBK,kBAAkBxB,KAAO,IAAMgD,EAAe,sBAAwBC,EAAc,MAGzLT,EAAgBU,yBAA2B,SAAUC,EAAcC,GAC/D,OAAO,IAAIZ,EAAgBrB,EAAuBM,mBAAmB1B,KAAMoB,EAAuBM,mBAAmBzB,KAAO,IAAMmD,EAAe,sBAAwBC,EAAc,MAE3LZ,EAAgBa,2BAA6B,WACzC,OAAO,IAAIb,EAAgBrB,EAAuBO,mBAAmB3B,KAAMoB,EAAuBO,mBAAmB1B,OAEzHwC,EAAgBc,kCAAoC,WAChD,OAAO,IAAId,EAAgBrB,EAAuBQ,0BAA0B5B,KAAMoB,EAAuBQ,0BAA0B3B,OAEvIwC,EAAgBe,yBAA2B,WACvC,OAAO,IAAIf,EAAgBrB,EAAuBS,mBAAmB7B,KAAMoB,EAAuBS,mBAAmB5B,OAEzHwC,EAAgBgB,8BAAgC,SAAUC,GACtD,OAAO,IAAIjB,EAAgBrB,EAAuBU,cAAc9B,KAAMoB,EAAuBU,cAAc7B,KAAO,IAAMyD,EAAY,MAExIjB,EAAgBkB,6BAA+B,WAC3C,OAAO,IAAIlB,EAAgBrB,EAAuBW,uBAAuB/B,KAAMoB,EAAuBW,uBAAuB9B,OAEjIwC,EAAgBmB,4BAA8B,WAC1C,OAAO,IAAInB,EAAgBrB,EAAuBY,sBAAsBhC,KAAMoB,EAAuBY,sBAAsB/B,OAE/HwC,EAAgBoB,8BAAgC,SAAUC,GACtD,OAAO,IAAIrB,EAAgBrB,EAAuBa,wBAAwBjC,KAAMoB,EAAuBa,wBAAwBhC,KAAO,uBAAyB6D,IAEnKrB,EAAgBsB,kCAAoC,SAAUD,GAC1D,OAAO,IAAIrB,EAAgBrB,EAAuBc,4BAA4BlC,KAAMoB,EAAuBc,4BAA4BjC,KAAO,uBAAyB6D,IAE3KrB,EAAgBuB,8BAAgC,SAAUC,GACtD,OAAO,IAAIxB,EAAgBrB,EAAuBe,mBAAmBnC,KAAMoB,EAAuBe,mBAAmBlC,KAAO,wBAA0BgE,IAE1JxB,EAAgByB,0BAA4B,SAAUC,GAClD,OAAO,IAAI1B,EAAgBrB,EAAuBgB,iBAAiBpC,KAAMoB,EAAuBgB,iBAAiBnC,KAAO,uBAAyBkE,IAErJ1B,EAAgB2B,yBAA2B,SAAUC,GACjD,OAAO,IAAI5B,EAAgBrB,EAAuBiB,mBAAmBrC,KAAMoB,EAAuBiB,mBAAmBpC,KAAO,yBAA2BoE,IAE3J5B,EAAgB6B,kCAAoC,WAChD,OAAO,IAAI7B,EAAgBrB,EAAuBkB,uBAAuBtC,KAAMoB,EAAuBkB,uBAAuBrC,OAEjIwC,EAAgB8B,sBAAwB,SAAUC,GAC9C,IAAIlE,EAAe,gBAAkBkE,EAAM,KAAOpD,EAAuBmB,gBAAgBtC,KACzF,OAAO,IAAIwC,EAAgBrB,EAAuBmB,gBAAgBvC,KAAMM,IAE5EmC,EAAgBgC,4CAA8C,WAC1D,OAAO,IAAIhC,EAAgBrB,EAAuBoB,iCAAiCxC,KAAMoB,EAAuBoB,iCAAiCvC,OAE9IwC,EA/EyB,CAgFlC,GCtKSiC,EAAkC,CACzCC,oBAAqB,CACjB3E,KAAM,gBACNC,KAAM,uHAEV2E,oBAAqB,CACjB5E,KAAM,wBACNC,KAAM,qDAEV4E,uBAAwB,CACpB7E,KAAM,wBACNC,KAAM,iQAGV6E,sBAAuB,CACnB9E,KAAM,0BACNC,KAAM,4KAGV8E,eAAgB,CACZ/E,KAAM,kBACNC,KAAM,kDAEV+E,YAAa,CACThF,KAAM,2BACNC,KAAM,2CAEVgF,eAAgB,CACZjF,KAAM,8BACNC,KAAM,yCAEViF,cAAe,CACXlF,KAAM,uBACNC,KAAM,+EAEVkF,qBAAsB,CAClBnF,KAAM,yBACNC,KAAM,qIAEVmF,qBAAsB,CAClBpF,KAAM,yBACNC,KAAM,kCAEVoF,wBAAyB,CACrBrF,KAAM,6BACNC,KAAM,mCAEVqF,+BAAgC,CAC5BtF,KAAM,mCACNC,KAAM,sEAEVsF,mBAAoB,CAChBvF,KAAM,sBACNC,KAAM,6JAEVuF,2BAA4B,CACxBxF,KAAM,iCACNC,KAAM,mDAEVwF,0BAA2B,CACvBzF,KAAM,gCACNC,KAAM,kFAEVyF,0BAA2B,CACvB1F,KAAM,+BACNC,KAAM,oDAEV0F,kBAAmB,CACf3F,KAAM,sBACNC,KAAM,+BAEV2F,0BAA2B,CACvB5F,KAAM,qCACNC,KAAM,gDAEV4F,qBAAsB,CAClB7F,KAAM,yBACNC,KAAM,2DAEV6F,eAAgB,CACZ9F,KAAM,mBACNC,KAAM,iDAEV8F,8BAA+B,CAC3B/F,KAAM,2BACNC,KAAM,iIAMV,EAA0C,SAAUE,GAEpD,SAAS6F,EAAyB3F,EAAWC,GACzC,IAAIC,EAAQJ,EAAO1I,KAAKxC,KAAMoL,EAAWC,IAAiBrL,KAG1D,OAFAsL,EAAMC,KAAO,2BACblK,OAAOC,eAAegK,EAAOyF,EAAyBjP,WAC/CwJ,EAgEX,OArEA3J,EAAUoP,EAA0B7F,GAOpC6F,EAAyBC,8BAAgC,WACrD,OAAO,IAAID,EAAyBtB,EAAgCC,oBAAoB3E,KAAM,GAAK0E,EAAgCC,oBAAoB1E,OAE3J+F,EAAyBE,+BAAiC,SAAUC,GAChE,OAAO,IAAIH,EAAyBtB,EAAgCE,oBAAoB5E,KAAM0E,EAAgCE,oBAAoB3E,KAAO,oBAAsBkG,IAEnLH,EAAyBI,mCAAqC,WAC1D,OAAO,IAAIJ,EAAyBtB,EAAgCG,uBAAuB7E,KAAM0E,EAAgCG,uBAAuB5E,OAE5J+F,EAAyBK,iCAAmC,SAAUC,GAClE,OAAO,IAAIN,EAAyBtB,EAAgCI,sBAAsB9E,KAAM0E,EAAgCI,sBAAsB7E,KAAO,uCAAyCqG,IAE1MN,EAAyBO,4BAA8B,SAAUC,GAC7D,OAAO,IAAIR,EAAyBtB,EAAgCM,YAAYhF,KAAM0E,EAAgCM,YAAY/E,KAAO,iBAAmBuG,EAAc,MAE9KR,EAAyBS,0BAA4B,SAAUD,GAC3D,OAAO,IAAIR,EAAyBtB,EAAgCO,eAAejF,KAAM0E,EAAgCO,eAAehF,KAAO,iBAAmBuG,EAAc,MAEpLR,EAAyBU,0BAA4B,SAAUF,GAC3D,OAAO,IAAIR,EAAyBtB,EAAgCK,eAAe/E,KAAM0E,EAAgCK,eAAe9E,KAAO,iBAAmBuG,IAEtKR,EAAyBW,yBAA2B,SAAUC,GAC1D,OAAO,IAAIZ,EAAyBtB,EAAgCQ,cAAclF,KAAM0E,EAAgCQ,cAAcjF,KAAO,iBAAmB2G,IAEpKZ,EAAyBa,gCAAkC,SAAUC,GACjE,OAAO,IAAId,EAAyBtB,EAAgCgB,0BAA0B1F,KAAM0E,EAAgCgB,0BAA0BzF,KAAO,iBAAmB6G,IAE5Ld,EAAyBe,wBAA0B,WAC/C,IAAIC,EAAKtC,EAAgCiB,kBAAmB3F,EAAOgH,EAAGhH,KAAMC,EAAO+G,EAAG/G,KACtF,OAAO,IAAI+F,EAAyBhG,EAAMC,IAE9C+F,EAAyBiB,gCAAkC,WACvD,OAAO,IAAIjB,EAAyBtB,EAAgCkB,0BAA0B5F,KAAM0E,EAAgCkB,0BAA0B3F,OAElK+F,EAAyBkB,kCAAoC,WACzD,OAAO,IAAIlB,EAAyBtB,EAAgCe,0BAA0BzF,KAAM0E,EAAgCe,0BAA0BxF,OAElK+F,EAAyBmB,gCAAkC,WACvD,OAAO,IAAInB,EAAyBtB,EAAgCS,qBAAqBnF,KAAM0E,EAAgCS,qBAAqBlF,OAExJ+F,EAAyBoB,8BAAgC,SAAUC,GAC/D,OAAO,IAAIrB,EAAyBtB,EAAgCa,mBAAmBvF,KAAM0E,EAAgCa,mBAAmBtF,KAAO,wBAA0BoH,IAErLrB,EAAyBsB,2BAA6B,SAAUC,GAC5D,IAAIP,EAAKtC,EAAgCmB,qBAAsB7F,EAAOgH,EAAGhH,KAAMC,EAAO+G,EAAG/G,KACrFuH,EAAe,CACfC,gBAAiB,SACjBC,mBAAoB,SACpBC,iBAAkB,YAElBC,EAActR,OAAOuR,KAAKL,GACzBM,QAAO,SAAUD,EAAMrD,GACxB,OAAO+C,EAAO/C,GAAOqD,EAAOA,EAAKE,OAAO,CAACvD,EAAM,KAAOgD,EAAahD,GAAO,QAC3E,IACH,OAAO,IAAIwB,EAAyBhG,EAAMC,EAAO,mBAAqB2H,EAAY7K,KAAK,OAE3FiJ,EAAyBgC,qBAAuB,WAC5C,OAAO,IAAIhC,EAAyBtB,EAAgCoB,eAAe9F,KAAM0E,EAAgCoB,eAAe7F,OAE5I+F,EAAyBiC,oCAAsC,WAC3D,OAAO,IAAIjC,EAAyBtB,EAAgCqB,8BAA8B/F,KAAM0E,EAAgCqB,8BAA8B9F,OAEnK+F,EAtEkC,CAuE3C,GCjKE,EAA0B,WAC1B,SAASkC,KAwMT,OA/LAA,EAASC,qBAAuB,SAAUC,EAAcC,GAGpD,IAFA,IAAIC,EAAwBrT,KAAKsT,+BAA+BxO,EAAeqO,IAC3EI,EAAgBvT,KAAKsT,+BAA+BxO,EAAesO,IAC9DhR,EAAI,EAAGA,EAAImR,EAAchR,OAAQH,IACtC,GAAIiR,EAAsBG,QAAQD,EAAcnR,GAAGqR,gBAAkB,EACjE,OAAO,EAGf,OAAO,GAQXR,EAASS,cAAgB,SAAUP,EAAcC,GAC7C,IAAIC,EAAwBrT,KAAKsT,+BAA+BxO,EAAeqO,IAC3EI,EAAgBvT,KAAKsT,+BAA+BxO,EAAesO,IACvE,OAAOG,EAAcI,OAAM,SAAU3Q,GAAS,OAAOqQ,EAAsBG,QAAQxQ,EAAMyD,WAAWgN,gBAAkB,MAQ1HR,EAASW,0BAA4B,SAAUC,GAC3C,OAAOA,EAAMC,OAAOL,eAMxBR,EAASK,+BAAiC,SAAUF,GAChD,IAAI9H,EAAQtL,KACZ,OAAOoT,EAAO1L,KAAI,SAAUmM,GAAS,OAAOvI,EAAMsI,0BAA0BC,OAMhFZ,EAASc,WAAa,SAAUX,GAC5B,OAAOA,EAAO1L,KAAI,SAAUmM,GAAS,OAAOA,EAAMC,WAStDb,EAASe,cAAgB,SAAUZ,EAAQS,GACvC,IAAII,EAAWjU,KAAK4T,0BAA0BC,GAC9C,OAAOT,EAAOc,QAAO,SAAUlR,GAAS,OAAOA,IAAUiR,MAM7DhB,EAASkB,WAAa,SAAUf,GAC5B,IAAIgB,EAAY,GAChB,GAAIhB,EACA,IAAK,IAAIhR,EAAI,EAAGA,EAAIgR,EAAO7Q,SAAUH,EACjCgS,GAAchS,IAAMgR,EAAO7Q,OAAS,EAAK6Q,EAAOhR,GAAK,IAAMgR,EAAOhR,GAG1E,OAAOgS,GAUXnB,EAASoB,mBAAqB,SAAUjB,EAAQtD,GAC5C,GAAKsD,EAAL,CASA,IAAK5R,MAAM8S,QAAQlB,GACf,MAAM,EAAyB5B,0BAA0B4B,GAG7D,GAAIA,EAAO7Q,OAAS,GAAKuN,EACrB,MAAM,EAAyBwB,4BAA4B8B,EAAO3M,iBAblE,GAAIqJ,EACA,MAAM,EAAyB2B,0BAA0B2B,IAuBrEH,EAASsB,kBAAoB,SAAUC,GACnC,GAAIA,EAAO,CACP,IAAIC,EAAaD,EAAMhB,QAAQlL,EAAUoM,mBACzC,GAAID,GAAc,GAAKA,EAAa,EAAID,EAAMjS,OAC1C,OAAOiS,EAAMG,UAAUF,EAAa,GAG5C,MAAO,IAOXxB,EAAS2B,aAAe,SAAUC,EAAWC,GACzC,GAAID,EAAW,CACX,IAAIE,EAAuBD,EAA0B9U,KAAKsT,+BAA+BxO,EAAegQ,IAA4B,KAChIE,EAAqBhV,KAAKsT,+BAA+BxO,EAAe+P,IAC5E,OAAOE,EAAuBjQ,EAAekQ,EAAoBD,GAAwBC,EAE7F,OAAO,MAOX/B,EAASgC,uBAAyB,SAAU7B,GACxC,IAAI8B,EAAc9B,EAAO7Q,OACrB4S,EAAkB,EAOtB,OANI/B,EAAOI,QAAQlL,EAAUU,cAAgB,IACzCmM,GAAmB,GAEnB/B,EAAOI,QAAQlL,EAAUW,eAAiB,IAC1CkM,GAAmB,GAEfD,EAAc,GAAKA,IAAgBC,GAM/ClC,EAASmC,sBAAwB,SAAUhC,GACvC,IAAIiC,EAAsBjC,EAAOI,QAAQlL,EAAUU,cAAgB,EAC/DsM,EAAuBlC,EAAOI,QAAQlL,EAAUW,eAAiB,EACrE,OAAQoM,GAAuBC,GAMnCrC,EAASsC,qBAAuB,SAAUnC,EAAQoC,GAE9C,QAASpC,GAAWA,EAAOI,QAAQgC,IAAa,GAAuB,IAAlBpC,EAAO7Q,QAOhE0Q,EAASwC,oBAAsB,SAAUrC,GACrC,IAAIsC,EAAiBtC,EAOrB,OANuD,IAAnDsC,EAAelC,QAAQlL,EAAUU,cACjC0M,EAAe7Q,KAAKyD,EAAUU,cAEsB,IAApD0M,EAAelC,QAAQlL,EAAUW,eACjCyM,EAAe7Q,KAAKyD,EAAUW,cAE3ByM,GAMXzC,EAAS0C,oBAAsB,SAAUvC,GACrC,OAAOA,EAAOc,QAAO,SAAUL,GAC3B,OAAQA,IAAUvL,EAAUU,aAAe6K,IAAUvL,EAAUW,iBASvEgK,EAAS2C,+BAAiC,SAAUxC,EAAQoC,GACxD,OAAOxV,KAAKuV,qBAAqBnC,EAAQoC,GAAYlN,EAAUuN,WAAazC,GAEzEH,EAzMkB,GCIzB,EAA0B,WAC1B,SAAS6C,KA8OT,OAxOAA,EAASC,kBAAoB,SAAUC,GACnC,IAAInK,EAAM7L,KAAKiW,0BAA0BD,GACrCE,EAAeF,EAAoBG,kBAAkBC,sBAErDF,EAAa1C,QAAQ,KAAO,EAC5B0C,GAAgB,IAGhBA,GAAgB,IAEpB,IAAIG,EAAa,GAAKH,EAAerK,EAAI/D,KAAK,KAC9C,OAAOuO,GAMXP,EAASG,0BAA4B,SAAUD,GAC3C,IAAI5C,EAAS,EAASqC,oBAAoBO,EAAoB5C,QAC1DvH,EAAM,GAuBV,OAtBAA,EAAIhH,KAAK,iBAAmBmR,EAAoBM,cAChDzK,EAAIhH,KAAK,SAAWgC,mBAAmB,EAASsN,WAAWf,KAC3DvH,EAAIhH,KAAK,aAAegC,mBAAmBmP,EAAoBR,WAC/D3J,EAAIhH,KAAK,gBAAkBgC,mBAAmBmP,EAAoBO,cAClE1K,EAAIhH,KAAK,SAAWgC,mBAAmBmP,EAAoBxB,QAC3D3I,EAAIhH,KAAK,SAAWgC,mBAAmBmP,EAAoBQ,QAC3D3K,EAAIhH,KAAK,iBACTgH,EAAIhH,KAAK,gBAAkBmR,EAAoBS,YAC/C5K,EAAIhH,KAAK,gBAAkBmR,EAAoBU,YAC3CV,EAAoBrE,aACpB9F,EAAIhH,KAAK,UAAYgC,mBAAmBmP,EAAoBrE,cAE5DqE,EAAoBW,aACpB9K,EAAIhH,KAAK,UAAYgC,mBAAmBmP,EAAoBW,cAE5DX,EAAoBY,iBACpB/K,EAAIhH,KAAKmR,EAAoBY,iBAE7BZ,EAAoBa,sBACpBhL,EAAIhH,KAAKmR,EAAoBa,sBAEjChL,EAAIhH,KAAK,qBAAuBgC,mBAAmBmP,EAAoBc,gBAChEjL,GAKXiK,EAASiB,cAAgB,WACrB,OAAOtR,OAAOuR,SAASC,KAAKxP,MAAM,KAAK,GAAGA,MAAM,KAAK,IAKzDqO,EAASoB,kBAAoB,SAAUC,GACnC,OAAOA,EAAI1P,MAAM,KAAK,IAO1BqO,EAASsB,kBAAoB,SAAUD,EAAKE,GACxC,IAAIC,EAAeH,EAAI1D,cACnB8D,EAAYvX,KAAKwX,iBAAiBF,GAClCG,EAAYF,EAAUG,aAI1B,OAHIL,GAAkC,IAArBI,EAAUlV,QAAiBkV,EAAU,KAAOnP,EAAUqP,QAAUF,EAAU,KAAO/N,EAASkO,eAAiBH,EAAU,KAAO/N,EAASmO,YAClJJ,EAAU,GAAKJ,GAEZrX,KAAK8X,gCAAgCP,EAAWE,IAE3D3B,EAASgC,gCAAkC,SAAUP,EAAWE,GAC5D,OAAOzX,KAAK+X,gBAAgBR,EAAUS,SAAW,KAAOT,EAAUU,gBAAkB,IAAMR,EAAU3P,KAAK,OAO7GgO,EAASoC,kBAAoB,SAAUf,GACnC,IAAIgB,EAAYnY,KAAK+X,gBAAgBZ,GACjCM,EAAYzX,KAAKwX,iBAAiBW,GAAWT,aACjD,OAA6B,IAArBD,EAAUlV,QAAgBkV,EAAU,KAAOnP,EAAUqP,QAOjE7B,EAASsC,yBAA2B,SAAUjB,GAC1C,IAAIgB,EAAYnY,KAAK+X,gBAAgBZ,GACjCM,EAAYzX,KAAKwX,iBAAiBW,GAAWT,aACjD,OAA6B,IAArBD,EAAUlV,QAAgBkV,EAAU,KAAO/N,EAASkO,eAOhE9B,EAASuC,qBAAuB,SAAUlB,GACtC,IAAIgB,EAAYnY,KAAK+X,gBAAgBZ,GACjCM,EAAYzX,KAAKwX,iBAAiBW,GAAWT,aACjD,OAA6B,IAArBD,EAAUlV,QAAgBkV,EAAU,KAAO/N,EAASmO,WAMhE/B,EAAS0B,iBAAmB,SAAUL,GAClC,IAAKA,EACD,KAAM,eAGV,IAAImB,EAAQC,OAAO,8DACfxR,EAAQoQ,EAAIpQ,MAAMuR,GACtB,IAAKvR,GAASA,EAAMxE,OAAS,EACzB,KAAM,qBAEV,IAAIiW,EAAgB,CAChBR,SAAUjR,EAAM,GAChBkR,gBAAiBlR,EAAM,GACvB0R,aAAc1R,EAAM,IAEpB2R,EAAeF,EAAcC,aAAahR,MAAM,KASpD,OARAiR,EAAeA,EAAaxE,QAAO,SAAUyE,GAAO,OAAOA,GAAOA,EAAIpW,OAAS,KAC/EiW,EAAcd,aAAegB,EACzB3R,EAAM,KACNyR,EAAcI,OAAS7R,EAAM,IAE7BA,EAAM,KACNyR,EAAcK,KAAO9R,EAAM,IAExByR,GAOX1C,EAASiC,gBAAkB,SAAUZ,GACjC,GAAIA,EAAK,CACL,IAAIG,EAAeH,EAAI1D,cAIvB,OAHKqC,EAASgD,SAASxB,EAAc,OACjCA,GAAgB,KAEbA,EAEX,OAAOH,GASXrB,EAASgD,SAAW,SAAU3B,EAAK4B,GAC/B,SAAK5B,IAAQ4B,KAG+C,IAArD5B,EAAI3D,QAAQuF,EAAQ5B,EAAI5U,OAASwW,EAAOxW,SAOnDuT,EAASkD,8BAAgC,SAAU7B,EAAK5L,GACpD,GAAII,EAAYC,QAAQuL,GACpB,OAAOA,EAEX,IAAI8B,EAAa9B,EACb+B,EAAQ,IAAIX,OAAO,OAAShN,EAAO,WAQvC,OAPA0N,EAAa9B,EAAIrQ,QAAQoS,EAAO,IAEhCA,EAAQ,IAAIX,OAAO,IAAMhN,EAAO,YAChC0N,EAAa9B,EAAIrQ,QAAQoS,EAAO,IAEhCA,EAAQ,IAAIX,OAAO,IAAMhN,EAAO,WAChC0N,EAAa9B,EAAIrQ,QAAQoS,EAAO,IACzBD,GAQXnD,EAASqD,eAAiB,SAAUC,GAChC,IAAIC,EAAaD,EAAoB5F,QAAQ,KACzC8F,EAAaF,EAAoB5F,QAAQ,MAC7C,OAAI8F,GAAc,EACPF,EAAoBzE,UAAU2E,EAAa,GAE7CD,GAAc,EACZD,EAAoBzE,UAAU0E,EAAa,GAE/CD,GAOXtD,EAASyD,gBAAkB,SAAUC,GACjC,IAAIC,EAAa3D,EAAS4D,gBAAgBF,GAC1C,OAAQC,EAAW/X,eAAe2D,EAAoBsU,oBAClDF,EAAW/X,eAAe2D,EAAoBuU,QAC9CH,EAAW/X,eAAe2D,EAAoBwU,eAC9CJ,EAAW/X,eAAe2D,EAAoByU,WAOtDhE,EAAS4D,gBAAkB,SAAUK,GACjC,IAAIC,EAAOlE,EAASqD,eAAeY,GACnC,OAAOzU,EAAYyC,YAAYiS,IASnClE,EAASmE,eAAiB,SAAUC,GAEhC,IAAIC,EAAelT,OAAOiT,GAAKpT,QAAQ,iBAAkB,IAEzD,OADAqT,EAAeA,EAAa1S,MAAM,KAAK,GAChC0S,GAEJrE,EA/OkB,GCFzB,EAAgC,WAChC,SAASsE,EAAejC,EAAW3C,EAAUpC,EAAQiH,EAAKC,GACtDta,KAAKmY,UAAY,EAASJ,gBAAgBI,GAC1CnY,KAAKwV,SAAWA,EAChBxV,KAAKoT,OAASA,EACdpT,KAAKua,sBAAwBjV,EAAYoB,aAAa2T,GAAO,IAAM/U,EAAYoB,aAAa4T,GAEhG,OAAOF,EAPwB,GCF/BI,EAAkC,WAClC,SAASA,EAAiBC,EAAa3M,EAAS4M,EAAWH,GACvDva,KAAKya,YAAcA,EACnBza,KAAK8N,QAAUA,EACf9N,KAAK0a,UAAYA,EACjB1a,KAAKua,sBAAwBA,EAEjC,OAAOC,EAP0B,GCL1BG,EAAU,SCYjB,EAAyC,WAUzC,SAASC,EAAwBzC,EAAW3C,EAAUc,EAAcC,EAAanD,EAAQoB,EAAOsC,GAC5F9W,KAAKmW,kBAAoBgC,EACzBnY,KAAKwV,SAAWA,EAChBxV,KAAKwW,MAAQlR,EAAYC,gBAEzBvF,KAAKoT,OAASA,EAAStO,EAAesO,GAAU9K,EAAUuN,WAC1D7V,KAAKoT,OAAS,EAASW,WAAW/T,KAAKoT,QAEvCpT,KAAKwU,MAAQA,EAEbxU,KAAK8W,cAAgBA,EAErB9W,KAAKyW,WAAa,UAClBzW,KAAK0W,WAAa,EAClB1W,KAAKsW,aAAeA,EACpBtW,KAAKuW,YAAcA,EA0NvB,OAxNAlV,OAAOkH,eAAeqS,EAAwB9Y,UAAW,YAAa,CAClE0G,IAAK,WACD,OAAOxI,KAAKmW,kBAAoBnW,KAAKmW,kBAAkB0E,mBAAqB,MAEhFpS,YAAY,EACZC,cAAc,IAUlBkS,EAAwB9Y,UAAUgZ,oBAAsB,SAAUC,EAASC,EAASC,EAAmBC,GACnG,IAAItE,EAAkB,GAClBoE,IAEIA,EAAQG,SACRnb,KAAK2R,YAAcqJ,EAAQG,QAG3BH,EAAQI,gBACRpb,KAAK2W,YAAcqE,EAAQI,eAG3BR,EAAwBS,WAAWL,KACnCpE,EAAkB5W,KAAKsb,oCAAoCN,EAAS,QAGxEC,IACArE,EAAkB5W,KAAKsb,oCAAoC,KAAML,IAMrErE,EAAkB5W,KAAKub,kBAAkBR,EAASnE,GAElD,IAAI4E,EAAWR,EAAUA,EAAQnE,qBAAuB,KAExD7W,KAAK4W,gBAAkBgE,EAAwBa,8BAA8B7E,GAC7E5W,KAAK6W,qBAAuB+D,EAAwBa,8BAA8BD,EAAUN,IAYhGN,EAAwB9Y,UAAUwZ,oCAAsC,SAAUN,EAASU,GACvF,IAAI3J,EAEA4J,EACAC,EACAC,EAAiB,GAErB,GAAIb,EACA,GAAIA,EAAQD,QAAS,CACjB,IAAIA,EAAUC,EAAQD,SACe,QAAhChJ,EAAKgJ,EAAQe,qBAAkC,IAAP/J,OAAgB,EAASA,EAAGgK,aACrEJ,EAAUjS,EAASO,WACnB2R,EAAUb,EAAQe,cAAcC,YAE3BhB,EAAQiB,KACbL,EAAUjS,EAASM,IACnB4R,EAAUb,EAAQiB,KAEbjB,EAAQkB,WACbN,EAAUjS,EAASO,WACnB2R,EAAUb,EAAQkB,eAIjBjB,EAAQgB,KACbL,EAAUjS,EAASM,IACnB4R,EAAUZ,EAAQgB,KAGbhB,EAAQkB,YACbP,EAAUjS,EAASO,WACnB2R,EAAUZ,EAAQkB,gBAIjBR,GACDA,EAAcha,eAAe4G,EAAU6T,OACvCR,EAAUjS,EAASoQ,SACnB8B,EAAUF,EAAc,QAIhC,OADAG,EAAiB7b,KAAKoc,gBAAgBT,EAASC,GACxCC,GAgBXjB,EAAwB9Y,UAAUyZ,kBAAoB,SAAUR,EAASsB,GACrE,IAAItK,EAAIuK,EAKJC,EAAUF,EAiBd,OAhBItB,IACKwB,EAAQ7S,EAASM,MAASuS,EAAQ7S,EAASO,eACP,QAAhC8H,EAAKgJ,EAAQe,qBAAkC,IAAP/J,OAAgB,EAASA,EAAGgK,YAErEQ,EAAUvc,KAAKoc,gBAAgB1S,EAASO,WAA6C,QAAhCqS,EAAKvB,EAAQe,qBAAkC,IAAPQ,OAAgB,EAASA,EAAGP,WAAYQ,GAEhIxB,EAAQiB,KAAOhc,KAAK2R,cAAgBtH,EAAYI,KAErD8R,EAAUvc,KAAKoc,gBAAgB1S,EAASM,IAAK+Q,EAAQiB,IAAKO,GAErDxB,EAAQkB,WAEbM,EAAUvc,KAAKoc,gBAAgB1S,EAASO,WAAY8Q,EAAQkB,SAAUM,MAI3EA,GAMX3B,EAAwB9Y,UAAUsa,gBAAkB,SAAUT,EAASC,EAASS,GAC5E,IAAIG,EAAWH,GAAU,GACzB,IAAKT,EACD,OAAOY,EAEX,OAAQb,GACJ,KAAKjS,EAASM,IACVwS,EAAS9S,EAASM,KAAO4R,EACzB,MAEJ,KAAKlS,EAASoQ,SACV0C,EAAS9S,EAASO,YAAc2R,EAChC,MAEJ,KAAKlS,EAASO,WACVuS,EAAS9S,EAASO,YAAc2R,EAChC,MAGR,OAAOY,GAMX5B,EAAwBa,8BAAgC,SAAU7E,EAAiBsE,GAC/E,IAAIuB,EAAe,KAenB,OAdI7F,GACAvV,OAAOuR,KAAKgE,GAAiB8F,SAAQ,SAAUnN,GAEvCA,IAAQjH,EAAUqU,cAAgBzB,GAActE,EAAgBlN,EAASM,QAGxEyS,EAIDA,GAAgB,IAAMlN,EAAM,IAAM1I,mBAAmB+P,EAAgBrH,IAHrEkN,EAAelN,EAAM,IAAM1I,mBAAmB+P,EAAgBrH,QAOnEkN,GAOX7B,EAAwBS,WAAa,SAAUL,GAC3C,SAAUA,KAAYA,EAAQD,SAAWC,EAAQgB,KAAOhB,EAAQkB,aAQpEtB,EAAwBgC,sBAAwB,SAAUC,EAAezJ,GAErE,OAAI,EAAS6B,uBAAuB7B,GACzB9J,EAAcC,SAGlB,EAAkBvJ,KAAK8c,gCAAgC1J,GAAU9J,EAAcG,gBAO1FmR,EAAwBkC,gCAAkC,SAAU1J,GAEhE,OAAQ,EAASgC,sBAAsBhC,GAAW9J,EAAcG,eAAiBH,EAAcE,OAE5FoR,EAnPiC,GCJxC,EAA2B,WAC3B,SAASmC,KAwDT,OAtDAA,EAAUjb,UAAUkb,iBAAmB,SAAU7F,EAAK8F,EAAQC,GAC1D,IAAI5R,EAAQtL,KACZ,OAAO,IAAIkD,SAAQ,SAAUD,EAASE,GAClC,IAAIga,EAAM,IAAIC,eA4Bd,GA3BAD,EAAIE,KAAKJ,EAAQ9F,GAAkB,GAOnCgG,EAAIG,OAAS,WAIT,IAAIC,GAHAJ,EAAIK,OAAS,KAAOL,EAAIK,QAAU,MAClCra,EAAOmI,EAAMmS,YAAYN,EAAIO,eAGjC,IACIH,EAAevR,KAAKC,MAAMkR,EAAIO,cAElC,MAAOna,GACHJ,EAAOmI,EAAMmS,YAAYN,EAAIO,eAEjC,IAAIC,EAAW,CACXC,WAAYT,EAAIK,OAChB3Z,KAAM0Z,GAEVta,EAAQ0a,IAEZR,EAAIU,QAAU,WACV1a,EAAOga,EAAIK,SAEXP,IAAW/S,EAAmBC,IAI9B,KAAM,kBAHNgT,EAAIW,WAOhBf,EAAUjb,UAAU2b,YAAc,SAAUC,GACxC,IAAIH,EACJ,IAEI,GADAA,EAAevR,KAAKC,MAAMyR,GACtBH,EAAa,SACb,OAAOA,EAAa,SAGpB,MAAMG,EAGd,MAAOna,GACH,OAAOma,IAGRX,EAzDmB,GCF1B,EAAkC,WAClC,SAASgB,KAiFT,OA1EAA,EAAiBC,gCAAkC,SAAUC,EAAmBC,GACxED,IAAsBje,KAAKme,qBAAqB5b,QAChD2b,EAAiBxB,SAAQ,SAAUvE,GAC/B4F,EAAiBK,gBAAgBvZ,KAAKsT,EAAU1E,mBAS5DsK,EAAiBM,WAAa,SAAUC,EAAmBC,EAAkBzH,GACzE,OAAOpU,EAAU1C,UAAM,OAAQ,GAAQ,WACnC,IAAIwe,EAAQC,EAAYC,EAA2BC,EACnD,OAAO/a,EAAY5D,MAAM,SAAU+R,GAK/B,OAJAyM,EAAS,IAAI,EACbC,EAAavU,EAAmBC,IAChCuU,EAA4B,GAAK9U,EAAkC0U,EAAoB,wBACvFK,EAAYJ,EAAiBK,wBAAwB9H,EAAe2H,EAAYC,EAA2B,cACpG,CAAC,EAAcF,EAAOxB,iBAAiB0B,EAA2BD,GAAY,GAC5E9a,MAAK,SAAUga,GAGhB,OAFAgB,EAAUE,mBAAqBlB,EAASC,WACxCW,EAAiBO,UAAUH,GACpBhB,EAAS9Z,KAAK,eAEpBkb,OAAM,SAAUC,GAGjB,MAFAL,EAAUM,gBAAkBD,EAC5BT,EAAiBO,UAAUH,GACrBK,aAU1BjB,EAAiBmB,iCAAmC,SAAUZ,EAAmBC,EAAkBzH,GAC/F,OAAOpU,EAAU1C,UAAM,OAAQ,GAAQ,WACnC,IAAImf,EAAU/M,EACd,OAAOxO,EAAY5D,MAAM,SAAU+R,GAC/B,OAAQA,EAAG7N,OACP,KAAK,EAAG,MAAO,CAAC,EAAalE,KAAKqe,WAAWC,EAAmBC,EAAkBzH,IAClF,KAAK,EAaD,OAZAqI,EAAWpN,EAAG5N,OACdgb,EAASzC,SAAQ,SAAU0C,GACvB,IAAIC,EAAcD,EAAM,WACxBC,EAAY3C,SAAQ,SAAUvE,GAC1B4F,EAAiBK,gBAAgBvZ,KAAKsT,EAAU1E,qBAGxDrB,EAAO,EAASoF,iBAAiB8G,GAAmBrG,gBAChD8F,EAAiBI,qBAAqB5b,SAAWwb,EAAiBuB,oBAAoBlN,IAEtF2L,EAAiBK,gBAAgBvZ,KAAKuN,EAAKqB,eAExC,CAAC,WAK5BsK,EAAiBI,mBAAqB,WAClC,OAAOne,KAAKoe,iBAMhBL,EAAiBuB,oBAAsB,SAAUlN,GAC7C,OAAOpS,KAAKoe,gBAAgB5K,QAAQpB,EAAKqB,gBAAkB,GAE/DsK,EAAiBK,gBAAkB,GAC5BL,EAlF0B,IZMrC,SAAWjU,GACPA,EAAcA,EAAc,WAAa,GAAK,UAC9CA,EAAcA,EAAc,QAAU,GAAK,QAF/C,CAGGA,IAAkBA,EAAgB,KAIrC,IafWyV,EbeP,EAA2B,WAC3B,SAASC,EAAUrH,EAAW8F,EAAmBwB,GAC7Czf,KAAK0f,oBAAsBzB,EAC3Bje,KAAK6a,mBAAqB1C,EAC1BnY,KAAK2f,gBACL3f,KAAK4f,wBAA0BH,EA8KnC,OA5KAD,EAAUK,OAAS,SAAUC,GACzB,IAAIC,EAAa,EAASvI,iBAAiBsI,GACvCpH,EAAeqH,EAAWrI,aAC9B,OAAQgB,EAAanW,QAAUmW,EAAa,GAAGjF,gBAAkBnL,EAAU0X,MAE/E3e,OAAOkH,eAAeiX,EAAU1d,UAAW,gBAAiB,CACxD0G,IAAK,WACD,OAAOgX,EAAUK,OAAO7f,KAAKigB,oBAAsBnW,EAAcoW,KAAOpW,EAAcqW,SAE1F1X,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeiX,EAAU1d,UAAW,SAAU,CACjD0G,IAAK,WACD,OAAOxI,KAAKogB,gCAAgC1I,aAAa,IAE7DjP,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeiX,EAAU1d,UAAW,wBAAyB,CAChE0G,IAAK,WAED,OADAxI,KAAKqgB,mBACErgB,KAAK4f,wBAAwBxJ,sBAAsBtP,QAAQ,uBAAwB9G,KAAKsgB,SAEnG7X,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeiX,EAAU1d,UAAW,qBAAsB,CAC7D0G,IAAK,WAED,OADAxI,KAAKqgB,mBACErgB,KAAK4f,wBAAwBW,mBAAmBzZ,QAAQ,uBAAwB9G,KAAKsgB,SAEhG7X,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeiX,EAAU1d,UAAW,wBAAyB,CAChE0G,IAAK,WAED,OADAxI,KAAKqgB,mBACErgB,KAAK4f,wBAAwBY,OAAO1Z,QAAQ,uBAAwB9G,KAAKsgB,SAEpF7X,YAAY,EACZC,cAAc,IAElB8W,EAAU1d,UAAUue,iBAAmB,WACnC,IAAKrgB,KAAKygB,oBACN,KAAM,2CAGdpf,OAAOkH,eAAeiX,EAAU1d,UAAW,qBAAsB,CAI7D0G,IAAK,WACD,OAAOxI,KAAKigB,oBAEhBrX,IAAK,SAAUuO,GACXnX,KAAKigB,mBAAqB,EAASlI,gBAAgBZ,GACnDnX,KAAK0gB,gCAAkC,MAE3CjY,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeiX,EAAU1d,UAAW,kCAAmC,CAC1E0G,IAAK,WAID,OAHKxI,KAAK0gB,kCACN1gB,KAAK0gB,gCAAkC,EAASlJ,iBAAiBxX,KAAK6a,qBAEnE7a,KAAK0gB,iCAEhBjY,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeiX,EAAU1d,UAAW,qCAAsC,CAE7E0G,IAAK,WACD,OAAQxI,KAAK8J,gBAAkBA,EAAcoW,KAAQ,GAAKlgB,KAAK6a,mBAAqBhR,EAAoB7J,KAAK6a,mBAAqB,QAAUhR,GAEhJpB,YAAY,EACZC,cAAc,IAKlB8W,EAAU1d,UAAU6d,cAAgB,WAChC,IAAII,EACJ,IACIA,EAAa/f,KAAKogB,gCAEtB,MAAO7c,GACH,MAAMkM,EAAgCS,qBAE1C,IAAK6P,EAAW/H,UAAkD,WAAtC+H,EAAW/H,SAASvE,cAC5C,MAAMhE,EAAgCU,qBAE1C,IAAK4P,EAAWrI,cAAgBqI,EAAWrI,aAAanV,OAAS,EAC7D,MAAMkN,EAAgCW,yBAM9CoP,EAAU1d,UAAU6e,kBAAoB,SAAUC,EAA6BrC,EAAkBzH,GAC7F,IAAI0H,EAAS,IAAI,EACbC,EAAavU,EAAmBC,IAChCwU,EAAYJ,EAAiBK,wBAAwB9H,EAAe2H,EAAYmC,EAA6B,+BACjH,OAAOpC,EAAOxB,iBAAiB4D,EAA6BnC,GAAiC,GACxF9a,MAAK,SAAUga,GAGhB,OAFAgB,EAAUE,mBAAqBlB,EAASC,WACxCW,EAAiBO,UAAUH,GACpB,CACHvI,sBAAuBuH,EAAS9Z,KAAK,0BACrC0c,mBAAoB5C,EAAS9Z,KAAK,wBAClC2c,OAAQ7C,EAAS9Z,KAAK,cAGzBkb,OAAM,SAAUC,GAGjB,MAFAL,EAAUM,gBAAkBD,EAC5BT,EAAiBO,UAAUH,GACrBK,MASdQ,EAAU1d,UAAU+e,sBAAwB,SAAUtC,EAAkBzH,GACpE,OAAOpU,EAAU1C,UAAM,OAAQ,GAAQ,WACnC,IAAIoS,EAAM0O,EAAqC/O,EAC/C,OAAOnO,EAAY5D,MAAM,SAAUsc,GAC/B,OAAQA,EAAGpY,OACP,KAAK,EACD,OAAKlE,KAAK0f,qBACVtN,EAAOpS,KAAK0gB,gCAAgCzI,gBACW,IAAjD,EAAiBkG,qBAAqB5b,OAAsB,CAAC,EAAa,GACzE,CAAC,EAAa,EAAiB2c,iCAAiClf,KAAKigB,mBAAoB1B,EAAkBzH,KAH5E,CAAC,EAAa,GAIxD,KAAK,EACDwF,EAAGnY,OACHmY,EAAGpY,MAAQ,EACf,KAAK,EACD,IAAK,EAAiBob,oBAAoBlN,GACtC,MAAM,EAAyBD,8BAA8BC,GAEjEkK,EAAGpY,MAAQ,EACf,KAAK,EAGD,OAFA4c,EAAsC9gB,KAAK+gB,iCAC3ChP,EAAK/R,KACE,CAAC,EAAaA,KAAK2gB,kBAAkBG,EAAqCvC,EAAkBzH,IACvG,KAAK,EAED,OADA/E,EAAG6N,wBAA0BtD,EAAGnY,OACzB,CAAC,EAAcnE,KAAK4f,iCAQ/CJ,EAAU1d,UAAU2e,kBAAoB,WACpC,SAAUzgB,KAAK4f,yBACX5f,KAAK4f,wBAAwBxJ,uBAC7BpW,KAAK4f,wBAAwBW,oBAC7BvgB,KAAK4f,wBAAwBY,SAMrChB,EAAU1d,UAAUif,+BAAiC,WACjD,OAAO/gB,KAAKghB,oCAETxB,EAnLmB,GcX1B,EAA4B,WAC5B,SAASyB,EAAWC,EAAe/I,GAC/B,IAAK+I,GAAiBvV,EAAYC,QAAQsV,GAGtC,OAFAlhB,KAAKqa,IAAM,QACXra,KAAKsa,KAAO,IAGhB,IACI,IAAI6G,EAAoB7b,EAAY8B,aAAa8Z,GAC7CE,EAAapV,KAAKC,MAAMkV,GACxBC,IACIA,EAAW1f,eAAe,SAC1B1B,KAAKqa,IAAMlC,EAAY8I,EAAWI,mBAAmBD,EAAW/G,IAAKlC,GAAaiJ,EAAW/G,KAE7F+G,EAAW1f,eAAe,UAC1B1B,KAAKsa,KAAO8G,EAAW9G,OAInC,MAAO/W,GACH,MAAM,EAAgBqL,8BAA8BrL,IAoD5D,OAjDAlC,OAAOkH,eAAe0Y,EAAWnf,UAAW,MAAO,CAC/C0G,IAAK,WACD,OAAOxI,KAAKshB,KAAOthB,KAAKshB,KAAO,IAEnC1Y,IAAK,SAAUyR,GACXra,KAAKshB,KAAOjH,GAEhB5R,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAe0Y,EAAWnf,UAAW,OAAQ,CAChD0G,IAAK,WACD,OAAOxI,KAAKuhB,MAAQvhB,KAAKuhB,MAAQ,IAErC3Y,IAAK,SAAU0R,GACXta,KAAKuhB,MAAQjH,GAEjB7R,YAAY,EACZC,cAAc,IAElBuY,EAAWO,4BAA8B,SAAU1T,EAASqK,GACxD,IAAIiJ,EAAa,CACb/G,IAAKvM,EAAQ2T,QACbnH,KAAM,IAEV,OAAO,IAAI2G,EAAW3b,EAAYoB,aAAasF,KAAK0V,UAAUN,IAAcjJ,IAEhF8I,EAAWI,mBAAqB,SAAUhH,EAAKlC,GAC3C,IAAIwJ,EAActH,EAAI5S,MAAM,KAExBma,EAAczJ,EAAU1Q,MAAM,KAAKoa,UACnCC,EAAS,GAQb,OAPKnW,EAAYC,QAAQgW,EAAY,IAG5BA,EAAYrf,OAAS,IAE1Buf,EAASF,EAAY,IAJrBE,EAASF,EAAY,GAMrBD,EAAYA,EAAYpf,OAAS,KAAOuf,EAEjCH,EAAY9Z,MAAM,EAAG8Z,EAAYpf,OAAS,GAAGuF,KAAK,KAEtDuS,GAEX4G,EAAWnf,UAAUigB,iBAAmB,WACpC,IAAIX,EAAapV,KAAK0V,UAAU,CAAErH,IAAKra,KAAKqa,IAAKC,KAAMta,KAAKsa,OAC5D,OAAOhV,EAAYoB,aAAa0a,IAE7BH,EAxEoB,GCH3Be,EAA2B,WAC3B,SAASA,KAwBT,OAjBAA,EAAUC,eAAiB,SAAUvH,GAEjC,IAAIwH,EAAUxH,GAAa,OAC3B,OAAOyH,SAASD,EAAS,KAK7BF,EAAUI,IAAM,WACZ,OAAOlc,KAAKmc,OAAM,IAAIC,MAAOC,UAAY,MAK7CP,EAAUQ,cAAgB,WACtB,OAAO/c,OAAOgd,YAAYL,OAEvBJ,EAzBmB,GCG1B,EAA4B,WAC5B,SAASU,KA0DT,OAnDAA,EAAWC,UAAY,SAAUC,GAC7B,GAAIjX,EAAYC,QAAQgX,GACpB,OAAO,KAEX,IAAIC,EAAoB,uCACpBC,EAAUD,EAAkBxa,KAAKua,GACrC,IAAKE,GAAWA,EAAQvgB,OAAS,EAE7B,OAAO,KAEX,IAAIwgB,EAAe,CACfC,OAAQF,EAAQ,GAChBG,WAAYH,EAAQ,GACpBI,OAAQJ,EAAQ,IAEpB,OAAOC,GAMXL,EAAWS,iCAAmC,SAAUC,EAAYC,GAChE,IAAIC,EAASD,GAA6B,IAC1C,OAAOD,GAAeA,EAAapB,EAAUI,MAAQkB,GAOzDZ,EAAWa,eAAiB,SAAUC,GAElC,IAAIC,EAAezjB,KAAK2iB,UAAUa,GAClC,IAAKC,EACD,OAAO,KAEX,IACI,IAAIC,EAAgBD,EAAa,cAC7BE,EAAgBre,EAAY8B,aAAasc,GAC7C,OAAKC,EAKE3X,KAAKC,MAAM0X,GAHP,KAKf,MAAO3E,IAGP,OAAO,MAEJ0D,EA3DoB,GCA3B,EAAyB,WAEzB,SAASkB,EAAQC,GACb,GAAIlY,EAAYC,QAAQiY,GACpB,MAAM,EAAgB9U,8BAA8B8U,GAExD,IACI7jB,KAAK6jB,WAAaA,EAClB7jB,KAAK8jB,OAAS,EAAWP,eAAeM,GACpC7jB,KAAK8jB,SACD9jB,KAAK8jB,OAAOpiB,eAAe,SAC3B1B,KAAK+jB,OAAS/jB,KAAK8jB,OAAO,QAE1B9jB,KAAK8jB,OAAOpiB,eAAe,SAC3B1B,KAAKgkB,SAAWhkB,KAAK8jB,OAAO,QAE5B9jB,KAAK8jB,OAAOpiB,eAAe,SAC3B1B,KAAKyhB,QAAUzhB,KAAK8jB,OAAO,QAE3B9jB,KAAK8jB,OAAOpiB,eAAe,SAC3B1B,KAAKqX,SAAWrX,KAAK8jB,OAAO,QAE5B9jB,KAAK8jB,OAAOpiB,eAAe,SAC3B1B,KAAK2a,QAAU3a,KAAK8jB,OAAO,QAE3B9jB,KAAK8jB,OAAOpiB,eAAe,sBAC3B1B,KAAKikB,cAAgBjkB,KAAK8jB,OAAO,sBAE5B9jB,KAAK8jB,OAAOpiB,eAAe,SAChC1B,KAAKikB,cAAgBjkB,KAAK8jB,OAAO,QAEjC9jB,KAAK8jB,OAAOpiB,eAAe,UAC3B1B,KAAKuL,KAAOvL,KAAK8jB,OAAO,SAExB9jB,KAAK8jB,OAAOpiB,eAAe,WAC3B1B,KAAKwW,MAAQxW,KAAK8jB,OAAO,UAEzB9jB,KAAK8jB,OAAOpiB,eAAe,SAC3B1B,KAAKojB,WAAapjB,KAAK8jB,OAAO,QAE9B9jB,KAAK8jB,OAAOpiB,eAAe,cAC3B1B,KAAKkkB,aAAelkB,KAAK8jB,OAAO,aAEhC9jB,KAAK8jB,OAAOpiB,eAAe,SAC3B1B,KAAKgc,IAAMhc,KAAK8jB,OAAO,QAEvB9jB,KAAK8jB,OAAOpiB,eAAe,8BAC3B1B,KAAKmkB,cAAgBnkB,KAAK8jB,OAAO,8BAK7C,MAAOvgB,GAKH,MAAM,EAAgB0L,0BAA0B1L,IAGxD,OAAOqgB,EA5DiB,GCHxBQ,EAAsC,WACtC,SAASA,EAAqB7U,EAAKvM,GAC/BhD,KAAKuP,IAAMA,EACXvP,KAAKgD,MAAQA,EAEjB,OAAOohB,EAL8B,GCErC,EAAgC,WAChC,SAASC,EAAeC,GACpB,IAAK7e,OACD,MAAM,EAAUiG,0BAA0B,sDAE9C,IAAI6Y,EAAoD,qBAA1B9e,OAAO6e,IAA4D,OAA1B7e,OAAO6e,GAC9E,IAAKC,EACD,MAAM,EAAyBtT,+BAA+BqT,GAElEtkB,KAAKskB,cAAgBA,EAsFzB,OA9EAD,EAAeviB,UAAU0iB,QAAU,SAAUjV,EAAKvM,EAAOyhB,GACrDhf,OAAOzF,KAAKskB,eAAeE,QAAQjV,EAAKvM,GACpCyhB,GACAzkB,KAAK0kB,cAAcnV,EAAKvM,IAQhCqhB,EAAeviB,UAAU6iB,QAAU,SAAUpV,EAAKkV,GAC9C,OAAIA,GAAuBzkB,KAAK4kB,cAAcrV,GACnCvP,KAAK4kB,cAAcrV,GAEvB9J,OAAOzF,KAAKskB,eAAeK,QAAQpV,IAM9C8U,EAAeviB,UAAU+iB,WAAa,SAAUtV,GAC5C,OAAO9J,OAAOzF,KAAKskB,eAAeO,WAAWtV,IAKjD8U,EAAeviB,UAAUgjB,MAAQ,WAC7B,OAAOrf,OAAOzF,KAAKskB,eAAeQ,SAQtCT,EAAeviB,UAAU4iB,cAAgB,SAAUK,EAAOC,EAAQ9C,GAC9D,IAAI+C,EAAYpe,mBAAmBke,GAAS,IAAMle,mBAAmBme,GAAU,WAC/E,GAAI9C,EAAS,CACT,IAAIgD,EAAallB,KAAKmlB,wBAAwBjD,GAC9C+C,GAAa,WAAaC,EAAa,IAE3CE,SAASC,OAASJ,GAMtBZ,EAAeviB,UAAU8iB,cAAgB,SAAUG,GAG/C,IAFA,IAAIxZ,EAAO1E,mBAAmBke,GAAS,IACnCO,EAAKF,SAASC,OAAO5d,MAAM,KACtBrF,EAAI,EAAGA,EAAIkjB,EAAG/iB,OAAQH,IAAK,CAChC,IAAIuF,EAAI2d,EAAGljB,GACX,MAAuB,MAAhBuF,EAAE4d,OAAO,GACZ5d,EAAIA,EAAEgN,UAAU,GAEpB,GAAwB,IAApBhN,EAAE6L,QAAQjI,GACV,OAAOhE,mBAAmBI,EAAEgN,UAAUpJ,EAAKhJ,OAAQoF,EAAEpF,SAG7D,MAAO,IAMX8hB,EAAeviB,UAAU0jB,gBAAkB,SAAUT,GACjD/kB,KAAK0kB,cAAcK,EAAO,IAAK,IAMnCV,EAAeviB,UAAUqjB,wBAA0B,SAAUM,GACzD,IAAIC,EAAQ,IAAIpD,KACZqD,EAAO,IAAIrD,KAAKoD,EAAMnD,UAA6B,GAAjBkD,EAAsB,GAAK,GAAK,KACtE,OAAOE,EAAKC,eAETvB,EA/FwB,GCM/B,EAA8B,WAC9B,SAASwB,KAmKT,OAvJAA,EAAaC,gBAAkB,SAAU9K,EAAS+K,EAAavQ,EAAUwQ,GAErE,IAAKD,IAAgB/K,EACjB,MAAM,EAAyBlJ,0BAEnC,IAAIsB,EACAyD,EACAmE,IAEA5H,EAAS2S,EAAc,EAASnR,aAAaoG,EAAQ5H,OAAQ4H,EAAQiL,sBAAwBjL,EAAQ5H,OACrG,EAASiB,mBAAmBjB,GAAS2S,GACrC3S,EAAS,EAASwC,+BAA+BxC,EAAQoC,GAEzDxV,KAAKkmB,wBAAwBlL,EAAQG,QAErCtE,EAAuB7W,KAAKmmB,qBAAqBnL,EAAQnE,qBAAsBmE,EAAQI,eAEvFpb,KAAKomB,sBAAsBpL,EAAQI,gBAGvC,IAAI5G,EAAQxU,KAAKqmB,yBAAyBrL,GAAWA,EAAQxG,MAAOwR,GAChElP,EAAgB9W,KAAKsmB,iCAAiCtL,GAAWA,EAAQlE,eACzEyP,EAAmBvkB,EAASA,EAAS,GAAIgZ,GAAU,CAAEnE,qBAAsBA,EAC3EzD,OAAQA,EACRoB,MAAOA,EACPsC,cAAeA,IACnB,OAAOyP,GAQXV,EAAaK,wBAA0B,SAAU/K,GAC7C,GAAIA,GACI,CAAC9Q,EAAYC,MAAOD,EAAYE,eAAgBF,EAAYG,QAASH,EAAYI,MAAM+I,QAAQ2H,GAAU,EACzG,MAAM,EAAyBzJ,yBAAyByJ,IAUpE0K,EAAaM,qBAAuB,SAAUtP,EAAsBuE,GAChE,IAAII,EAAWxZ,EAAS,GAAI6U,GAC5B,OAAK2E,GAGDJ,UAEOI,EAASlT,EAAUwb,QAE9B/Z,EAAmB2S,SAAQ,SAAU8J,GAC7BhL,EAASgL,WAEFhL,EAASgL,MAGjBhL,GAZI,MAqBfqK,EAAaO,sBAAwB,SAAUhL,GAC3C,GAAKA,EAGL,IACIpP,KAAKC,MAAMmP,GAEf,MAAO7X,GACH,MAAM,EAAyBqO,gCAAgCrO,KAUvEsiB,EAAaQ,yBAA2B,SAAUI,EAAWT,GACzD,OAAQra,EAAYC,QAAQ6a,GAAiHZ,EAAaa,qBAAqBV,GAAtI,GAAKH,EAAaa,qBAAqBV,GAAmB1d,EAAUoM,kBAAoB+R,GAOrIZ,EAAaa,qBAAuB,SAAUV,GAC1C,IAAIW,EAAc,CACdC,GAAIthB,EAAYC,gBAChBshB,GAAI7E,EAAUI,MACdnF,OAAQ+I,GAERc,EAAc9a,KAAK0V,UAAUiF,GACjC,OAAOrhB,EAAYoB,aAAaogB,IAQpCjB,EAAakB,kBAAoB,SAAUvS,GACvC,IAAIwS,EAAezf,mBAAmBiN,GAAO/M,MAAMa,EAAUoM,mBAAmB,GAChF,GAAIpP,EAAYc,OAAO4gB,GAEnB,MAAO,CACHJ,GAAII,EACJH,GAAI7E,EAAUI,MACdnF,OAAQ3U,EAAU2e,yBAG1B,IACI,IAAIH,EAAcxhB,EAAY8B,aAAa4f,GACvCL,EAAc3a,KAAKC,MAAM6a,GAC7B,OAAOH,EAEX,MAAOpjB,GACH,MAAM,EAAgBwK,wBAAwByG,EAAO,QAS7DqR,EAAaS,iCAAmC,SAAUxP,GAEtD,GAAIA,IAAkBxR,EAAYc,OAAO0Q,GACrC,MAAM,EAAyB9E,kCAEnC,OAAO1M,EAAYc,OAAO0Q,GAAiBA,EAAgBxR,EAAYC,iBAM3EsgB,EAAaqB,uBAAyB,SAAUlM,GAC5C,MAAO,GAAKA,EAAQ5H,OAAOtL,KAAK,KAAK2L,cAAgBnL,EAAUoM,kBAAoBsG,EAAQ7C,WAExF0N,EApKsB,GCA7B,EAA2B,SAAU3a,GAErC,SAASic,EAAU3R,EAAU8O,EAAe8C,GACxC,IAAI9b,EAAQJ,EAAO1I,KAAKxC,KAAMskB,IAAkBtkB,KAMhD,OALAsL,EAAM+b,eAAiB,IAAI,EAAene,GAC1CoC,EAAMkK,SAAWA,EAEjBlK,EAAMgc,iBAAkB,EACxBhc,EAAMic,oBAAoBH,GACnB9b,EA8VX,OAtWA3J,EAAUwlB,EAAWjc,GAcrBic,EAAUrlB,UAAUylB,oBAAsB,SAAUH,GAChD,IAMItZ,EANAxC,EAAQtL,KACRwnB,EAAalf,EAAUmf,YAAc,IAAMre,EAAoBse,QAC/DC,EAAgBrf,EAAUmf,YAAc,IAAMre,EAAoBwe,YAClEC,EAAWvf,EAAUmf,YAAc,IAAMpe,EAAeuQ,MACxDkO,EAAexf,EAAUmf,YAAc,IAAMpe,EAAe0e,WAC5DC,EAAe9c,EAAOpJ,UAAU6iB,QAAQniB,KAAKxC,KAAMwnB,GAEvD,GAAIQ,EACA,IACIla,EAAU,IAAI,EAAQka,GAE1B,MAAOzkB,GACH,OAGR,GAAIuK,GAAWA,EAAQgW,QAAUhW,EAAQgW,OAAOmE,MAAQjoB,KAAKwV,SAAU,CACnE,IAAI0S,EAAkBhd,EAAOpJ,UAAU6iB,QAAQniB,KAAKxC,KAAM2nB,GACtDQ,EAAajd,EAAOpJ,UAAU6iB,QAAQniB,KAAKxC,KAAM6nB,GACjDO,EAAiBld,EAAOpJ,UAAU6iB,QAAQniB,KAAKxC,KAAM8nB,GACrDO,EAAW,CAACL,EAAcE,EAAiBC,EAAYC,GACvDE,EAAgB,CAAClf,EAAoBse,QAASte,EAAoBwe,YAAave,EAAeuQ,MAAOvQ,EAAe0e,YACxHO,EAAc5L,SAAQ,SAAU6L,EAAUC,GAAS,OAAOld,EAAMmd,oBAAoBF,EAAUF,EAASG,GAAQpB,QASvHD,EAAUrlB,UAAU2mB,oBAAsB,SAAUC,EAAQ1lB,EAAOokB,GAC3DpkB,GACAhD,KAAKwkB,QAAQkE,EAAQ1lB,EAAOokB,IAQpCD,EAAUrlB,UAAU6mB,iBAAmB,SAAUpZ,EAAKqZ,GAClD,IAGI,OADA5c,KAAKC,MAAMsD,GACJA,EAEX,MAAOhM,GACH,OAAgD,IAA5CgM,EAAIiE,QAAQ,GAAKlL,EAAUmf,cAA6D,IAAvClY,EAAIiE,QAAQlL,EAAUugB,aAChEtZ,EAEJqZ,EAAgBtgB,EAAUmf,YAAc,IAAMznB,KAAKwV,SAAW,IAAMjG,EAAMjH,EAAUmf,YAAc,IAAMlY,IAYvH4X,EAAUrlB,UAAUgnB,gBAAkB,SAAUvZ,EAAKiG,EAAU+E,EAAuBwO,GAElF,IAAIhd,EAAYJ,EAAYG,6BAA6ByD,GACzD,IAAKxD,EACD,OAAO,KAGX,IAAIid,EAAiBzZ,EAAIxI,MAAMyO,IAAajG,EAAIxI,MAAMwT,GAElD0O,GAAmB,EACvB,OAAQF,GACJ,KAAK1jB,EAAoBwU,aAErBoP,IAAqB1Z,EAAIxI,MAAMuB,EAAU8K,QACzC,MACJ,KAAK/N,EAAoByU,SAErBmP,GAAoB1Z,EAAIxI,MAAMuB,EAAU8K,QACxC,MAER,OAAQ4V,GAAkBC,EAAoBld,EAAY,MAQ9Dob,EAAUrlB,UAAU0iB,QAAU,SAAUjV,EAAKvM,EAAOyhB,GAChDvZ,EAAOpJ,UAAU0iB,QAAQhiB,KAAKxC,KAAMA,KAAK2oB,iBAAiBpZ,GAAK,GAAOvM,EAAOyhB,GAEzEzkB,KAAKsnB,kBAAoB7C,GACzBvZ,EAAOpJ,UAAU0iB,QAAQhiB,KAAKxC,KAAMA,KAAK2oB,iBAAiBpZ,GAAK,GAAQvM,EAAOyhB,IAQtF0C,EAAUrlB,UAAU6iB,QAAU,SAAUpV,EAAKkV,GACzC,OAAOvZ,EAAOpJ,UAAU6iB,QAAQniB,KAAKxC,KAAMA,KAAK2oB,iBAAiBpZ,GAAK,GAAOkV,IAMjF0C,EAAUrlB,UAAU+iB,WAAa,SAAUtV,GACvCvP,KAAKqnB,eAAexC,WAAW7kB,KAAK2oB,iBAAiBpZ,GAAK,IAC1DrE,EAAOpJ,UAAU+iB,WAAWriB,KAAKxC,KAAMA,KAAK2oB,iBAAiBpZ,GAAK,IAC9DvP,KAAKsnB,iBACLpc,EAAOpJ,UAAU+iB,WAAWriB,KAAKxC,KAAMA,KAAK2oB,iBAAiBpZ,GAAK,KAS1E4X,EAAUrlB,UAAUonB,iBAAmB,SAAU3Z,EAAKvM,EAAOyhB,GACzDzkB,KAAKqnB,eAAe7C,QAAQxkB,KAAK2oB,iBAAiBpZ,GAAK,GAAOvM,EAAOyhB,IAOzE0C,EAAUrlB,UAAUqnB,iBAAmB,SAAU5Z,EAAKkV,GAClD,OAAOzkB,KAAKqnB,eAAe1C,QAAQ3kB,KAAK2oB,iBAAiBpZ,GAAK,GAAOkV,IAKzE0C,EAAUrlB,UAAUsnB,gBAAkB,WAClC,IACI7Z,EADA8Z,EAAU5jB,OAAOzF,KAAKskB,eAE1B,IAAK/U,KAAO8Z,EAEJA,EAAQ3nB,eAAe6N,KAAiD,IAAxCA,EAAIiE,QAAQlL,EAAUmf,cACtDvc,EAAOpJ,UAAU+iB,WAAWriB,KAAKxC,KAAMuP,IAQnD4X,EAAUrlB,UAAUwnB,oBAAsB,SAAU9U,GAChD,IAAIlJ,EAAQtL,KACRupB,EAAU/U,GAAS,EAAauS,kBAAkBvS,GAAOoS,GACzD4C,EAA2BxpB,KAAKypB,uBAAuBjV,GACvD6U,EAAU5jB,OAAOzF,KAAKskB,eAEtBiF,IAAYC,GACZnoB,OAAOuR,KAAKyW,GAAS3M,SAAQ,SAAUnN,IACL,IAA1BA,EAAIiE,QAAQ+V,KACZje,EAAMuZ,WAAWtV,GACjBrE,EAAOpJ,UAAU0jB,gBAAgBhjB,KAAK8I,EAAOiE,OAKzDvP,KAAK0pB,0BAAyB,GAC9B1pB,KAAK6kB,WAAW1b,EAAmBwgB,mBAQvCxC,EAAUrlB,UAAU4iB,cAAgB,SAAUK,EAAOC,EAAQ9C,GACzDhX,EAAOpJ,UAAU4iB,cAAcliB,KAAKxC,KAAMA,KAAK2oB,iBAAiB5D,GAAO,GAAOC,EAAQ9C,GAClFliB,KAAKsnB,iBACLpc,EAAOpJ,UAAU4iB,cAAcliB,KAAKxC,KAAMA,KAAK2oB,iBAAiB5D,GAAO,GAAQC,EAAQ9C,IAG/FiF,EAAUrlB,UAAU0jB,gBAAkB,SAAUT,GAC5C7Z,EAAOpJ,UAAU0jB,gBAAgBhjB,KAAKxC,KAAMA,KAAK2oB,iBAAiB5D,GAAO,IACrE/kB,KAAKsnB,iBACLpc,EAAOpJ,UAAU0jB,gBAAgBhjB,KAAKxC,KAAMA,KAAK2oB,iBAAiB5D,GAAO,KAOjFoC,EAAUrlB,UAAU8iB,cAAgB,SAAUG,GAC1C,OAAO7Z,EAAOpJ,UAAU8iB,cAAcpiB,KAAKxC,KAAMA,KAAK2oB,iBAAiB5D,GAAO,KAQlFoC,EAAUrlB,UAAU8nB,mBAAqB,SAAUpU,EAAU+E,EAAuBwO,GAChF,IAAIzd,EAAQtL,KACR6pB,EAAUxoB,OAAOuR,KAAKnN,OAAOzF,KAAKskB,gBAAgBzR,QAAO,SAAUiX,EAAQva,GAC3E,IAAIwa,EAAkBze,EAAMwd,gBAAgBvZ,EAAKiG,EAAU+E,EAAuBwO,GAClF,GAAIgB,EAAiB,CACjB,IAAI/mB,EAAQsI,EAAMqZ,QAAQpV,GAC1B,GAAIvM,EACA,IACI,IAAIgnB,EAA0B,IAAI5F,EAAqB2F,EAAiB/d,KAAKC,MAAMjJ,IACnF,OAAO8mB,EAAOhX,OAAO,CAACkX,IAE1B,MAAOhL,GAEH,OAAO8K,GAInB,OAAOA,IACR,IACH,OAAOD,GAOX1C,EAAUrlB,UAAUmoB,mBAAqB,SAAUzU,EAAU+E,GACzD,OAAOva,KAAK4pB,mBAAmBpU,EAAU+E,EAAuBlV,EAAoBwU,eAMxFsN,EAAUrlB,UAAUooB,eAAiB,SAAU1U,EAAU+E,GACrD,OAAOva,KAAK4pB,mBAAmBpU,EAAU+E,EAAuBlV,EAAoByU,WAOxFqN,EAAUrlB,UAAUqoB,aAAe,SAAU3U,EAAU+E,GACnD,IAAI6P,EAAepqB,KAAKiqB,mBAAmBzU,EAAU+E,GACjD8P,EAAWrqB,KAAKkqB,eAAe1U,EAAU+E,GAC7C,OAAOzV,EAAeslB,EAAcC,IAMxClD,EAAUrlB,UAAUwoB,wBAA0B,SAAUC,GACpD,IAAI/U,EAAWxV,KAAKwqB,2BACpB,OAAID,EACO/U,IAAaxV,KAAKwV,WAGhBA,GAMjB2R,EAAUrlB,UAAU0oB,yBAA2B,WAC3C,OAAOxqB,KAAKmpB,iBAAiBnpB,KAAK2oB,iBAAiBxf,EAAmBshB,oBAAoB,KAM9FtD,EAAUrlB,UAAU4nB,yBAA2B,SAAUgB,GACrD,GAAIA,EAAoB,CACpB,GAAI1qB,KAAKsqB,yBAAwB,GAC7B,MAAM,EAAgBhc,oCAItBtO,KAAKkpB,iBAAiBlpB,KAAK2oB,iBAAiBxf,EAAmBshB,oBAAoB,GAAQzqB,KAAKwV,eAG9FkV,GAAsB1qB,KAAKsqB,yBAAwB,IAEzDtqB,KAAK6kB,WAAW7kB,KAAK2oB,iBAAiBxf,EAAmBshB,oBAAoB,KAQrFtD,EAAUrlB,UAAU2nB,uBAAyB,SAAUkB,GACnD,IAAIC,EAAc5qB,KAAK2kB,QAAQwC,EAAU0D,0BAA0B1hB,EAAmB2hB,aAAcH,IACpG,SAAUC,GAAeA,IAAgBtiB,EAAUyiB,aAKvD5D,EAAUrlB,UAAUkpB,gBAAkB,SAAUxW,GAC5C,IAAIlJ,EAAQtL,KAKZ,GAAIwU,EACAxU,KAAKwlB,gBAAgB2B,EAAU0D,0BAA0B1hB,EAAmB8hB,cAAezW,IAC3FxU,KAAKwlB,gBAAgB2B,EAAU0D,0BAA0B1hB,EAAmB+hB,YAAa1W,IACzFxU,KAAKwlB,gBAAgB2B,EAAU0D,0BAA0B1hB,EAAmBgiB,cAAe3W,IAC3FxU,KAAKwlB,gBAAgB2B,EAAU0D,0BAA0B1hB,EAAmBiiB,gBAAiB5W,QAE5F,CACD,IAAI6W,EAAUjG,SAASC,OAAO5d,MAAM,KACpC4jB,EAAQ3O,SAAQ,SAAU4O,GACtB,IAAIC,EAAaD,EAAaxX,OAAOrM,MAAM,KAAK,GAC5C8jB,EAAW/X,QAAQlL,EAAUmf,cAAgB,GAC7Cvc,EAAOpJ,UAAU0jB,gBAAgBhjB,KAAK8I,EAAOigB,QAU7DpE,EAAUqE,+BAAiC,SAAUC,EAAWjX,GAC5D,IAAI+U,EAAU,EAAaxC,kBAAkBvS,GAAOoS,GACpD,MAAO,GAAKzd,EAAmBuiB,sBAAwBpjB,EAAUoM,kBAAoB+W,EAAYnjB,EAAUoM,kBAAoB6U,GAMnIpC,EAAUwE,qBAAuB,SAAUnX,GACvC,OAAO2S,EAAU0D,0BAA0B1hB,EAAmByiB,UAAWpX,IAO7E2S,EAAU0D,0BAA4B,SAAUgB,EAAcrX,GAE1D,IAAI+U,EAAU,EAAaxC,kBAAkBvS,GAAOoS,GACpD,MAAO,GAAKiF,EAAevjB,EAAUoM,kBAAoB6U,GAEtDpC,EAvWmB,CAwW5B,GCxWE,GAAyB,WAWzB,SAAS2E,EAAQC,EAAmBxR,EAAuB0B,EAAU1Q,EAAMuQ,EAAeE,EAAKgQ,GAC3FhsB,KAAK+rB,kBAAoBA,EACzB/rB,KAAKua,sBAAwBA,EAC7Bva,KAAKic,SAAWA,EAChBjc,KAAKuL,KAAOA,EAEZvL,KAAK8N,QAAUgO,EACf9b,KAAK8b,cAAgBA,EACrB9b,KAAKgc,IAAMA,EACXhc,KAAKgsB,YAAcA,EAoCvB,OA7BAF,EAAQG,cAAgB,SAAUne,EAASsT,GAEvC,IAII7G,EAJAwR,EAAoBje,EAAQkW,UAAYlW,EAAQ2T,QAEhDpH,EAAM+G,EAAaA,EAAW/G,IAAM,GACpCC,EAAO8G,EAAaA,EAAW9G,KAAO,GAK1C,OAHK3O,EAAYC,QAAQyO,KACrBE,EAAwB5O,EAAYC,QAAQ0O,GAAQhV,EAAYoB,aAAa2T,GAAO/U,EAAYoB,aAAa2T,GAAO,IAAM/U,EAAYoB,aAAa4T,IAEhJ,IAAIwR,EAAQC,EAAmBxR,EAAuBzM,EAAQmW,cAAenW,EAAQvC,KAAMuC,EAAQgW,OAAQhW,EAAQkO,IAAKlO,EAAQiW,SAQ3I+H,EAAQI,gBAAkB,SAAUC,EAAIC,GACpC,SAAKD,IAAOC,OAGRD,EAAG5R,wBAAyB6R,EAAG7R,uBAC3B4R,EAAG5R,wBAA0B6R,EAAG7R,wBAMrCuR,EAxDiB,GCPxB,GAA6B,WAC7B,SAASO,KAiTT,OA1SAA,EAAYC,WAAa,WACrB,OAAO7mB,OAAO8mB,SAAW9mB,QAO7B4mB,EAAYG,UAAY,WACpB,SAAU/mB,OAAOgnB,QAAUhnB,OAAOgnB,SAAWhnB,SAQjD4mB,EAAYK,kBAAoB,SAAUC,EAAQC,GAC9C,MAAO,GAAKD,EAASrkB,EAAUoM,kBAAoBkY,GAOvDP,EAAYQ,qBAAuB,SAAUC,EAAeC,EAASC,EAAaC,GAC9E,OAAO,IAAI/pB,SAAQ,SAAUD,EAASE,GAKlC,IAAI+pB,EAAUlL,EAAUQ,gBACpB2K,EAAcD,EAAUH,EAC5BE,EAAOG,QAAQ,0CACf,IAAIC,EAAaC,aAAY,WACzB,GAAItL,EAAUQ,gBAAkB2K,EAK5B,OAJAF,EAAO/gB,MAAM,+DACb+gB,EAAOM,SAAS,mDAAqDP,GACrEQ,cAAcH,QACdlqB,EAAO,EAAgByK,kCAG3B,IAAIqJ,EACJ,IAMIA,EAAO6V,EAAc9V,SAASC,KAElC,MAAO1T,IACH0T,GAAQ,EAASsC,gBAAgBtC,KACjCgW,EAAOG,QAAQ,0CACfI,cAAcH,GACdpqB,EAAQ6pB,EAAc9V,SAASgD,SAEpCqS,EAAYoB,yBAQvBpB,EAAYqB,oBAAsB,SAAUZ,EAAeC,EAASC,EAAaC,GAC7E,OAAO,IAAI/pB,SAAQ,SAAUD,EAASE,GAKlC,IAAIwqB,EAAWZ,EAAUV,EAAYoB,oBACjCG,EAAQ,EACZX,EAAOG,QAAQ,wCACf,IAAIC,EAAaC,aAAY,WACzB,GAAIR,EAAce,OAId,OAHAZ,EAAO/gB,MAAM,sCACbshB,cAAcH,QACdlqB,EAAO,EAAgBoL,4BAG3B,IAAI0I,EACJ,IAMIA,EAAO6V,EAAc9V,SAASC,KAElC,MAAO1T,IAEP,GAAK0T,GAAiB,gBAATA,EAQb,GADA2W,IACI3W,GAAQ,EAASsC,gBAAgBtC,GAAO,CACxCgW,EAAOG,QAAQ,yCACfI,cAAcH,GACd,IAAIrT,EAAO8S,EAAc9V,SAASgD,KAClCqS,EAAYyB,iBAAiBhB,GAC7B7pB,EAAQ+W,QAEH4T,EAAQD,IACbV,EAAO/gB,MAAM,8DACb+gB,EAAOM,SAAS,kDAAoDP,GACpEQ,cAAcH,GACdlqB,EAAO,EAAgByK,qCAE5Bye,EAAYoB,yBAQvBpB,EAAY0B,UAAY,SAAUf,EAAagB,EAAWC,EAAWhB,GACjE,IAAI3hB,EAAQtL,KAMZ,OADAitB,EAAOiB,QAAQ,cAAgBF,GACxB,IAAI9qB,SAAQ,SAAUD,EAASE,GAClCgrB,YAAW,WACP,IAAIC,EAAc9iB,EAAM+iB,cAAcrB,EAAagB,EAAWf,GACzDmB,EAILnrB,EAAQmrB,GAHJjrB,EAAO,oCAAsC6qB,KAIlDC,OAUX5B,EAAYgC,cAAgB,SAAUrB,EAAagB,EAAWf,GAC1D,IAAImB,EAAc/B,EAAYiC,gBAAgBN,EAAWf,GAEzD,OAAKmB,GAGwB,KAApBA,EAAYG,KAAkC,gBAApBH,EAAYG,MAC3CH,EAAYG,IAAMvB,EAClBC,EAAOiB,QAAQ,gBAAkBF,EAAY,kBAAoBhB,IAE9DoB,GANI,MAaf/B,EAAYiC,gBAAkB,SAAUE,EAAUvB,GAC9C,GAAwB,qBAAbuB,EACP,OAAO,KAEXvB,EAAOwB,KAAK,+BACZxB,EAAOiB,QAAQ,8BAAgCM,GAC/C,IAAIE,EAAYtJ,SAASuJ,eAAeH,GACxC,GAAKE,EAaDzB,EAAOG,QAAQ,sCAbH,CACZH,EAAOG,QAAQ,kCACf,IAAIwB,EAAMxJ,SAASyJ,cAAc,UACjCD,EAAIE,aAAa,KAAMN,GACvBI,EAAIE,aAAa,cAAe,QAChCF,EAAIG,MAAMC,WAAa,SACvBJ,EAAIG,MAAME,SAAW,WACrBL,EAAIG,MAAMlmB,MAAQ+lB,EAAIG,MAAMhmB,OAAS,IACrC6lB,EAAIG,MAAMG,OAAS,IACnBN,EAAIE,aAAa,UAAW,+CAC5BJ,EAAYtJ,SAAS+J,qBAAqB,QAAQ,GAAGC,YAAYR,GAKrE,OAAOF,GAOXrC,EAAYgD,mBAAqB,SAAUC,GACnClK,SAASvhB,OAASyrB,EAAOC,YACzBnK,SAASvhB,KAAK2rB,YAAYF,IAQlCjD,EAAYoD,kBAAoB,SAAUzV,GACtC,IAAI0V,EAAUtK,SAAS+J,qBAAqB,UACxCQ,EAAcnuB,MAAMiB,MAAM,KAAMjB,MAAMkuB,EAAQntB,SAASmF,KAAI,SAAU4nB,EAAQ9G,GAAS,OAAOkH,EAAQE,KAAKpH,MAC9G,OAAOmH,EAAYzb,QAAO,SAAUob,GAChC,IACI,OAAOA,EAAOxC,cAAc9V,SAASgD,OAASA,EAElD,MAAOzW,GACH,OAAO,MAEZ,IAOP8oB,EAAYwD,UAAY,WAIpB,OAHKpqB,OAAOqqB,gBACRrqB,OAAOqqB,cAAgB,IAEpBrqB,OAAOqqB,eAOlBzD,EAAY0D,iBAAmB,SAAU/V,GACrC,OAAOqS,EAAYwD,YAAY3b,QAAO,SAAU8b,GAC5C,IACI,OAAOA,EAAMhZ,SAASgD,OAASA,EAEnC,MAAOzW,GACH,OAAO,MAEZ,IAOP8oB,EAAY4D,WAAa,SAAUD,GAC/B3D,EAAYwD,YAAYhrB,KAAKmrB,IAOjC3D,EAAY6D,YAAc,WACtB7D,EAAYwD,YAAYnT,SAAQ,SAAUsT,GAAS,OAAOA,EAAMG,YAOpE9D,EAAY+D,2BAA6B,WAErC,GAAI,EAAS7W,gBAAgB9T,OAAOuR,SAASgD,OAASqS,EAAYC,aAC9D,MAAM,EAAgB9c,+CAO9B6c,EAAYgE,2BAA6B,SAAUC,GAC/C,IAAIC,EAAgBD,EAAa3L,QAAQxb,EAAmBwgB,kBAE5D,GAAI4G,IAAkB,EAAShX,gBAAgB9T,OAAOuR,SAASgD,MAAO,CAClE,IAAIwW,EAAaD,EAAc9oB,MAAMa,EAAUoM,mBAC/C8b,EAAWC,QACX,IAAIjc,EAAQgc,EAAWjuB,OAAS,EAAIiuB,EAAW1oB,KAAKQ,EAAUoM,mBAAqB,KACnF4b,EAAahH,oBAAoB9U,KAMzC6X,EAAYyB,iBAAmB,SAAUhB,GACrCA,EAAc9V,SAASgD,KAAO,GAEoB,oBAAvC8S,EAAc4D,QAAQC,cAE7B7D,EAAc4D,QAAQC,aAAa,KAAM,KAAM,GAAK7D,EAAc9V,SAAS4Z,SAAW9D,EAAc9V,SAAS9O,SAQrHmkB,EAAYoB,oBAAsB,GAC3BpB,EAlTqB,GCK5B,GAA+B,WAC/B,SAASwE,KA+BT,OA7BAA,EAAcC,mBAAqB,SAAUC,EAAkBC,GAC3D,IAAKD,EACD,OAAO,KAEN,IAAKC,EACN,OAAOD,EAEX,IAAIE,EAAM9pB,OAAO6pB,EAAW5N,YAI5B,OAHI6N,IAAQF,EAAiBG,YACzBH,EAAiBG,UAAY,IAAI5O,KAAW,IAAN2O,IAEnCjvB,EAASA,EAAS,GAAI+uB,GAAmB,CAAEjjB,QAASkjB,EAAYlV,cAAekV,EAAWlN,OAAQqN,SAAUH,EAAWhN,UAAYgN,EAAWvP,QAASpK,SAAU2Z,EAAW3Z,YAEvLwZ,EAAcO,kBAAoB,SAAUtjB,EAASujB,EAAcC,EAA6BvW,EAAS3H,EAAQme,GAC7G,OAAQD,EAA4Bhb,cAChC,KAAKhN,EAAcC,SACf,IAAIioB,EAAkBxvB,EAASA,EAAS,GAAIqvB,GAAe,CAAEtI,UAAW1jB,EAAoByU,SAAUiB,QAASA,EAAS3H,OAAQA,EAAQme,aAAcA,IAEtJ,OADAC,EAAkBX,EAAcC,mBAAmBU,EAAiB1jB,GAC5D0jB,EAAuB,QAAIA,EAAkB,KACzD,KAAKloB,EAAcG,eACf,IAAIgoB,EAAsBZ,EAAcC,mBAAmBO,EAAcvjB,GACzE,OAAQ2jB,GAAuBA,EAAoBhX,aAAegX,EAAoB3jB,QAAW2jB,EAAsB,KAC3H,KAAKnoB,EAAcE,MACf,IAAIkoB,EAAgBb,EAAcC,mBAAmBO,EAAcvjB,GACnE,OAAO4jB,EACX,QACI,OAAO,OAGZb,EAhCuB,GCF9B,GAAkC,WAClC,SAASc,KAoDT,OAlDAA,EAAiBC,wBAA0B,SAAUzb,EAAmBoI,EAAkBzH,GACtF,OAAOpU,EAAU1C,UAAM,OAAQ,GAAQ,WACnC,IAAImf,EACJ,OAAOvb,EAAY5D,MAAM,SAAU+R,GAC/B,OAAQA,EAAG7N,OACP,KAAK,EAAG,MAAO,CAAC,EAAaiS,EAAkB0K,sBAAsBtC,EAAkBzH,IACvF,KAAK,EAGD,OAFAqI,EAAWpN,EAAG5N,OACdnE,KAAK6xB,YAAYjpB,IAAIuN,EAAkB0E,mBAAoBsE,GACpD,CAAC,EAAcA,WAK1CwS,EAAiBG,YAAc,SAAUhS,GACrC,OAAO9f,KAAK6xB,YAAYrpB,IAAIsX,IAEhC6R,EAAiBI,uBAAyB,SAAUjS,EAAckS,GAC9D,IACI,GAAIA,EAAuB,CACvB,IAAIC,EAAiBjmB,KAAKC,MAAM+lB,GAChC,IAAKC,EAAeC,yBAA2BD,EAAeE,uBAAyBF,EAAelO,OAClG,MAAM,EAAyB/Q,sCAEnChT,KAAK6xB,YAAYjpB,IAAIkX,EAAc,CAC/B1J,sBAAuB6b,EAAeC,uBACtC3R,mBAAoB0R,EAAeE,qBACnC3R,OAAQyR,EAAelO,UAInC,MAAOxgB,GACH,MAAM,EAAyByP,wCAOvC2e,EAAiBS,eAAiB,SAAUtS,EAAc7B,EAAmBwB,GACzE,OAAI9T,EAAYC,QAAQkU,GACb,MAEPL,GAEAzf,KAAK+xB,uBAAuBjS,EAAcL,GAEvC,IAAI,EAAUK,EAAc7B,EAAmBje,KAAK6xB,YAAYrpB,IAAIsX,MAE/E6R,EAAiBE,YAAc,IAAIQ,IAC5BV,EArD0B,IZJrC,SAAWpS,GACPA,EAASA,EAAS,SAAW,GAAK,QAClCA,EAASA,EAAS,WAAa,GAAK,UACpCA,EAASA,EAAS,QAAU,GAAK,OACjCA,EAASA,EAAS,WAAa,GAAK,WAJxC,CAKGA,IAAaA,EAAW,KAC3B,IAAI,GAAwB,WACxB,SAAS+S,EAAOC,EAAeC,QACX,IAAZA,IAAsBA,EAAU,IAIpCxyB,KAAKyyB,MAAQlT,EAASmT,KACtB,IAAI3gB,EAAKygB,EAAQ1b,cAAeA,OAAuB,IAAP/E,EAAgB,GAAKA,EAAIuK,EAAKkW,EAAQC,MAAOA,OAAe,IAAPnW,EAAgBiD,EAASmT,KAAOpW,EAAInc,EAAKqyB,EAAQG,kBAAmBA,OAA2B,IAAPxyB,GAAwBA,EACrNH,KAAKuyB,cAAgBA,EACrBvyB,KAAK8W,cAAgBA,EACrB9W,KAAKyyB,MAAQA,EACbzyB,KAAK2yB,kBAAoBA,EA8E7B,OAzEAL,EAAOxwB,UAAU8wB,WAAa,SAAUC,EAAUD,EAAYE,GAC1D,KAAKD,EAAW7yB,KAAKyyB,QAAYzyB,KAAK2yB,mBAAqBG,GAA3D,CAGA,IACIC,EADAC,GAAY,IAAI1Q,MAAOsD,cAMvBmN,EAJCpnB,EAAYC,QAAQ5L,KAAK8W,eAIpBkc,EAAY,IAAM,EAAiB,IAAMzT,EAASsT,IAAaC,EAAc,OAAS,IAAM,IAAMF,EAHlGI,EAAY,IAAMhzB,KAAK8W,cAAgB,IAAM,EAAiB,IAAMyI,EAASsT,IAAaC,EAAc,OAAS,IAAM,IAAMF,EAKvI5yB,KAAKizB,gBAAgBJ,EAAUE,EAAKD,KAKxCR,EAAOxwB,UAAUmxB,gBAAkB,SAAUR,EAAOS,EAASJ,GACrD9yB,KAAKuyB,eACLvyB,KAAKuyB,cAAcE,EAAOS,EAASJ,IAM3CR,EAAOxwB,UAAUoK,MAAQ,SAAUgnB,GAC/BlzB,KAAK4yB,WAAWrT,EAASjY,MAAO4rB,GAAS,IAK7CZ,EAAOxwB,UAAUyrB,SAAW,SAAU2F,GAClClzB,KAAK4yB,WAAWrT,EAASjY,MAAO4rB,GAAS,IAK7CZ,EAAOxwB,UAAUqxB,QAAU,SAAUD,GACjClzB,KAAK4yB,WAAWrT,EAAS6T,QAASF,GAAS,IAK/CZ,EAAOxwB,UAAUuxB,WAAa,SAAUH,GACpClzB,KAAK4yB,WAAWrT,EAAS6T,QAASF,GAAS,IAK/CZ,EAAOxwB,UAAU2sB,KAAO,SAAUyE,GAC9BlzB,KAAK4yB,WAAWrT,EAASmT,KAAMQ,GAAS,IAK5CZ,EAAOxwB,UAAUosB,QAAU,SAAUgF,GACjClzB,KAAK4yB,WAAWrT,EAASmT,KAAMQ,GAAS,IAK5CZ,EAAOxwB,UAAUsrB,QAAU,SAAU8F,GACjClzB,KAAK4yB,WAAWrT,EAAS+T,QAASJ,GAAS,IAK/CZ,EAAOxwB,UAAUyxB,WAAa,SAAUL,GACpClzB,KAAK4yB,WAAWrT,EAAS+T,QAASJ,GAAS,IAE/CZ,EAAOxwB,UAAU0xB,oBAAsB,WACnC,OAAOxzB,KAAK2yB,mBAETL,EAzFgB,GaHvBmB,GAAgB,IAChBC,GAAS,IACTC,GAAsB,IACtBC,GAAuB,CACvBpe,SAAU,GACV2C,UAAW,KACX8F,mBAAmB,EACnBwB,kBAAmB,GACnBvB,iBAAkB,GAClB3H,YAAa,WAAc,OAAO,EAASQ,iBAC3C8c,sBAAuB,WAAc,OAAO,EAAS9c,iBACrD+c,2BAA2B,GAE3BC,GAAwB,CACxBzP,cAAe,iBACf8C,wBAAwB,GAExB4M,GAAyB,CACzB/G,OAAQ,IAAI,GAAO,MACnBgH,iBAAkBR,GAClBpQ,0BAA2BqQ,GAC3BQ,kBAAmBP,IAEnBQ,GAA4B,CAC5BC,WAAW,EACXC,qBAAsB,IAAI7yB,MAC1B8yB,qBAAsB,IAAIjC,KAavB,SAASkC,GAAmBxiB,GAC/B,IAAIyiB,EAAOziB,EAAGyiB,KAAMlY,EAAKvK,EAAG0iB,MAAOA,OAAe,IAAPnY,EAAgB,GAAKA,EAAInc,EAAK4R,EAAG2iB,OAAQA,OAAgB,IAAPv0B,EAAgB,GAAKA,EAAIw0B,EAAK5iB,EAAG6iB,UAAWA,OAAmB,IAAPD,EAAgB,GAAKA,EACtKE,EAAkB,CAClBL,KAAMxyB,EAASA,EAAS,GAAI4xB,IAAuBY,GACnDC,MAAOzyB,EAASA,EAAS,GAAI+xB,IAAwBU,GACrDC,OAAQ1yB,EAASA,EAAS,GAAIgyB,IAAyBU,GACvDE,UAAW5yB,EAASA,EAAS,GAAImyB,IAA4BS,IAEjE,OAAOC,ECnDJ,IAAIC,GAAqB,CAC5BC,kBAAmB,CACfhqB,KAAM,qBACNC,KAAM,sCAEVgqB,mBAAoB,CAChBjqB,KAAM,yBAMV,GAA6B,SAAUG,GAEvC,SAAS+pB,EAAY7pB,EAAWC,GAC5B,IAAIC,EAAQJ,EAAO1I,KAAKxC,KAAMoL,EAAWC,IAAiBrL,KAG1D,OAFAsL,EAAMC,KAAO,cACblK,OAAOC,eAAegK,EAAO2pB,EAAYnzB,WAClCwJ,EAQX,OAbA3J,EAAUszB,EAAa/pB,GAOvB+pB,EAAYC,6BAA+B,WACvC,OAAO,IAAID,EAAYH,GAAmBC,kBAAkBhqB,KAAM+pB,GAAmBC,kBAAkB/pB,OAE3GiqB,EAAYE,yBAA2B,SAAU1mB,GAC7C,OAAO,IAAIwmB,EAAYH,GAAmBE,mBAAmBjqB,KAAM0D,IAEhEwmB,EAdqB,CAe9B,GC3BSG,GAAsC,CAC7CC,oBAAqB,CACjBtqB,KAAM,wBAEVuqB,gBAAiB,CACbvqB,KAAM,oBAEVwqB,cAAe,CACXxqB,KAAM,mBAMV,GAA8C,SAAUG,GAExD,SAASsqB,EAA6BpqB,EAAWC,GAC7C,IAAIC,EAAQJ,EAAO1I,KAAKxC,KAAMoL,EAAWC,IAAiBrL,KAG1D,OAFAsL,EAAMC,KAAO,+BACblK,OAAOC,eAAegK,EAAOkqB,EAA6B1zB,WACnDwJ,EAmBX,OAxBA3J,EAAU6zB,EAA8BtqB,GAOxCsqB,EAA6BC,2BAA6B,SAAUC,GAChE,IAAIC,EAA2B,CAC3BP,GAAoCC,oBAAoBtqB,KACxDqqB,GAAoCE,gBAAgBvqB,KACpDqqB,GAAoCG,cAAcxqB,MAEtD,OAAO2qB,GAAeC,EAAyBniB,QAAQkiB,IAAgB,GAE3EF,EAA6BI,6BAA+B,SAAUnnB,GAClE,OAAO,IAAI+mB,EAA6BJ,GAAoCG,cAAcxqB,KAAM0D,IAEpG+mB,EAA6BK,mCAAqC,SAAUpnB,GACxE,OAAO,IAAI+mB,EAA6BJ,GAAoCC,oBAAoBtqB,KAAM0D,IAE1G+mB,EAA6BM,+BAAiC,SAAUrnB,GACpE,OAAO,IAAI+mB,EAA6BJ,GAAoCE,gBAAgBvqB,KAAM0D,IAE/F+mB,EAzBsC,CA0B/C,IC1CK,SAASO,GAAuBvhB,GACnC,MAAO,CACH2c,SAAU,GACV9Z,SAAU,GACV0R,UAAW,GACXjb,QAAS,KACTgO,cAAe,KACfrB,YAAa,GACbrH,OAAQ,KACR8d,UAAW,KACXnW,QAAS,KACTwW,aAAc/c,EACdwhB,WAAW,GCZZ,ICAH,GAeOC,GASAC,GDxBAC,GAAoB,QACpBC,GAAiB,aACjBC,GAAiB,aACjBC,GAAmB,eACnBC,GAA6B,CACpCC,6BAA8B,gCAC9BC,sBAAuB,oBACvBC,iBAAkB,cAClBC,qBAAsB,4BACtBC,2BAA4B,mCAC5BC,gCAAiC,kCACjCC,eAAgB,qBAChBC,0BAA2B,GAC3BC,wBAAyB,+BACzBC,wBAAyB,+BACzBC,oBAAqB,2BACrBC,8BAA+B,iCAGxBC,GAAqB,WEfrBC,GAAqB,SAAUnd,GACtC,IAAI/C,EAAM,EAASK,iBAAiB0C,GAEpC,GAAI,EAAU2F,OAAO3F,GAMjB,OAAOA,EAEX,IAAIod,EAAangB,EAAIO,aACrB,GAAI4f,GAAcA,EAAW/0B,QAAU,EAAG,CACtC,IAAIg1B,EAAmC,QAAlBD,EAAW,GAAe,EAAI,EAC/CC,EAAiBD,EAAW/0B,SAC5B+0B,EAAWC,GAAkBH,IAGrC,OAAOjgB,EAAIa,SAAW,KAAOb,EAAIc,gBAAkB,IAAMqf,EAAWxvB,KAAK,MAElE0vB,GAAyB,SAAUC,GAM1C,OAAOnyB,EAAYoB,aAAa+wB,IAEzBC,GAAyB,SAAU3e,GAAU,MAAO,GAAKod,IAAqBpd,GAAU,KACxF4e,GAA6B,WAAc,SAA4B,qBAAXlyB,QACnE,gBAAiBA,QACjBA,OAAOgd,YAAYmV,MACnBnyB,OAAOgd,YAAYoV,UACZC,GAAmC,SAAUC,EAAaC,EAAWC,GACxEN,OACAlyB,OAAOgd,YAAYmV,KAAKK,GACxBxyB,OAAOgd,YAAYoV,QAAQE,EAAaC,EAAWC,GACnDxyB,OAAOgd,YAAYyV,cAAcH,GACjCtyB,OAAOgd,YAAY0V,WAAWH,GAC9BvyB,OAAOgd,YAAY0V,WAAWF,KAG3BG,GAAqC,SAAUJ,GAClDL,MACAlyB,OAAOgd,YAAYmV,KAAKI,IC5C5B,GAAgC,WAChC,SAASK,EAAeC,EAAWxhB,EAAeyhB,GAC9C,IAAIxmB,EACJ/R,KAAKw4B,QAAUlzB,EAAYC,gBAC3BvF,KAAKkE,MAAQq0B,EACbv4B,KAAKy4B,OAAS1mB,EAAK,GACfA,EAAG2lB,GAAuBtB,KAAmBkC,EAC7CvmB,EAAG2lB,GAAuBpB,MAAsB,EAChDvkB,EAAG,GAAKwkB,GAA2BC,8BAAgC1f,EACnE/E,GA+DR,OA7DAsmB,EAAev2B,UAAU42B,eAAiB,SAAUC,GAChD34B,KAAKy4B,MAAMf,GAAuBpB,KAAqBqC,GAE3DN,EAAev2B,UAAU82B,KAAO,WAE5B54B,KAAK04B,gBAAgBpW,KAAKF,OAASpiB,KAAK64B,gBACxCf,GAAiC93B,KAAK84B,YAAa94B,KAAK+4B,cAAe/4B,KAAKg5B,cAEhFX,EAAev2B,UAAUm3B,MAAQ,WAC7Bj5B,KAAK64B,eAAiBvW,KAAKF,MAC3BpiB,KAAKy4B,MAAMf,GAAuBrB,KAAmBr2B,KAAK64B,eAC1DT,GAAmCp4B,KAAK+4B,gBAE5C13B,OAAOkH,eAAe8vB,EAAev2B,UAAW,yBAA0B,CACtE0G,IAAK,WACD,OAAOxI,KAAKy4B,MAAM,GAAKlC,GAA2BC,+BAEtD5tB,IAAK,SAAU5F,GACXhD,KAAKy4B,MAAM,GAAKlC,GAA2BC,8BAAgCxzB,GAE/EyF,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAe8vB,EAAev2B,UAAW,YAAa,CACzD0G,IAAK,WACD,OAAOxI,KAAKy4B,MAAMf,GAAuBtB,MAE7C3tB,YAAY,EACZC,cAAc,IAElB2vB,EAAev2B,UAAU0G,IAAM,WAC3B,OAAOxG,EAASA,EAAS,GAAIhC,KAAKy4B,OAAQ,CAAED,QAASx4B,KAAKw4B,WAE9Dn3B,OAAOkH,eAAe8vB,EAAev2B,UAAW,MAAO,CACnD0G,IAAK,WACD,OAAOxI,KAAKk5B,uBAAyB,IAAMl5B,KAAKw4B,QAAU,IAAMx4B,KAAKs4B,WAEzE7vB,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAe8vB,EAAev2B,UAAW,cAAe,CAC3D0G,IAAK,WACD,MAAO,QAAUxI,KAAKkE,MAAQ,IAAMlE,KAAKk5B,wBAE7CzwB,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAe8vB,EAAev2B,UAAW,gBAAiB,CAC7D0G,IAAK,WACD,MAAO,SAAWxI,KAAKuP,KAE3B9G,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAe8vB,EAAev2B,UAAW,cAAe,CAC3D0G,IAAK,WACD,MAAO,OAASxI,KAAKuP,KAEzB9G,YAAY,EACZC,cAAc,IAEX2vB,EAxEwB,GA0EpB,MC1EX,GAA8B,SAAUntB,GAGxC,SAASiuB,EAAaC,EAAUtiB,EAAetB,EAAU6jB,GACrD,IAAI/tB,EAAQJ,EAAO1I,KAAKxC,KAAM03B,GAAuB,iBAAkB5gB,EAAe,iBAAmB9W,KAUzG,OATAsL,EAAMmtB,MAAMf,GAAuB,cAAgBliB,EACnDlK,EAAMmtB,MAAMf,GAAuB,gBAAkB0B,EAASE,IAC9DhuB,EAAMmtB,MAAMf,GAAuB,gBAAkB0B,EAASG,WAC9DjuB,EAAMmtB,MAAMf,GAAuB,qBAAuB0B,EAAS5mB,gBACnElH,EAAMmtB,MAAMf,GAAuB,wBAA0B0B,EAAS3mB,mBACtEnH,EAAMmtB,MAAMf,GAAuB,+BAAiC0B,EAASI,oBAAsBJ,EAASI,mBAAmBC,gBAC/HnuB,EAAMmtB,MAAM,GAAKlC,GAA2BY,+BAAiC7rB,EAAMouB,cAAchC,GAAuB,YAAa2B,GACrI/tB,EAAMmtB,MAAM,GAAKlC,GAA2BM,iCAAmCvrB,EAAMouB,cAAchC,GAAuB,cAAe2B,GACzI/tB,EAAMmtB,MAAM,GAAKlC,GAA2BK,4BAA8BtrB,EAAMouB,cAAchC,GAAuB,eAAgB2B,GAC9H/tB,EASX,OAtBA3J,EAAUw3B,EAAcjuB,GAgBxBiuB,EAAar3B,UAAU43B,cAAgB,SAAUpB,EAAWe,GACxD,OAAKA,EAAWf,GAGTe,EAAWf,GAFP,GAIRa,EAvBsB,CAwB/B,IACa,MHxBJQ,GAAa,CACpB/N,UAAW8L,GAAuB,aAClCkC,eAAgBlC,GAAuB,kBACvCmC,OAAQnC,GAAuB,eAC/BoC,UAAWpC,GAAuB,aAClCqC,QAASrC,GAAuB,WAChCsC,cAAetC,GAAuB,kBACtCuC,eAAgBvC,GAAuB,kBACvCztB,WAAYytB,GAAuB,gBAGvC,SAAWzB,GACPA,EAASA,EAAS,wBAA0B,MAAQ,uBACpDA,EAASA,EAAS,sBAAwB,MAAQ,qBAClDA,EAASA,EAAS,qBAAuB,MAAQ,oBACjDA,EAASA,EAAS,iBAAmB,MAAQ,gBAC7CA,EAASA,EAAS,cAAgB,MAAQ,aAC1CA,EAASA,EAAS,UAAY,MAAQ,UAN1C,CAOGA,KAAaA,GAAW,KAE3B,SAAWC,GACPA,EAAqB,wBAA0B,uBAC/CA,EAAqB,sBAAwB,qBAC7CA,EAAqB,qBAAuB,oBAC5CA,EAAqB,iBAAmB,gBACxCA,EAAqB,cAAgB,aACrCA,EAAqB,UAAY,SANrC,CAOGA,KAAyBA,GAAuB,KACnD,IAAIgE,IAA2B,GAAK,GAChC,GAAGhE,GAAqBiE,oBAAsBlE,GAASkE,mBACvD,GAAGjE,GAAqBkE,mBAAqBnE,GAASmE,kBACtD,GAAGlE,GAAqBmE,sBAAwBpE,GAASoE,qBACzD,GAAGnE,GAAqBoE,YAAcrE,GAASqE,WAC/C,GAAGpE,GAAqBqE,eAAiBtE,GAASsE,cAClD,GAAGrE,GAAqBsE,QAAUvE,GAASuE,OAC3C,IACA,GAA0B,SAAUtvB,GAEpC,SAASuvB,EAAS3jB,EAAe4jB,EAAYC,GACzC,IAAIrvB,EAAQJ,EAAO1I,KAAKxC,KAAM03B,GAAuB,aAAc5gB,EAAe6jB,IAAuB36B,KAMzG,OALI26B,IACArvB,EAAMsvB,QAAUV,GAAwBS,GACxCrvB,EAAMqvB,mBAAqBA,GAE/BrvB,EAAMovB,WAAaA,EACZpvB,EAiFX,OAzFA3J,EAAU84B,EAAUvvB,GAUpB7J,OAAOkH,eAAekyB,EAAS34B,UAAW,qBAAsB,CAC5D8G,IAAK,SAAU+xB,GACX36B,KAAKy4B,MAAMlC,GAA2BE,uBAAyBkE,GAEnElyB,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAekyB,EAAS34B,UAAW,UAAW,CACjD8G,IAAK,SAAUgyB,GACX56B,KAAKy4B,MAAMlC,GAA2BG,kBAAoBkE,GAE9DnyB,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAekyB,EAAS34B,UAAW,YAAa,CACnD8G,IAAK,SAAUsR,GACXla,KAAKy4B,MAAMkB,GAAW/N,WAAayL,GAAmBnd,GAAKzG,eAE/DhL,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAekyB,EAAS34B,UAAW,eAAgB,CACtD8G,IAAK,SAAUwC,GACXpL,KAAKy4B,MAAMkB,GAAWM,gBAAkB7uB,GAE5C3C,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAekyB,EAAS34B,UAAW,WAAY,CAClD8G,IAAK,SAAUyO,GACXrX,KAAKy4B,MAAMkB,GAAWG,WAAa95B,KAAK06B,YAAcrjB,EAClDmgB,GAAuBngB,GACrB,MAEV5O,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAekyB,EAAS34B,UAAW,YAAa,CACnD8G,IAAK,SAAU6iB,GACXzrB,KAAKy4B,MAAMkB,GAAWI,SAAW/5B,KAAK06B,YAAcjP,EAChD+L,GAAuB/L,GACrB,MAEVhjB,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAekyB,EAAS34B,UAAW,gBAAiB,CACvD0G,IAAK,WACD,OAAgD,IAAzCxI,KAAKy4B,MAAMkB,GAAWK,gBAEjCpxB,IAAK,SAAUiyB,GACX76B,KAAKy4B,MAAMkB,GAAWK,eAAiBa,GAE3CpyB,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAekyB,EAAS34B,UAAW,YAAa,CACnD8G,IAAK,SAAUsT,GACXlc,KAAKy4B,MAAMkB,GAAW1vB,YAAcjK,KAAK06B,YAAcxe,EACnDsb,GAAuBtb,GACrB,MAEVzT,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAekyB,EAAS34B,UAAW,gBAAiB,CACvD8G,IAAK,SAAUkyB,GACX96B,KAAKy4B,MAAMkB,GAAWC,gBAAkBkB,EAAcrnB,eAE1DhL,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAekyB,EAAS34B,UAAW,aAAc,CACpD8G,IAAK,SAAUmyB,GACX/6B,KAAKy4B,MAAMkB,GAAWE,QAAUkB,EAAWtnB,eAE/ChL,YAAY,EACZC,cAAc,IAEX+xB,EA1FkB,CA2F3B,IACa,MIjIJ,GAAa,CACpBO,UAAWtD,GAAuB,aAClCuD,WAAYvD,GAAuB,cACnCwD,iBAAkBxD,GAAuB,oBACzCyD,YAAazD,GAAuB,eACpC0D,cAAe1D,GAAuB,iBACtC2D,kBAAmB3D,GAAuB,oBAC1C4D,YAAa5D,GAAuB,eACpC6D,kBAAmB7D,GAAuB,qBAC1C8D,SAAU9D,GAAuB,YACjC+D,kBAAmB/D,GAAuB,qBAC1CgE,sBAAuBhE,GAAuB,yBAC9CiE,IAAKjE,GAAuB,QAE5B,GAA2B,SAAUxsB,GAErC,SAAS0wB,EAAU9kB,EAAeyhB,GAC9B,OAAOrtB,EAAO1I,KAAKxC,KAAM03B,GAAuB,cAAe5gB,EAAeyhB,IAAev4B,KA4FjG,OA9FA2B,EAAUi6B,EAAW1wB,GAIrB7J,OAAOkH,eAAeqzB,EAAU95B,UAAW,MAAO,CAC9C8G,IAAK,SAAUuO,GACX,IAAI0kB,EAAcxE,GAAmBlgB,GACrCnX,KAAKy4B,MAAM,GAAWkD,KAAOE,GAAeA,EAAYpoB,eAE5DhL,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeqzB,EAAU95B,UAAW,WAAY,CACnD8G,IAAK,SAAUkzB,GACX97B,KAAKy4B,MAAM,GAAWuC,WAAa3D,GAAmByE,GAAUroB,eAEpEhL,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeqzB,EAAU95B,UAAW,YAAa,CACpD8G,IAAK,SAAUmzB,GACX/7B,KAAKy4B,MAAM,GAAWwC,YAAcc,GAExCtzB,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeqzB,EAAU95B,UAAW,cAAe,CACtD8G,IAAK,SAAUozB,GACXh8B,KAAKy4B,MAAM,GAAWyC,kBAAoB,EAAwBzf,8BAA8BugB,IAEpGvzB,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeqzB,EAAU95B,UAAW,aAAc,CACrD8G,IAAK,SAAUqzB,GACXj8B,KAAKy4B,MAAM,GAAW0C,aAAec,EAAWxoB,eAEpDhL,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeqzB,EAAU95B,UAAW,qBAAsB,CAC7D8G,IAAK,SAAUgV,GACX5d,KAAKy4B,MAAM,GAAW2C,eAAiBxd,GAE3CnV,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeqzB,EAAU95B,UAAW,iBAAkB,CACzD8G,IAAK,SAAUwC,GACXpL,KAAKy4B,MAAM,GAAW4C,mBAAqBjwB,GAE/C3C,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeqzB,EAAU95B,UAAW,aAAc,CACrD8G,IAAK,SAAU6V,GACXze,KAAKy4B,MAAM,GAAW6C,aAAe7c,GAEzChW,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeqzB,EAAU95B,UAAW,kBAAmB,CAC1D8G,IAAK,SAAUszB,GACXl8B,KAAKy4B,MAAM,GAAW8C,mBAAqBW,GAE/CzzB,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeqzB,EAAU95B,UAAW,UAAW,CAMlD8G,IAAK,SAAUuzB,GACXn8B,KAAKy4B,MAAM,GAAW+C,UAAYW,GAEtC1zB,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeqzB,EAAU95B,UAAW,kBAAmB,CAC1D8G,IAAK,SAAUwC,GACXpL,KAAKy4B,MAAM,GAAWgD,mBAAqBrwB,GAE/C3C,YAAY,EACZC,cAAc,IAElBrH,OAAOkH,eAAeqzB,EAAU95B,UAAW,qBAAsB,CAC7D8G,IAAK,SAAUwzB,GACXp8B,KAAKy4B,MAAM,GAAWiD,uBAAyBU,GAEnD3zB,YAAY,EACZC,cAAc,IAEXkzB,EA/FmB,CAgG5B,IACa,MC7GX,GAAkC,WAClC,SAASS,EAAiB/pB,EAAQI,EAAkBua,GAEhDjtB,KAAKs8B,gBAAkB,GAEvBt8B,KAAKu8B,iBAAmB,GAExBv8B,KAAKw8B,0BAA4B,GAEjCx8B,KAAKy8B,0BAA2B,EAEhCz8B,KAAK08B,kBAAoB16B,EAAS,CAAEs3B,IAAKhxB,EAAUq0B,YAAapD,WAAY,EAAgBC,mBAAoB,CAExGC,gBAAsC,qBAAdmD,WAA6BA,UAAUC,YAAcD,UAAUC,WAAWC,gBACjGxqB,EAAO8mB,UAChBp5B,KAAKwV,SAAWlD,EAAOkD,SACvBxV,KAAKy8B,yBAA2BnqB,EAAOmqB,yBAMvCz8B,KAAK0S,iBAAmBA,EACxB1S,KAAKitB,OAASA,EAyGlB,OAvGAoP,EAAiBU,wBAA0B,SAAUvnB,EAAUyX,GAC3D,IAAIza,EAAkB,YAClBC,EAAqB,MACrBC,EAAmB,aACnBgqB,EAAoB,CACpBlqB,gBAAiBA,EACjBC,mBAAoBA,GAEpBuqB,EAAyB,CACzB5D,SAAUsD,EACVlnB,SAAUA,GAEd,OAAO,IAAIxV,KAAKg9B,EAAwBtqB,EAAkBua,IAE9DoP,EAAiBv6B,UAAUm7B,WAAa,SAAUxE,GAC9Cz4B,KAAKitB,OAAOG,QAAQ,4BAA8BqL,EAAMlpB,KACnDvP,KAAK0S,mBAGV+lB,EAAMQ,QACNj5B,KAAKu8B,iBAAiB9D,EAAMlpB,KAAOkpB,IAEvC4D,EAAiBv6B,UAAUgd,UAAY,SAAU2Z,GAE7C,GADAz4B,KAAKitB,OAAOG,QAAQ,4BAA8BqL,EAAMlpB,KACnDvP,KAAK0S,kBAAqB1S,KAAKu8B,iBAAiB9D,EAAMlpB,KAA3D,CAGAkpB,EAAMG,OACN54B,KAAKk9B,oBAAoBzE,GACzB,IAAI6D,EAAkBt8B,KAAKs8B,gBAAgB7D,EAAMS,wBACjDl5B,KAAKs8B,gBAAgB7D,EAAMS,wBAA0Bp0B,EAAgBw3B,GAAmB,GAAK,CAAC7D,WACvFz4B,KAAKu8B,iBAAiB9D,EAAMlpB,OAEvC8sB,EAAiBv6B,UAAUq7B,MAAQ,SAAUrmB,GACzC,IAAIxL,EAAQtL,KAGZ,GAFAA,KAAKitB,OAAOG,QAAQ,8BAAgCtW,GAE/C9W,KAAK0S,kBAAqB1S,KAAKs8B,gBAAgBxlB,GAApD,CAGA,IAAIsmB,EAAiBp9B,KAAKq9B,kBAAkBvmB,GAC5CsmB,EAAe1gB,SAAQ,SAAU+b,GAAS,OAAOntB,EAAM4xB,oBAAoBzE,MAC3E,IAAI6E,EAAgBx4B,EAAe9E,KAAKs8B,gBAAgBxlB,GAAgBsmB,UACjEp9B,KAAKs8B,gBAAgBxlB,GAC5B,IAAIymB,EAAqBv9B,KAAKw8B,0BAA0B1lB,GAGxD,UAFO9W,KAAKw8B,0BAA0B1lB,GAEjCwmB,GAAkBA,EAAc/6B,OAArC,CAGA,IAAIi7B,EAAe,IAAI,GAAax9B,KAAK08B,kBAAmB5lB,EAAe9W,KAAKwV,SAAU+nB,GACtFE,EAAyB34B,EAAew4B,EAAe,CAACE,IAC5Dx9B,KAAK0S,iBAAiB+qB,EAAuB/1B,KAAI,SAAUnE,GAAK,OAAOA,EAAEiF,aAE7E6zB,EAAiBv6B,UAAU47B,uBAAyB,SAAU5mB,EAAe6jB,GACzE,IAAIgD,EAAW,IAAI,GAAS7mB,EAAe9W,KAAKitB,OAAOuG,sBAAuBmH,GAE9E,OADA36B,KAAKi9B,WAAWU,GACTA,GAEXtB,EAAiBv6B,UAAU87B,qBAAuB,SAAU9mB,EAAe6mB,EAAU9C,EAAezvB,GAChGuyB,EAAS9C,cAAgBA,EACrBzvB,IACAuyB,EAASE,aAAezyB,GAE5BpL,KAAK8e,UAAU6e,GACf39B,KAAKm9B,MAAMrmB,IAEfulB,EAAiBv6B,UAAU8c,wBAA0B,SAAUkf,EAAarf,EAAYtH,EAAKohB,GACzF,IAAI5Z,EAAY,IAAI,GAAUmf,EAAavF,GAI3C,OAHA5Z,EAAUxH,IAAMA,EAChBwH,EAAUF,WAAaA,EACvBze,KAAKi9B,WAAWte,GACTA,GAEX0d,EAAiBv6B,UAAUo7B,oBAAsB,SAAUzE,GACvD,IAAI1mB,EAKAumB,EAAYG,EAAMH,UAClBe,EAAar5B,KAAKw8B,0BAA0B/D,EAAMS,wBACjDG,EAMDA,EAAWf,GAAae,EAAWf,GAAae,EAAWf,GAAa,EAAI,EAL5Et4B,KAAKw8B,0BAA0B/D,EAAMS,yBAA2BnnB,EAAK,GACjEA,EAAGumB,GAAa,EAChBvmB,IAMZsqB,EAAiBv6B,UAAUu7B,kBAAoB,SAAUvmB,GACrD,IAAIxL,EAAQtL,KACZ,OAAOqB,OAAOuR,KAAK5S,KAAKu8B,kBACnB1pB,QAAO,SAAUkrB,EAAMC,GACxB,IAAyC,IAArCA,EAASxqB,QAAQsD,GAAuB,CACxC,IAAImnB,EAAU3yB,EAAMixB,iBAAiByB,GAErC,cADO1yB,EAAMixB,iBAAiByB,GACvBl5B,EAAei5B,EAAM,CAACE,IAEjC,OAAOF,IACR,KAEA1B,EAhI0B,GAkItB,MCnIX,GAAgC,WAChC,SAAS6B,KAmBT,OAjBAA,EAAeC,6BAA+B,SAAUC,EAAiB7qB,GACrE,OAAO6qB,EAAgBlqB,QAAO,SAAUmqB,GACpC,IAAIlrB,EAAekrB,EAAU9uB,IAAI6D,OAAO3L,MAAM,KAC1C62B,EAAe,EAAS3oB,oBAAoBpC,GAEhD,OAA+B,IAAxB+qB,EAAa/7B,OAAe,EAASmR,cAAcP,EAAcI,GAAiB,EAASG,cAAcP,EAAcmrB,OAGtIJ,EAAeK,iCAAmC,SAAUH,EAAiBjmB,GACzE,OAAOimB,EAAgBlqB,QAAO,SAAUmqB,GAAa,OAAO,EAAStmB,gBAAgBsmB,EAAU9uB,IAAI4I,aAAeA,MAEtH+lB,EAAeM,8BAAgC,SAAUJ,EAAiBK,GACtE,OAAOL,EAAgBlqB,QAAO,SAAUmqB,GACpC,IAAIK,EAAkB,EAASlnB,iBAAiB6mB,EAAU9uB,IAAI4I,WAAWF,gBACzE,OAAOymB,IAAoBD,MAG5BP,EApBwB,GC2B/B,GAAoB,2CAMpB,GAAsC,WAsBtC,SAASS,EAAqBC,GAE1B5+B,KAAK6+B,qBAAuB,KAC5B7+B,KAAK8+B,sBAAwB,KAC7B9+B,KAAK++B,sBAAwB,KAE7B/+B,KAAKsS,OAASiiB,GAAmBqK,GACjC5+B,KAAKitB,OAASjtB,KAAKsS,OAAOoiB,OAAOzH,OACjCjtB,KAAKwV,SAAWxV,KAAKsS,OAAOkiB,KAAKhf,SACjCxV,KAAKg/B,SAAWh/B,KAAKsS,OAAOmiB,MAAMrN,uBAClCpnB,KAAKue,iBAAmBve,KAAKi/B,8BAA8Bj/B,KAAKsS,OAAOoiB,OAAOwK,UAAWl/B,KAAKwV,UAC9F,EAAiBwI,gCAAgChe,KAAKsS,OAAOkiB,KAAKvW,kBAAmBje,KAAKsS,OAAOkiB,KAAKtW,kBACtG,GAAiB6T,uBAAuB/xB,KAAKsS,OAAOkiB,KAAKrc,UAAWnY,KAAKsS,OAAOkiB,KAAK/U,mBAErFzf,KAAKmY,UAAYnY,KAAKsS,OAAOkiB,KAAKrc,WAAa,GAE/CnY,KAAKswB,aAAe,IAAI,EAAUtwB,KAAKwV,SAAUxV,KAAKsS,OAAOmiB,MAAMnQ,cAAetkB,KAAKg/B,UAElFv5B,OAAO05B,iBACR15B,OAAO05B,eAAiB,IAEvB15B,OAAO25B,cACR35B,OAAO25B,YAAc,IAEpB35B,OAAO45B,8BACR55B,OAAO45B,4BAA8B,IAEpC55B,OAAO65B,6BACR75B,OAAO65B,2BAA6B,IAExC75B,OAAO85B,KAAOv/B,KACd,IAAIw/B,EAAU/5B,OAAOuR,SAASgD,KAC1BT,EAAkB,EAASA,gBAAgBimB,GAI/C,GAFA,GAAYnP,2BAA2BrwB,KAAKswB,cAExC/W,GAAmBvZ,KAAKswB,aAAahG,yBAAwB,GAAO,CACpE,IAAImV,EAAYz/B,KAAK0/B,iBAAiBF,GAClCC,EAAUxiB,SAAW3U,EAAU2e,yBAC/BjnB,KAAK2/B,qCAAqCH,IAg9DtD,OA58DAn+B,OAAOkH,eAAeo2B,EAAqB78B,UAAW,YAAa,CAM/D0G,IAAK,WACD,OAAOxI,KAAKmW,kBAAkB0E,oBAOlCjS,IAAK,SAAU+P,GACX3Y,KAAKmW,kBAAoB,GAAiBic,eAAezZ,EAAK3Y,KAAKsS,OAAOkiB,KAAKvW,oBAEnFxV,YAAY,EACZC,cAAc,IAOlBi2B,EAAqB78B,UAAU89B,qBAAuB,WAClD,OAAO5/B,KAAKmW,mBAEhBwoB,EAAqB78B,UAAU+9B,uBAAyB,SAAUC,EAAqBf,GACnF,IAAKe,EACD,MAAM,EAAyB1uB,iCAAiC0uB,GAGhEf,GACA/+B,KAAK8+B,sBAAwBgB,EAC7B9/B,KAAK++B,sBAAwBA,EAC7B/+B,KAAKitB,OAAOkG,QAAQ,kKAGpBnzB,KAAK6+B,qBAAuBiB,EAE5B9/B,KAAK+/B,cACL//B,KAAKggC,iBAAiB13B,EAAU2e,wBAAyBjnB,KAAK+/B,cAAe//B,KAAKigC,kBAE7EjgC,KAAKigC,kBACVjgC,KAAKkgC,oBAAoB53B,EAAU2e,wBAAyBjnB,KAAKigC,mBAOzEtB,EAAqB78B,UAAUyX,gBAAkB,SAAUS,GAEvD,OADAha,KAAKitB,OAAOG,QAAQ,mCACb,EAAS7T,gBAAgBS,IAEpC2kB,EAAqB78B,UAAUo+B,oBAAsB,SAAUla,EAAiBrI,EAAU1a,GAGtF,GAFAjD,KAAKitB,OAAOG,QAAQ,uCACpBptB,KAAKswB,aAAa5G,0BAAyB,GACvC1D,IAAoB1d,EAAU2e,wBAC9BjnB,KAAKitB,OAAOG,QAAQ,gCAChBptB,KAAK++B,uBACL/+B,KAAKitB,OAAOG,QAAQ,iGACpBptB,KAAK8+B,sBAAsBnhB,IAEtB3d,KAAK6+B,uBACV7+B,KAAKitB,OAAOG,QAAQ,mGACpBptB,KAAK6+B,qBAAqB,KAAMlhB,QAGnC,IAAIqI,IAAoB1d,EAAU63B,qBAKnC,MAAM,EAAgB9wB,oCAJtBrP,KAAKitB,OAAOG,QAAQ,wCACpBnqB,EAAQ0a,KAMhBghB,EAAqB78B,UAAUk+B,iBAAmB,SAAUha,EAAiBoa,EAASziB,EAAUxa,GAI5F,GAHAnD,KAAKitB,OAAOG,QAAQ,oCAEpBptB,KAAKswB,aAAa5G,0BAAyB,GACvC1D,IAAoB1d,EAAU2e,wBAE9B,GADAjnB,KAAKitB,OAAOG,QAAQ,gCAChBptB,KAAK++B,sBACL/+B,KAAKitB,OAAOG,QAAQ,iFACpBptB,KAAK++B,sBAAsBqB,EAASziB,EAAS4T,kBAE5C,KAAIvxB,KAAK6+B,qBAMV,MADA7+B,KAAKitB,OAAOG,QAAQ,8FACdgT,EALNpgC,KAAKitB,OAAOG,QAAQ,gGACpBptB,KAAK6+B,qBAAqBuB,EAASziB,OAOtC,IAAIqI,IAAoB1d,EAAU63B,qBAKnC,MAAM,EAAgB9wB,oCAJtBrP,KAAKitB,OAAOG,QAAQ,wCACpBjqB,EAAOi9B,KAWfzB,EAAqB78B,UAAUu+B,cAAgB,SAAUC,GACrDtgC,KAAKitB,OAAOG,QAAQ,iCAEpB,IAAIpS,EAAU,EAAa8K,gBAAgBwa,GAAa,EAAMtgC,KAAKwV,SAAUlN,EAAU2e,yBACvFjnB,KAAKugC,wBAAwBj4B,EAAU2e,yBAAyB,EAAMjM,EAAS,KAAM,OAQzF2jB,EAAqB78B,UAAU0+B,qBAAuB,SAAUF,GAC5DtgC,KAAKitB,OAAOG,QAAQ,wCAEpB,IAAIpS,EAAU,EAAa8K,gBAAgBwa,GAAa,EAAOtgC,KAAKwV,SAAUlN,EAAU2e,yBACxFjnB,KAAKugC,wBAAwBj4B,EAAU2e,yBAAyB,EAAOjM,EAAS,KAAM,OAS1F2jB,EAAqB78B,UAAU2+B,WAAa,SAAUH,GAClD,IAAIh1B,EAAQtL,KACZA,KAAKitB,OAAOG,QAAQ,8BAEpB,IAAIpS,EAAU,EAAa8K,gBAAgBwa,GAAa,EAAMtgC,KAAKwV,SAAUlN,EAAU63B,sBACnFxC,EAAW39B,KAAKue,iBAAiBmf,uBAAuB1iB,EAAQlE,cAAeof,GAAqBoE,YACxG,OAAO,IAAIp3B,SAAQ,SAAUD,EAASE,GAClCmI,EAAMi1B,wBAAwBj4B,EAAU63B,sBAAsB,EAAMnlB,EAAS/X,EAASE,MAErFQ,MAAK,SAAU+8B,GAGhB,OAFAp1B,EAAM2hB,OAAOG,QAAQ,0BACrB9hB,EAAMiT,iBAAiBqf,qBAAqB5iB,EAAQlE,cAAe6mB,GAAU,GACtE+C,KAEN3hB,OAAM,SAAU7S,GAGjB,MAFAZ,EAAMglB,aAAahH,oBAAoBtO,EAAQxG,OAC/ClJ,EAAMiT,iBAAiBqf,qBAAqB5iB,EAAQlE,cAAe6mB,GAAU,EAAOzxB,EAAMd,WACpFc,MAUdyyB,EAAqB78B,UAAU6+B,kBAAoB,SAAUL,GACzD,IAAIh1B,EAAQtL,KACZA,KAAKitB,OAAOG,QAAQ,qCAEpB,IAAIpS,EAAU,EAAa8K,gBAAgBwa,GAAa,EAAOtgC,KAAKwV,SAAUlN,EAAU63B,sBACpFxC,EAAW39B,KAAKue,iBAAiBmf,uBAAuB1iB,EAAQlE,cAAeof,GAAqBkE,mBACxG,OAAO,IAAIl3B,SAAQ,SAAUD,EAASE,GAClCmI,EAAMi1B,wBAAwBj4B,EAAU63B,sBAAsB,EAAOnlB,EAAS/X,EAASE,MAEtFQ,MAAK,SAAU+8B,GAGhB,OAFAp1B,EAAM2hB,OAAOG,QAAQ,+BACrB9hB,EAAMiT,iBAAiBqf,qBAAqB5iB,EAAQlE,cAAe6mB,GAAU,GACtE+C,KAEN3hB,OAAM,SAAU7S,GAGjB,MAFAZ,EAAMglB,aAAahH,oBAAoBtO,EAAQxG,OAC/ClJ,EAAMiT,iBAAiBqf,qBAAqB5iB,EAAQlE,cAAe6mB,GAAU,EAAOzxB,EAAMd,WACpFc,MAWdyyB,EAAqB78B,UAAUy+B,wBAA0B,SAAUva,EAAiBD,EAAa/K,EAAS/X,EAASE,GAC/G,IAmBI4X,EAnBAzP,EAAQtL,KACZA,KAAKitB,OAAOG,QAAQ,2CAEpB,GAAYgD,6BACZ,IACIpwB,KAAKswB,aAAa5G,0BAAyB,GAE/C,MAAOnmB,GAEH,IAAIq9B,EAAc7a,EAAc,EAAgB1X,6BAA+B,EAAgBC,oCAC3FuyB,EAAoB9K,GAAuB/1B,KAAK8gC,gBAAgB9lB,EAAQxG,QAG5E,OAFAxU,KAAKswB,aAAahH,oBAAoBtO,EAAQxG,YAC9CxU,KAAKggC,iBAAiBha,EAAiB4a,EAAaC,EAAmB19B,GAiB3E,GAdI6iB,IAAoB1d,EAAU2e,yBAC9BjnB,KAAKswB,aAAa9L,QAAQrb,EAAmBwgB,iBAAkB,GAAKrhB,EAAUyiB,WAAaziB,EAAUoM,kBAAoBsG,EAAQxG,OAIjIwG,GAAWA,EAAQD,UAAYgL,GAC/BhL,EAAUC,EAAQD,QAClB/a,KAAKitB,OAAOG,QAAQ,8BAGpBrS,EAAU/a,KAAK+gC,aACf/gC,KAAKitB,OAAOG,QAAQ,gCAGnBrS,GAAY,EAAwBM,WAAWL,GAuChDhb,KAAKitB,OAAOG,QAAQ,2CACpBptB,KAAKghC,mBAAmBjmB,EAASiL,EAAiBD,EAAa/K,EAAS/X,EAASE,OAxCvB,CAC1D,IAAI4iB,EA2BC,CACD/lB,KAAKitB,OAAOG,QAAQ,kDACpBptB,KAAKitB,OAAOwB,KAAK,0BACboS,EAAoB9K,GAAuB/1B,KAAK8gC,gBAAgB9lB,EAAQxG,QAG5E,OAFAxU,KAAKswB,aAAahH,oBAAoBtO,EAAQxG,YAC9CxU,KAAKggC,iBAAiBha,EAAiB,EAAgBtX,+BAAgCmyB,EAAmB19B,GA9B1G,IAAI0lB,EAAc7oB,KAAKihC,qBAEvB,GAAIpY,IAAgB7N,EAAQ5H,OAAQ,CAChCpT,KAAKitB,OAAOwB,KAAK,2EACjB,IAAIyS,EAAelhC,KAAKmhC,oBAAoBnmB,GAC5Chb,KAAKohC,aAAc,EACnBphC,KAAKqhC,mBAAmBH,GAAcv9B,MAAK,SAAUga,GACjDrS,EAAM81B,aAAc,EACpB91B,EAAM2hB,OAAOwB,KAAK,oCAClBnjB,EAAM40B,oBAAoBla,EAAiBrI,EAAU1a,MAEtD,SAAUiJ,GACTZ,EAAM81B,aAAc,EACpB91B,EAAM2hB,OAAO/gB,MAAM,4CAA8CA,GAEjEZ,EAAM01B,mBAAmB,KAAMhb,EAAiBD,EAAa/K,EAAS/X,EAASE,WAKnFnD,KAAKitB,OAAOG,QAAQ,mDACpBptB,KAAKghC,mBAAmB,KAAMhb,EAAiBD,EAAa/K,EAAS/X,EAASE,KAyB9Fw7B,EAAqB78B,UAAUk/B,mBAAqB,SAAUjmB,EAASiL,EAAiBD,EAAa/K,EAAS/X,EAASE,GACnH,OAAOT,EAAU1C,UAAM,OAAQ,GAAQ,WACnC,IAAI4sB,EAAkB0E,EAA6BgQ,EAAuBC,EAAajrB,EAAckrB,EAAgBxU,EAAahT,EAAMynB,EAASC,EAAUC,EAC3J,OAAO/9B,EAAY5D,MAAM,SAAU+R,GAC/B,OAAQA,EAAG7N,OACP,KAAK,EACDlE,KAAKitB,OAAOG,QAAQ,sCACpBptB,KAAKitB,OAAOG,QAAQ,qBAAuBpH,EAAkB,kBAAoBD,GACjF6G,EAAmB5R,EAAQ5H,OAAS4H,EAAQ5H,OAAOtL,KAAK,KAAK2L,cAAgBnL,EAAUuN,WAAW/N,KAAK,KACvG9H,KAAKitB,OAAOsG,WAAW,sBAAwB3G,GAC/C0U,EAAyBtmB,GAAWA,EAAQ7C,UAAa,GAAiBia,eAAepX,EAAQ7C,UAAWnY,KAAKsS,OAAOkiB,KAAKvW,kBAAmBjD,EAAQyE,mBAAqBzf,KAAKmW,kBAClLpE,EAAG7N,MAAQ,EACf,KAAK,EAED,OADA6N,EAAG3N,KAAKS,KAAK,CAAC,EAAG,GAAI,CAAE,KACjBy8B,EAAsB7gB,oBAA4B,CAAC,EAAa,IACtEzgB,KAAKitB,OAAOG,QAAQ,oCACb,CAAC,EAAa,GAAiBwE,wBAAwB0P,EAAuBthC,KAAKue,iBAAkBvD,EAAQlE,iBACxH,KAAK,EAED,OADA/E,EAAG5N,OACI,CAAC,EAAa,GACzB,KAAK,EACDnE,KAAKitB,OAAOG,QAAQ,uCACpBrb,EAAG7N,MAAQ,EACf,KAAK,EAYD,GAXAoS,EAAeyP,EAAczc,EAAcC,SAAWvJ,KAAK4hC,aAAa7mB,EAASC,EAAQ5H,QACzFouB,EAAiBxmB,EAAQ6mB,mBAAqBp8B,OAAOuR,SAASC,KAC9Dqa,EAA8B,IAAI,EAAwBgQ,EAAuBthC,KAAKwV,SAAUc,EAActW,KAAK8hC,eAAe9mB,GAAWA,EAAQzE,aAAcyE,EAAQ5H,OAAQ4H,EAAQxG,MAAOwG,EAAQlE,eAC1M9W,KAAKitB,OAAOG,QAAQ,mDACpBptB,KAAK+hC,mBAAmBzQ,EAA6BvW,EAASgL,EAAayb,GAC3ExhC,KAAKitB,OAAOG,QAAQ,0BAEpBkE,EAA4BxW,oBAAoBC,EAASC,GACzDhb,KAAKitB,OAAOG,QAAQ,2CACpBJ,EAAc,EAASjX,kBAAkBub,GAA+BhpB,EAAU05B,uBAE9Ehc,IAAoB1d,EAAU2e,wBACzBlB,EAMD/lB,KAAKitB,OAAOG,QAAQ,uEALpBptB,KAAKswB,aAAa9L,QAAQ,EAAUqG,0BAA0B1hB,EAAmBiiB,gBAAiBpQ,EAAQxG,OAAQ8c,EAA4B9c,MAAOxU,KAAKg/B,UAC1Jh/B,KAAKitB,OAAOG,QAAQ,6BACpBptB,KAAKitB,OAAOsG,WAAW,iBAAmBjC,EAA4B9c,YAMzE,IAAIwR,IAAoB1d,EAAU63B,qBAUnC,MADAngC,KAAKitB,OAAOG,QAAQ,+CACd,EAAgB/d,oCATtB5J,OAAO25B,YAAYv6B,KAAKysB,EAA4B9c,OACpD/O,OAAOw8B,YAAclc,EAAczd,EAAU45B,MAAQ55B,EAAU65B,WAC/DniC,KAAKitB,OAAOG,QAAQ,yBACpBptB,KAAKitB,OAAOsG,WAAW,gBAAkBjC,EAA4B9c,OAErExU,KAAKoiC,iBAAiB9Q,EAA4B9c,MAAOoY,EAAkB3pB,EAASE,GAMxF,GAAM6iB,IAAoB1d,EAAU63B,qBAAuB,MAAO,CAAC,EAAa,GAChFngC,KAAKitB,OAAOG,QAAQ,sDAEpB,IACImU,EAAcvhC,KAAKqiC,UAAUrV,EAAa,OAAQ1kB,EAAUg6B,WAAYh6B,EAAUi6B,aAElF,GAAYtS,WAAWsR,GAE3B,MAAOh+B,GAIH,GAHAvD,KAAKitB,OAAOwB,KAAKtiB,EAAuBE,iBAAiBtB,KAAO,IAAMoB,EAAuBE,iBAAiBrB,MAC9GhL,KAAKswB,aAAa9L,QAAQnb,EAAeuQ,MAAOzN,EAAuBE,iBAAiBtB,MACxF/K,KAAKswB,aAAa9L,QAAQnb,EAAe0e,WAAY5b,EAAuBE,iBAAiBrB,MACzF7H,EAEA,OADAA,EAAO,EAAgBwK,0BAChB,CAAC,GAGhB,IAAK4zB,EAAa,MAAO,CAAC,EAAa,GACvCxvB,EAAG7N,MAAQ,EACf,KAAK,EAED,OADA6N,EAAG3N,KAAKS,KAAK,CAAC,EAAG,EAAG,CAAE,IACf,CAAC,EAAa,GAAY6oB,oBAAoB6T,EAAavhC,KAAKsS,OAAOoiB,OAAOT,iBAAkBjH,EAAahtB,KAAKitB,SAC7H,KAAK,EAWD,OAVAjT,EAAOjI,EAAG5N,OACVnE,KAAKwiC,6BAA6BxoB,GAElCha,KAAKswB,aAAa5G,0BAAyB,GAC3C1pB,KAAKitB,OAAOwB,KAAK,wBAEbzuB,KAAKsS,OAAOsiB,UAAUR,WACtBp0B,KAAKyiC,UAAU,wBAAyBzoB,GAE5C,GAAYkW,cACL,CAAC,EAAa,GACzB,KAAK,EAaD,OAZAuR,EAAU1vB,EAAG5N,OACThB,GACAA,EAAOs+B,GAEPzhC,KAAKsS,OAAOsiB,UAAUR,UACtBp0B,KAAKyiC,UAAU,mBAAoBhB,EAAQr2B,UAAY9C,EAAUoM,kBAAoB+sB,EAAQp2B,eAI7FrL,KAAKswB,aAAa5G,0BAAyB,GAC3C6X,EAAYpR,SAET,CAAC,EAAa,GACzB,KAAK,EAAG,MAAO,CAAC,EAAa,IAC7B,KAAK,EAEGnV,EAAQ0nB,oBACR1iC,KAAKitB,OAAOG,QAAQ,wCACpBsU,EAAW1mB,EAAQ0nB,mBAAmB1V,IAErB,IAAb0U,GACA1hC,KAAKitB,OAAOG,QAAQ,uDACpBptB,KAAK2iC,eAAe3V,IAGpBhtB,KAAKitB,OAAOG,QAAQ,4DAKxBptB,KAAKitB,OAAOG,QAAQ,oCACpBptB,KAAK2iC,eAAe3V,IAExBjb,EAAG7N,MAAQ,GACf,KAAK,GAAI,MAAO,CAAC,EAAa,IAC9B,KAAK,GAQD,OAPAy9B,EAAQ5vB,EAAG5N,OACXnE,KAAKitB,OAAO/gB,MAAMy1B,GAClB3hC,KAAKswB,aAAahH,oBAAoBtO,EAAQxG,OAC9CxU,KAAKggC,iBAAiBha,EAAiB,EAAgBvY,8BAA8Bk0B,EAAMl7B,UAAWsvB,GAAuB/a,EAAQxG,OAAQrR,GACzIo+B,GACAA,EAAYpR,QAET,CAAC,EAAa,IACzB,KAAK,GAAI,MAAO,CAAC,WASjCwO,EAAqB78B,UAAU8gC,UAAY,SAAU5nB,GAGjD,GAFAhb,KAAKitB,OAAOG,QAAQ,8BAEfpS,EACD,MAAM,EAAyBlJ,0BAGnC,IAAKkJ,EAAQgB,MAAQhB,EAAQkB,UACzB,MAAM,EAAyBnJ,uBAEnC,OAAO/S,KAAKqhC,mBAAmBr/B,EAASA,EAAS,GAAIgZ,GAAU,CAAE5H,OAAQ9K,EAAUuN,eAcvF8oB,EAAqB78B,UAAUu/B,mBAAqB,SAAUf,GAC1D,IAAIh1B,EAAQtL,KACZA,KAAKitB,OAAOG,QAAQ,sCAEpB,IAAIpS,EAAU,EAAa8K,gBAAgBwa,GAAa,EAAOtgC,KAAKwV,SAAUlN,EAAUu6B,uBACpFlF,EAAW39B,KAAKue,iBAAiBmf,uBAAuB1iB,EAAQlE,cAAeof,GAAqBiE,oBACpGvN,EAAmB,EAAa1F,uBAAuBlM,GAC3D,OAAO,IAAI9X,SAAQ,SAAUD,EAASE,GAAU,OAAOT,EAAU4I,OAAO,OAAQ,GAAQ,WACpF,IAAIuI,EAAOkH,EAAS8N,EAAavS,EAAcgb,EAA6BrW,EAAmB6nB,EAAqB1C,EAAS2C,EAAqBnQ,EAAYoQ,EAC9J,OAAOp/B,EAAY5D,MAAM,SAAU+R,GAC/B,OAAQA,EAAG7N,OACP,KAAK,EAeD,GAbA,GAAYksB,6BACZvc,EAAQmH,EAAQ5H,OAAOtL,KAAK,KAAK2L,cACjCzT,KAAKitB,OAAOsG,WAAW,sBAAwB1f,GAC3CmH,EAAQD,SACRA,EAAUC,EAAQD,QAClB/a,KAAKitB,OAAOG,QAAQ,8BAGpBrS,EAAU/a,KAAK+gC,aACf/gC,KAAKitB,OAAOG,QAAQ,gCAExBvE,EAAc7oB,KAAKswB,aAAa3L,QAAQrc,EAAUugB,cAE7C9N,IAAaC,EAAQgB,MAAOhB,EAAQkB,WAAcvQ,EAAYC,QAAQid,GAGvE,OAFA7oB,KAAKitB,OAAOwB,KAAK,0BAEV,CAAC,EAActrB,EAAO,EAAgBuL,iCAsBjD,GApBA4H,EAAetW,KAAK4hC,aAAa7mB,EAASC,EAAQ5H,QAClDpT,KAAKitB,OAAOG,QAAQ,kBAAoB9W,GACxCgb,EAA8B,IAAI,EAAwB,GAAiBc,eAAepX,EAAQ7C,UAAWnY,KAAKsS,OAAOkiB,KAAKvW,kBAAmBjD,EAAQyE,mBAAoBzf,KAAKwV,SAAUc,EAActW,KAAK8hC,eAAe9mB,EAAQzE,aAAcyE,EAAQ5H,OAAQ4H,EAAQxG,MAAOwG,EAAQlE,eAC3R9W,KAAKitB,OAAOG,QAAQ,mDAEhB,EAAwB/R,WAAWL,IAAYD,GAC/CuW,EAA4BxW,oBAAoBC,EAASC,EAAS,MAAM,GACxEhb,KAAKitB,OAAOG,QAAQ,4DAGdrS,GAAYpP,EAAYC,QAAQid,GAMtC7oB,KAAKitB,OAAOG,QAAQ,yCALpBnS,EAAoB,EAAWsI,eAAesF,GAC9C7oB,KAAKitB,OAAOG,QAAQ,wGACpBkE,EAA4BxW,oBAAoBC,EAAS,KAAME,GAAmB,IAKtF6nB,EAAsB9nB,EAAQI,eAAiBkW,EAA4B3a,aAEtEmsB,IAAwB9nB,EAAQioB,aACjC,IACIF,EAAsB/iC,KAAKkjC,eAAe5R,EAA6BvW,GAE3E,MAAOxX,GACH68B,EAAU78B,EAGlB,OAAKw/B,GACL/iC,KAAKitB,OAAOG,QAAQ,+BACpBptB,KAAKitB,OAAOsG,WAAW,iBAAmBvnB,KAAK0V,UAAUqhB,EAAoB3vB,SAC7EnQ,EAAQ8/B,GACD,CAAC,EAAc,OAJW,CAAC,EAAa,GAKnD,KAAK,EACD,OAAK3C,GACLpgC,KAAKitB,OAAOiB,QAAQkS,EAAQh1B,UAAY,IAAMg1B,EAAQ/0B,cACtDlI,EAAOi9B,GACA,CAAC,EAAc,OAHD,CAAC,EAAa,GAIvC,KAAK,EACDxN,OAAa,EAETA,EADAkQ,EACa,+CAER9nB,EAAQioB,aACA,yEAGA,uCAEjBjjC,KAAKitB,OAAOG,QAAQwF,GAEftB,EAA4Bnb,oBAC7Bmb,EAA4Bnb,kBAAoB6E,EAAQ7C,UACpD,GAAiBia,eAAepX,EAAQ7C,UAAWnY,KAAKsS,OAAOkiB,KAAKvW,kBAAmBjD,EAAQyE,mBAC7Fzf,KAAKmW,mBAEfnW,KAAKitB,OAAOsG,WAAW,uBAAyBjC,EAA4BnZ,WAC5EpG,EAAG7N,MAAQ,EACf,KAAK,EAED,OADA6N,EAAG3N,KAAKS,KAAK,CAAC,EAAG,EAAG,CAAE,IAChBysB,EAA4Bnb,kBAAkBsK,oBAA4B,CAAC,EAAa,IAC9FzgB,KAAKitB,OAAOG,QAAQ,oCACb,CAAC,EAAa,GAAiBwE,wBAAwBN,EAA4Bnb,kBAAmBnW,KAAKue,iBAAkBvD,EAAQlE,iBAChJ,KAAK,EAGD,OAFA/E,EAAG5N,OACHnE,KAAKitB,OAAOG,QAAQ,+DACb,CAAC,EAAa,GACzB,KAAK,EACDptB,KAAKitB,OAAOG,QAAQ,uCACpBrb,EAAG7N,MAAQ,EACf,KAAK,EA0BD,OArBIuB,OAAO05B,eAAevS,IACtB5sB,KAAKitB,OAAOG,QAAQ,oDAEpBptB,KAAKoiC,iBAAiB38B,OAAO05B,eAAevS,GAAmBA,EAAkB3pB,EAASE,IAGtF6X,EAAQ5H,QAAU,EAAS6B,uBAAuB+F,EAAQ5H,SAK1DpT,KAAKitB,OAAOG,QAAQ,gDACpBptB,KAAKohC,aAAc,EACnBphC,KAAKmjC,aAAavW,EAAkB3pB,EAASE,EAAQ4X,EAASuW,KAI9DtxB,KAAKitB,OAAOG,QAAQ,yBACpBptB,KAAKmiC,WAAWvV,EAAkB3pB,EAASE,EAAQ4X,EAASuW,IAG7D,CAAC,EAAa,GACzB,KAAK,EAID,OAHA0R,EAAQjxB,EAAG5N,OACXnE,KAAKitB,OAAO/gB,MAAM82B,GAClB7/B,EAAO,EAAgBsK,8BAA8Bu1B,EAAMv8B,aACpD,CAAC,EAAc,MAC1B,KAAK,EAAG,MAAO,CAAC,aAIvB9C,MAAK,SAAUy/B,GAGhB,OAFA93B,EAAM2hB,OAAOG,QAAQ,+BACrB9hB,EAAMiT,iBAAiBqf,qBAAqB5iB,EAAQlE,cAAe6mB,GAAU,GACtEyF,KAENrkB,OAAM,SAAU7S,GAGjB,MAFAZ,EAAMglB,aAAahH,oBAAoBtO,EAAQxG,OAC/ClJ,EAAMiT,iBAAiBqf,qBAAqB5iB,EAAQlE,cAAe6mB,GAAU,EAAOzxB,EAAMd,WACpFc,MAiBdyyB,EAAqB78B,UAAUugC,UAAY,SAAUrV,EAAaqW,EAAOf,EAAYC,GACjFviC,KAAKitB,OAAOG,QAAQ,6BACpB,IAKI,IAAIkW,EAAU79B,OAAO89B,WAAa99B,OAAO89B,WAAa99B,OAAO+9B,QACzDC,EAASh+B,OAAOi+B,UAAYj+B,OAAOi+B,UAAYj+B,OAAOk+B,QAKtD96B,EAAQpD,OAAOm+B,YAAcxe,SAASye,gBAAgBC,aAAe1e,SAASvhB,KAAKigC,YACnF/6B,EAAStD,OAAOs+B,aAAe3e,SAASye,gBAAgBG,cAAgB5e,SAASvhB,KAAKmgC,aACtFC,EAASp7B,EAAQ,EAAMy5B,EAAa,EAAMgB,EAC1CY,EAAUn7B,EAAS,EAAMw5B,EAAc,EAAMkB,EAE7CU,EAAc1+B,OAAO4X,KAAK2P,EAAaqW,EAAO,SAAWf,EAAa,YAAcC,EAAc,SAAW2B,EAAQ,UAAYD,EAAO,oBAC5I,IAAKE,EACD,MAAM,EAAgBx2B,yBAK1B,OAHIw2B,EAAYC,OACZD,EAAYC,QAETD,EAEX,MAAO5gC,GAEH,MADAvD,KAAKswB,aAAa5G,0BAAyB,GACrC,EAAgB/b,uBAAuBpK,EAAEkD,cAWvDk4B,EAAqB78B,UAAUuiC,kBAAoB,SAAUrX,EAAagB,EAAWpB,GACjF,OAAOlqB,EAAU1C,UAAM,OAAQ,GAAQ,WACnC,IAAIskC,EAAehV,EAAQvd,EAAIiI,EAAMuqB,EACrC,OAAO3gC,EAAY5D,MAAM,SAAUsc,GAC/B,OAAQA,EAAGpY,OACP,KAAK,EAID,OAHAogC,EAAgB7+B,OAAO05B,eAAevS,GACtC5sB,KAAKitB,OAAOsG,WAAW,qCAAuC3G,EAAmB,IAAM0X,GACvFtkC,KAAKswB,aAAa9L,QAAQ,EAAUqG,0BAA0B1hB,EAAmB2hB,aAAcwZ,GAAgBh8B,EAAUyiB,YACpH/qB,KAAKsS,OAAOoiB,OAAOR,kBACjB,CAAC,EAAa,GAAYnG,UAAUf,EAAagB,EAAWhuB,KAAKsS,OAAOoiB,OAAOR,kBAAmBl0B,KAAKitB,SAD5D,CAAC,EAAa,GAEpE,KAAK,EAED,OADAlb,EAAKuK,EAAGnY,OACD,CAAC,EAAa,GACzB,KAAK,EACD4N,EAAK,GAAYsc,cAAcrB,EAAagB,EAAWhuB,KAAKitB,QAC5D3Q,EAAGpY,MAAQ,EACf,KAAK,EACDorB,EAASvd,EACTuK,EAAGpY,MAAQ,EACf,KAAK,EAED,OADAoY,EAAGlY,KAAKS,KAAK,CAAC,EAAG,EAAG,CAAE,IACf,CAAC,EAAa,GAAYgoB,qBAAqByC,EAAOxC,cAAe9sB,KAAKsS,OAAOoiB,OAAOT,iBAAkBjH,EAAahtB,KAAKitB,SACvI,KAAK,EAKD,OAJAjT,EAAOsC,EAAGnY,OACN6V,GACAha,KAAKwiC,6BAA6BxoB,GAE/B,CAAC,EAAa,GACzB,KAAK,EAYD,MAXAuqB,EAAUjoB,EAAGnY,OACTnE,KAAKswB,aAAa3L,QAAQ,EAAUkG,0BAA0B1hB,EAAmB2hB,aAAcwZ,MAAoBh8B,EAAUyiB,aAE7H/qB,KAAKitB,OAAOG,QAAQ,sCAAyCptB,KAAKsS,OAAOoiB,OAAOT,iBAAmB,IAAQ,gCAAkCrH,EAAmB,IAAM0X,GAElKA,GAAiB7+B,OAAO45B,4BAA4BiF,IACpD7+B,OAAO45B,4BAA4BiF,GAAe,KAAMC,GAE5DvkC,KAAKswB,aAAazL,WAAW,EAAUgG,0BAA0B1hB,EAAmB2hB,aAAcwZ,KAEtG,GAAYjV,mBAAmBC,GACzBiV,EACV,KAAK,EAED,OADA,GAAYlV,mBAAmBC,GACxB,CAAC,WAY5BqP,EAAqB78B,UAAU6gC,eAAiB,SAAU3V,EAAamX,GAEnE,IAAInX,GAAgBrhB,EAAYC,QAAQohB,GAQpC,MADAhtB,KAAKitB,OAAOwB,KAAK,yBACX,EAAUjjB,sBAAsB,yBAPtC,IAAIm3B,EAAiBwB,GAA4B1+B,OAC7CmtB,EAAauR,EAAc,6BAA+BnX,EAAc,eAAiBA,EAC7FhtB,KAAKitB,OAAOiB,QAAQ0E,GACpB+P,EAAe3rB,SAAS/U,OAAO+qB,IAgBvC2R,EAAqB78B,UAAUsgC,iBAAmB,SAAUkC,EAAe1X,EAAkB3pB,EAASE,GAClG,IAAImI,EAAQtL,KAEZyF,OAAO05B,eAAevS,GAAoB0X,EAErC7+B,OAAO65B,2BAA2BgF,KACnC7+B,OAAO65B,2BAA2BgF,GAAiB,IAGvD7+B,OAAO65B,2BAA2BgF,GAAez/B,KAAK,CAAE5B,QAASA,EAASE,OAAQA,IAE7EsC,OAAO45B,4BAA4BiF,KACpC7+B,OAAO45B,4BAA4BiF,GAAiB,SAAU3mB,EAAUzR,UAE7DzG,OAAO05B,eAAevS,GAE7B,IAAK,IAAIxqB,EAAI,EAAGA,EAAIqD,OAAO65B,2BAA2BgF,GAAe/hC,SAAUH,EAC3E,IACI,GAAI8J,EACAzG,OAAO65B,2BAA2BgF,GAAeliC,GAAGe,OAAO+I,OAE1D,KAAIyR,EAKL,MADArS,EAAMglB,aAAahH,oBAAoBgb,GACjC,EAAU94B,sBAAsB,oCAJtC/F,OAAO65B,2BAA2BgF,GAAeliC,GAAGa,QAAQ0a,IAOpE,MAAOpa,GACH+H,EAAM2hB,OAAOkG,QAAQ5vB,UAItBkC,OAAO65B,2BAA2BgF,UAClC7+B,OAAO45B,4BAA4BiF,MAUtD3F,EAAqB78B,UAAU0iC,OAAS,SAAU1tB,GAC9C9W,KAAKitB,OAAOG,QAAQ,0BACpBptB,KAAKykC,YAAY3tB,IAMrB6nB,EAAqB78B,UAAU2iC,YAAc,SAAU3tB,GACnD,OAAOpU,EAAU1C,UAAM,OAAQ,GAAQ,WACnC,IAAI0kC,EAAsB/G,EAAUgH,EAAoBC,EAAsB5X,EAAa6X,EAC3F,OAAOjhC,EAAY5D,MAAM,SAAU+R,GAC/B,OAAQA,EAAG7N,OACP,KAAK,EACDwgC,EAAuB5tB,GAAiBxR,EAAYC,gBACpDo4B,EAAW39B,KAAKue,iBAAiBmf,uBAAuBgH,EAAsBxO,GAAqBsE,QACnGx6B,KAAK8kC,aACL9kC,KAAK+a,QAAU,KACfhJ,EAAG7N,MAAQ,EACf,KAAK,EAED,OADA6N,EAAG3N,KAAKS,KAAK,CAAC,EAAG,EAAG,CAAE,IAChB7E,KAAKmW,kBAAkBsK,oBAA4B,CAAC,EAAa,IACvEzgB,KAAKitB,OAAOG,QAAQ,oCACb,CAAC,EAAa,GAAiBwE,wBAAwB5xB,KAAKmW,kBAAmBnW,KAAKue,iBAAkBzH,KACjH,KAAK,EAED,OADA/E,EAAG5N,OACI,CAAC,EAAa,GACzB,KAAK,EACDnE,KAAKitB,OAAOG,QAAQ,uCACpBrb,EAAG7N,MAAQ,EACf,KAAK,EAwBD,OAvBAygC,EAAqB,qBAAuBD,EAC5CE,OAAuB,EACnB5kC,KAAK+kC,4BACLH,EAAuB,6BAA+B/9B,mBAAmB7G,KAAK+kC,4BAC9E/kC,KAAKitB,OAAOG,QAAQ,+BAGpBwX,EAAuB,GACvB5kC,KAAKitB,OAAOG,QAAQ,8DAExBJ,OAAc,EACVhtB,KAAKmW,kBAAkBoK,oBACvByM,EAAchtB,KAAKmW,kBAAkBoK,mBAAqB,IAAMokB,EAAqBC,EACrF5kC,KAAKitB,OAAOG,QAAQ,gDACpBptB,KAAKitB,OAAOsG,WAAW,uBAAyBvzB,KAAKmW,kBAAkBoK,sBAGvEyM,EAAchtB,KAAKmY,UAAY,sBAAwBwsB,EAAqBC,EAC5E5kC,KAAKitB,OAAOG,QAAQ,4CAExBptB,KAAKue,iBAAiBqf,qBAAqB8G,EAAsB/G,GAAU,GAC3E39B,KAAKitB,OAAOG,QAAQ,oCACpBptB,KAAK2iC,eAAe3V,GACb,CAAC,EAAa,GACzB,KAAK,EAGD,OAFA6X,EAAU9yB,EAAG5N,OACbnE,KAAKue,iBAAiBqf,qBAAqB8G,EAAsB/G,GAAU,EAAOkH,EAAQz5B,WACnF,CAAC,EAAa,GACzB,KAAK,EAAG,MAAO,CAAC,WAUhCuzB,EAAqB78B,UAAUgjC,WAAa,WACxC9kC,KAAKitB,OAAOG,QAAQ,kBACpB3nB,OAAO25B,YAAc,GAErB,IADA,IAAIhB,EAAkBp+B,KAAKswB,aAAanG,aAAa7hB,EAAUkN,SAAUlN,EAAUiS,uBAC1EnY,EAAI,EAAGA,EAAIg8B,EAAgB77B,OAAQH,IACxCpC,KAAKswB,aAAazL,WAAW7Y,KAAK0V,UAAU0c,EAAgBh8B,GAAGmN,MAEnEvP,KAAKswB,aAAalH,kBAClBppB,KAAKswB,aAAatF,kBAClBhrB,KAAKitB,OAAOG,QAAQ,kBAQxBuR,EAAqB78B,UAAUkjC,mBAAqB,SAAUvqB,GAC1Dza,KAAKitB,OAAOG,QAAQ,oCAEpB,IADA,IAAI6X,EAAmBjlC,KAAKswB,aAAarG,mBAAmB3hB,EAAUkN,SAAUlN,EAAUiS,uBACjFnY,EAAI,EAAGA,EAAI6iC,EAAiB1iC,OAAQH,IAAK,CAC9C,IAAIoH,EAAQy7B,EAAiB7iC,GACzBoH,EAAMxG,MAAMyX,cAAgBA,IAC5Bza,KAAKswB,aAAazL,WAAW7Y,KAAK0V,UAAUlY,EAAM+F,MAClDvP,KAAKitB,OAAOsG,WAAW,yBAA2B/pB,EAAM+F,QAapEovB,EAAqB78B,UAAUojC,WAAa,SAAUlrB,GAGlD,OAFAha,KAAKitB,OAAOwB,KAAK,8EACjBzuB,KAAKitB,OAAOG,QAAQ,8BACb,EAAS7T,gBAAgBS,IAOpC2kB,EAAqB78B,UAAUqjC,gBAAkB,SAAUnrB,EAAMorB,EAAeC,GAC5ErlC,KAAKitB,OAAOwB,KAAK,+EAEjB,IAKI9Q,EACAyiB,EANAX,EAAY2F,EACX3F,IACDz/B,KAAKitB,OAAOG,QAAQ,kDACpBqS,EAAYz/B,KAAK0/B,iBAAiB1lB,IAKtC,IACI2D,EAAW3d,KAAKslC,kBAAkBtrB,EAAMylB,GAE5C,MAAOzgB,GACHohB,EAAUphB,EAEd,IAEIhf,KAAKswB,aAAatF,gBAAgByU,EAAUjrB,OAC5C,IAAI+c,EAAevxB,KAAK8gC,gBAAgBrB,EAAUjrB,OAClD,GAAImJ,GAeA,GAdK8hB,EAAUwC,cAAgB35B,EAAU65B,YAAexkB,EAASlD,aACzDhV,OAAO8mB,SAAW9mB,OAClBzF,KAAKitB,OAAOG,QAAQ,iDAGpBptB,KAAKitB,OAAOG,QAAQ,2CAExBptB,KAAKitB,OAAOG,QAAQ,6BAA+B/nB,EAAoBwU,cACvE8D,EAASoL,UAAY1jB,EAAoBwU,cAEpC4lB,EAAUwC,cAAgB35B,EAAU45B,QACzCliC,KAAKitB,OAAOG,QAAQ,6BAA+B/nB,EAAoByU,UACvE6D,EAASoL,UAAY1jB,EAAoByU,WAExCurB,EAGD,OAFArlC,KAAKitB,OAAOG,QAAQ,iCACpBptB,KAAKigC,iBAAmBtiB,QAI3B,IAAK0nB,EAKN,OAJArlC,KAAKitB,OAAOG,QAAQ,yDACpBptB,KAAKigC,iBAAmBlK,GAAuBxE,GAC/CvxB,KAAK+/B,cAAgBK,OACrBpgC,KAAKswB,aAAahH,oBAAoBmW,EAAUjrB,OAGpDxU,KAAKitB,OAAOG,QAAQ,gDACpBiY,EAAe1nB,EAAUyiB,GAE7B,MAAOphB,GAEH,MADAhf,KAAKitB,OAAO/gB,MAAM,uDAAyD8S,GACrE,EAAgBxQ,8BAA8BwQ,EAAIvY,cAShEk4B,EAAqB78B,UAAU0gC,6BAA+B,SAAUxoB,GACpEha,KAAKitB,OAAOG,QAAQ,gDAEpB,IAAImY,EAAevrB,GAAQvU,OAAOuR,SAASgD,KAEvCylB,EAAYz/B,KAAK0/B,iBAAiB6F,GACtCvlC,KAAKitB,OAAOG,QAAQ,gCACpB,IAAIoY,EAAwB//B,OAAO45B,4BAA4BI,EAAUjrB,OACzExU,KAAKmlC,gBAAgBI,EAAc9F,EAAW+F,IAQlD7G,EAAqB78B,UAAU69B,qCAAuC,SAAU3lB,GAC5Eha,KAAKitB,OAAOwB,KAAK,8BACjBzuB,KAAKitB,OAAOG,QAAQ,wDAEpB,GAAYU,iBAAiBroB,QAC7BzF,KAAKitB,OAAOG,QAAQ,gCAEpB,IAAIqS,EAAYz/B,KAAK0/B,iBAAiB1lB,GAEtC,GAAIha,KAAKsS,OAAOkiB,KAAKV,2BAA6BruB,OAAO8mB,SAAW9mB,OAAQ,CACxEzF,KAAKitB,OAAOG,QAAQ,mHACpB,IAAIqY,EAAkBzlC,KAAKswB,aAAa3L,QAAQ,EAAUkG,0BAA0B1hB,EAAmBgiB,cAAesU,EAAUjrB,OAAQxU,KAAKg/B,UAE7I,IAAKyG,GAAuC,SAApBA,EAGpB,OAFAzlC,KAAKitB,OAAO/gB,MAAM,mFAClBzG,OAAOuR,SAAS/U,OAAO,KAIvBjC,KAAKitB,OAAOG,QAAQ,+CACpB,IAAIsY,EAAa,EAASxuB,kBAAkBzR,OAAOuR,SAASC,MACxD0uB,EAAmB,EAASzuB,kBAAkBuuB,GAClD,GAAIC,IAAeC,EAIf,OAHA3lC,KAAKitB,OAAOG,QAAQ,oDACpBptB,KAAKitB,OAAOsG,WAAW,eAAiBmS,EAAa,uBAAyBC,QAC9ElgC,OAAOuR,SAAS/U,OAAO,GAAK0jC,EAAmB3rB,GAI/Cha,KAAKitB,OAAOG,QAAQ,yCACpB,IAAIwY,EAA4B,EAASpuB,iBAAiBiuB,GACtDG,EAA0B/sB,OAC1B7Y,KAAKitB,OAAOG,QAAQ,4DACpB3nB,OAAOuR,SAASgD,KAAO4rB,EAA0B/sB,WAKvD7Y,KAAKsS,OAAOkiB,KAAKV,2BACvB9zB,KAAKitB,OAAOG,QAAQ,2DAExBptB,KAAKmlC,gBAAgBnrB,EAAMylB,EAAW,OAS1Cd,EAAqB78B,UAAU49B,iBAAmB,SAAU1lB,GACxDha,KAAKitB,OAAOG,QAAQ,oCACpB,IACIyY,EADApsB,EAAa,EAASC,gBAAgBM,GAE1C,IAAKP,EACD,MAAM,EAAUjO,sBAAsB,kCAE1C,IAAIiO,EAAW/X,eAAe2D,EAAoBygC,OAY9C,MAAM,EAAUt6B,sBAAsB,gCAXtCxL,KAAKitB,OAAOG,QAAQ,kDACpB,IAAI2Y,EAAc,EAAahf,kBAAkBtN,EAAW,UAiBhE,GAhBIosB,EAAgB,CACZ5D,YAAa35B,EAAU09B,QACvBxxB,MAAOiF,EAAW,SAClBuZ,UAAW+S,EAAYlf,GACvB5J,OAAQ8oB,EAAY9oB,OACpBgpB,YAAY,GAWhBJ,EAAcrxB,QAAUxU,KAAKswB,aAAa3L,QAAQ,EAAUkG,0BAA0B1hB,EAAmB+hB,YAAa2a,EAAcrxB,OAAQxU,KAAKg/B,WAAa6G,EAAcrxB,QAAUxU,KAAKkmC,0BAI3L,OAHAlmC,KAAKitB,OAAOG,QAAQ,4DACpByY,EAAc5D,YAAc35B,EAAU45B,MACtC2D,EAAcI,YAAa,EACpBJ,EAGN,GAAIA,EAAcrxB,QAAUxU,KAAKswB,aAAa3L,QAAQ,EAAUkG,0BAA0B1hB,EAAmBiiB,gBAAiBya,EAAcrxB,OAAQxU,KAAKg/B,UAI1J,OAHAh/B,KAAKitB,OAAOG,QAAQ,iEACpByY,EAAc5D,YAAc35B,EAAU65B,WACtC0D,EAAcI,YAAa,EACpBJ,EAGX,IAAKA,EAAcI,WAAY,CAC3BjmC,KAAKitB,OAAOG,QAAQ,8EACpByY,EAAc5D,YAAcx8B,OAAOw8B,YAEnC,IADA,IAAIkE,EAAwB1gC,OAAO25B,YAC1Bh9B,EAAI,EAAGA,EAAI+jC,EAAsB5jC,OAAQH,IAC9C,GAAI+jC,EAAsB/jC,KAAOyjC,EAAcrxB,MAAO,CAClDxU,KAAKitB,OAAOG,QAAQ,oCACpByY,EAAcI,YAAa,EAC3B,MAGHJ,EAAcI,YACfjmC,KAAKitB,OAAOG,QAAQ,wCAG5B,OAAOyY,GAUXlH,EAAqB78B,UAAUohC,eAAiB,SAAU5R,EAA6BvW,GACnF/a,KAAKitB,OAAOG,QAAQ,kCACpB,IAAIha,EAASke,EAA4Ble,OAKrCtF,EAAU9N,KAAKomC,iBAAiB9U,EAA6BvW,GAC7DsW,EAAerxB,KAAKqmC,qBAAqB/U,EAA6BvW,EAAS3H,GAC/Eme,EAAevxB,KAAK8gC,gBAAgBxP,EAA4B9c,OACpE,OAAO,GAAc4c,kBAAkBtjB,EAASujB,EAAcC,EAA6BvW,EAAS3H,EAAQme,IAchHoN,EAAqB78B,UAAUwkC,6BAA+B,SAAUnuB,EAAWimB,EAAiB7qB,EAAewV,GAC/G,IACIwd,EADAj7B,EAAQtL,KAQZ,OALIumC,EADA,EAASruB,kBAAkBC,IAAc,EAASC,yBAAyBD,IAAc,EAASE,qBAAqBF,GAC9F,GAAeqmB,8BAA8BJ,EAAiB,EAAS5mB,iBAAiBW,GAAWF,iBAGnG,GAAesmB,iCAAiCH,EAAiBjmB,GAExD,IAAlCouB,EAAuBhkC,OAChBgkC,EAAuB,GAEzBA,EAAuBhkC,OAAS,GACrCvC,KAAKitB,OAAOkG,QAAQ,8EACpBoT,EAAuB7pB,SAAQ,SAAU8pB,GACrCl7B,EAAMglB,aAAazL,WAAW7Y,KAAK0V,UAAU8kB,EAAqBj3B,SAE/D,OAGPvP,KAAKitB,OAAOG,QAAQ,8BAAgCrE,EAAY,UACzD,OAYf4V,EAAqB78B,UAAUskC,iBAAmB,SAAU9U,EAA6BvW,GACrF/a,KAAKitB,OAAOG,QAAQ,8CACpB,IAAIqZ,EAAoBzmC,KAAKswB,aAAapG,eAAelqB,KAAKwV,SAAUuF,EAAUA,EAAQR,sBAAwB,MAC9GmsB,EAAiBpV,EAA4BnZ,WAAanY,KAAKmY,UAC/DwuB,EAAmB3mC,KAAKsmC,6BAA6BI,EAAgBD,EAAmB,KAAMphC,EAAoByU,UACtH,GAAI6sB,EAAkB,CAClB3mC,KAAKitB,OAAOG,QAAQ,6BACpB,IAAIwZ,EAAsB5mC,KAAK6mC,wBAAwBF,GACvD,GAAIC,EAAqB,CACrB5mC,KAAKitB,OAAOG,QAAQ,uEACpB,IAAIpF,EAAe2e,EAAiB3jC,MAOpC,OANIglB,EACAhoB,KAAKitB,OAAOG,QAAQ,kDAGpBptB,KAAKitB,OAAOG,QAAQ,sCAEjB,EAAiB,IAAI,EAAQpF,EAAala,SAAW,KAK5D,OAFA9N,KAAKitB,OAAOG,QAAQ,mDACpBptB,KAAKswB,aAAazL,WAAW7Y,KAAK0V,UAAUilB,EAAiBp3B,MACtD,KAKX,OADAvP,KAAKitB,OAAOG,QAAQ,mBACb,MAafuR,EAAqB78B,UAAUukC,qBAAuB,SAAU/U,EAA6BvW,EAAS3H,GAClGpT,KAAKitB,OAAOG,QAAQ,kDACpB,IAAIgR,EAAkBp+B,KAAKswB,aAAarG,mBAAmBjqB,KAAKwV,SAAUuF,EAAUA,EAAQR,sBAAwB,MAChHusB,EAA+B,GAAe3I,6BAA6BC,EAAiBhrB,GAC5FszB,EAAiBpV,EAA4BnZ,WAAanY,KAAKmY,UAE/DquB,EAAuBxmC,KAAKsmC,6BAA6BI,EAAgBI,EAA8B1zB,EAAQ/N,EAAoBwU,cACvI,GAAK2sB,EAIA,CACDlV,EAA4Bnb,kBAAoB,GAAiBic,eAAeoU,EAAqBj3B,IAAI4I,UAAWnY,KAAKsS,OAAOkiB,KAAKvW,mBACrIje,KAAKitB,OAAOG,QAAQ,iCACpB,IAAI2Z,EAAoB/mC,KAAK6mC,wBAAwBL,GAErD,GAAIO,EAAmB,CACnB/mC,KAAKitB,OAAOG,QAAQ,+EACpB,IAAI4Z,EAAkBjsB,GAAW/a,KAAK+gC,aACtC,IAAKiG,EACD,MAAM,EAAUx7B,sBAAsB,oCAE1C,IAAIy7B,EAASjnC,KAAK8gC,gBAAgBxP,EAA4B9c,OAC1DmJ,EAAW,CACXwT,SAAU,GACV9Z,SAAU,GACV0R,UAAW1jB,EAAoBwU,aAC/B/L,QAAS,KACTgO,cAAe,KACfrB,YAAa+rB,EAAqBxjC,MAAMyX,YACxCrH,OAAQozB,EAAqBj3B,IAAI6D,OAAO3L,MAAM,KAC9CypB,UAAW,IAAI5O,KAAoD,IAA/Cnb,OAAOq/B,EAAqBxjC,MAAM0X,YACtDK,QAASisB,EACTzV,aAAc0V,EACdjR,WAAW,GAEf,OAAOrY,EAKP,OAFA3d,KAAKitB,OAAOG,QAAQ,6CACpBptB,KAAKswB,aAAazL,WAAW7Y,KAAK0V,UAAU8kB,EAAqBj3B,MAC1D,KAhCX,OADAvP,KAAKitB,OAAOG,QAAQ,iEACb,MAyCfuR,EAAqB78B,UAAU+kC,wBAA0B,SAAUK,GAC/D,IAAI9jB,EAAajc,OAAO+/B,EAAelkC,MAAM0X,WAC7C,OAAO,EAAWyI,iCAAiCC,EAAYpjB,KAAKsS,OAAOoiB,OAAOrR,4BAOtFsb,EAAqB78B,UAAUm/B,mBAAqB,WAChDjhC,KAAKitB,OAAOG,QAAQ,sCACpB,IAAIvE,EAAc7oB,KAAKswB,aAAa3L,QAAQrc,EAAUugB,aACtD,OAASld,EAAYC,QAAQid,GAAyD,KAAzC,EAAWtF,eAAesF,IAO3E8V,EAAqB78B,UAAUqgC,WAAa,SAAUvV,EAAkB3pB,EAASE,EAAQ4X,EAASuW,GAC9FtxB,KAAKitB,OAAOG,QAAQ,8BACpBptB,KAAKitB,OAAOsG,WAAW,mCAAqC3G,GAC5D,IAAIoB,EAAY,GAAYtB,kBAAkBhiB,EAAYE,YAAagiB,GACvE,GAAY0B,gBAAgBN,EAAWhuB,KAAKitB,QAC5CjtB,KAAK+hC,mBAAmBzQ,EAA6BvW,GAAS,GAC9D/a,KAAKitB,OAAOsG,WAAW,8BAAgCjC,EAA4B9c,OAEnF,IAAIwY,EAAc,EAAShU,8BAA8B,EAASjD,kBAAkBub,GAA8BhpB,EAAU6S,QAAU7S,EAAU6+B,YAAc7+B,EAAU05B,uBACxKv8B,OAAO25B,YAAYv6B,KAAKysB,EAA4B9c,OACpD/O,OAAOw8B,YAAc35B,EAAU65B,WAC/BniC,KAAKitB,OAAOG,QAAQ,yCACpBptB,KAAKoiC,iBAAiB9Q,EAA4B9c,MAAOoY,EAAkB3pB,EAASE,GACpFnD,KAAKitB,OAAOiB,QAAQ,gBAAkBlB,GACtChtB,KAAKqkC,kBAAkBrX,EAAagB,EAAWpB,GAAkB7N,OAAM,SAAU7S,GAAS,OAAO/I,EAAO+I,OAO5GyyB,EAAqB78B,UAAUqhC,aAAe,SAAUvW,EAAkB3pB,EAASE,EAAQ4X,EAASuW,GAChGtxB,KAAKitB,OAAOwB,KAAK,gCACjB,IAAIT,EAAY,GAAYtB,kBAAkBhiB,EAAYC,eAAgBiiB,GAC1E,GAAY0B,gBAAgBN,EAAWhuB,KAAKitB,QAC5CjtB,KAAK+hC,mBAAmBzQ,EAA6BvW,GAAS,GAC9D/a,KAAKitB,OAAOG,QAAQ,gCAAkCkE,EAA4B9c,OAElF,IAAIwY,EAAc,EAAShU,8BAA8B,EAASjD,kBAAkBub,GAA8BhpB,EAAU6S,QAAU7S,EAAU6+B,YAAc7+B,EAAU05B,uBACpKhiC,KAAKohC,aACLphC,KAAKitB,OAAOG,QAAQ,uDACpB3nB,OAAOw8B,YAAc35B,EAAU45B,MAC/BliC,KAAKkmC,0BAA4B5U,EAA4B9c,QAG7DxU,KAAKitB,OAAOG,QAAQ,2DACpB3nB,OAAOw8B,YAAc35B,EAAU65B,WAC/B18B,OAAO25B,YAAYv6B,KAAKysB,EAA4B9c,QAGxDxU,KAAKoiC,iBAAiB9Q,EAA4B9c,MAAOoY,EAAkB3pB,EAASE,GACpFnD,KAAKitB,OAAOiB,QAAQ,iBAAoBlB,GACxChtB,KAAKqkC,kBAAkBrX,EAAagB,EAAWpB,GAAkB7N,OAAM,SAAU7S,GAAS,OAAO/I,EAAO+I,OAc5GyyB,EAAqB78B,UAAUslC,UAAY,SAAUzpB,EAAUxF,EAAW/E,EAAQgO,EAAYgC,GAC1F,IAAIikB,EAAiB,IAAI,EAAelvB,EAAWnY,KAAKwV,SAAUpC,EAAQgO,EAAW/G,IAAK+G,EAAW9G,MACjGgtB,EAAmB,IAAI9sB,EAAiBmD,EAASlD,YAAakD,EAAS7P,QAAQ+V,WAAYT,EAAW3c,WAAY2a,EAAWW,oBASjI,OARA/hB,KAAKswB,aAAa9L,QAAQxY,KAAK0V,UAAU2lB,GAAiBr7B,KAAK0V,UAAU4lB,IACrElkB,GACApjB,KAAKitB,OAAOG,QAAQ,gCACpBzP,EAASuT,UAAY,IAAI5O,KAAkB,IAAbc,IAG9BpjB,KAAKitB,OAAO/gB,MAAM,wDAEfyR,GAeXghB,EAAqB78B,UAAUylC,YAAc,SAAU5pB,EAAUxF,EAAWsB,EAAY2H,EAAY4P,GAChGhxB,KAAKitB,OAAOG,QAAQ,+BACpB,IAEIha,EAFAoe,EAAkBxvB,EAAS,GAAI2b,GAGnC6T,EAAgBpe,OAAS9K,EAAUuN,WACnC2b,EAAgB/W,YAAchB,EAAWpU,EAAoByU,UAC7D,IAAIsJ,EAAajc,OAAO6pB,EAAW5N,YAGnC,OADApjB,KAAKitB,OAAOG,QAAQ,4BACbptB,KAAKonC,UAAU5V,EAAiBrZ,EAAW/E,EAAQgO,EAAYgC,IAa1Eub,EAAqB78B,UAAU0lC,gBAAkB,SAAU7pB,EAAUxF,EAAWsB,EAAY2H,GACxFphB,KAAKitB,OAAOG,QAAQ,mCACpB,IAAIqa,EAAsBzlC,EAAS,GAAI2b,GAEnC9J,EAAQ4F,EAAWpU,EAAoBqiC,OACvCC,EAAkB9zB,EAAMpM,MAAM,KAE9BmgC,EAAwB5nC,KAAKswB,aAAarG,mBAAmBjqB,KAAKwV,SAAU2C,GAChFnY,KAAKitB,OAAOG,QAAQ,mEACpB,IAAK,IAAIhrB,EAAI,EAAGA,EAAIwlC,EAAsBrlC,OAAQH,IAAK,CACnD,IAAIokC,EAAuBoB,EAAsBxlC,GACjD,GAAIokC,EAAqBj3B,IAAIgL,wBAA0BoD,EAAS5C,QAAQR,sBAAuB,CAC3F,IAAIpH,EAAeqzB,EAAqBj3B,IAAI6D,OAAO3L,MAAM,KACrD,EAASyL,qBAAqBC,EAAcw0B,IAC5C3nC,KAAKswB,aAAazL,WAAW7Y,KAAK0V,UAAU8kB,EAAqBj3B,OAI7Ek4B,EAAoBhtB,YAAchB,EAAWpU,EAAoBwU,cACjE4tB,EAAoBr0B,OAASu0B,EAC7B,IAAIjtB,EAAYsH,EAAUC,eAAexI,EAAWpU,EAAoBwiC,aACpE9B,EAAc,EAAahf,kBAAkBtN,EAAWpU,EAAoBygC,QAC5E1iB,EAAa2iB,EAAYlf,GAAKnM,EAElC,OADA1a,KAAKitB,OAAOG,QAAQ,gCACbptB,KAAKonC,UAAUK,EAAqBtvB,EAAWtE,EAAOuN,EAAYgC,IAO7Eub,EAAqB78B,UAAUwjC,kBAAoB,SAAUtrB,EAAMylB,GAC/Dz/B,KAAKitB,OAAOG,QAAQ,qCACpBptB,KAAKitB,OAAOwB,KAAK,iBAAmBgR,EAAUwG,WAAa,mBAAqBxG,EAAUwC,aAC1F,IAaI/1B,EAbAyR,EAAW,CACXwT,SAAU,GACV9Z,SAAU,GACV0R,UAAW,GACXjb,QAAS,KACTgO,cAAe,KACfrB,YAAa,KACbrH,OAAQ,GACR8d,UAAW,KACXnW,QAAS,KACTwW,aAAc,GACdyE,WAAW,GAGX8R,EAAa,EAASpuB,gBAAgBM,GACtC+tB,EAAe,GACfC,EAAyB,GACzBhX,EAAa,KAEjB,GAAI8W,EAAWpmC,eAAe2D,EAAoBsU,oBAAsBmuB,EAAWpmC,eAAe2D,EAAoBuU,OAAQ,CAY1H,GAXA5Z,KAAKitB,OAAOG,QAAQ,4BACpBptB,KAAKitB,OAAOiB,QAAQ,WAAa4Z,EAAWziC,EAAoBuU,OAAS,wBAA0BkuB,EAAWziC,EAAoBsU,oBAClI3Z,KAAKswB,aAAa9L,QAAQnb,EAAeuQ,MAAOkuB,EAAWziC,EAAoBuU,QAC/E5Z,KAAKswB,aAAa9L,QAAQnb,EAAe0e,WAAY+f,EAAWziC,EAAoBsU,oBAEhF8lB,EAAUwC,cAAgB35B,EAAU45B,QACpCliC,KAAKitB,OAAOG,QAAQ,sEACpBptB,KAAKswB,aAAa9L,QAAQnb,EAAe4+B,YAAaH,EAAWziC,EAAoBsU,mBAAqB,IAAMmuB,EAAWziC,EAAoBuU,QAC/ImuB,EAAe,EAAUpc,qBAAqB8T,EAAUjrB,QAGxDirB,EAAUwC,cAAgB35B,EAAU65B,WAAY,CAChDniC,KAAKitB,OAAOG,QAAQ,gEACpB2a,EAAe,EAAUpc,qBAAqB8T,EAAUjrB,OACxD,IAAIuG,EAAU/a,KAAK+gC,aACftV,OAAY,EACZ1Q,IAAYpP,EAAYC,QAAQmP,EAAQR,wBACxCkR,EAAY1Q,EAAQR,sBACpBva,KAAKitB,OAAOG,QAAQ,sBAGpB3B,EAAYnjB,EAAU4/B,WACtBloC,KAAKitB,OAAOG,QAAQ,mCAExB4a,EAAyB,EAAUxc,+BAA+BC,EAAWgU,EAAUjrB,OAE3F,IAAI2zB,EAAUL,EAAWziC,EAAoBuU,OACzCwuB,EAAcN,EAAWziC,EAAoBsU,mBAG7CzN,EAFA,GAA6BupB,2BAA2B0S,IACxD,GAA6B1S,2BAA2B2S,GAChD,IAAI,GAA6BN,EAAWziC,EAAoBuU,OAAQkuB,EAAWziC,EAAoBsU,oBAGvG,IAAI,GAAYmuB,EAAWziC,EAAoBuU,OAAQkuB,EAAWziC,EAAoBsU,yBAOlG,GAFA3Z,KAAKitB,OAAOG,QAAQ,0BAEhBqS,EAAUwG,WAAY,CACtBjmC,KAAKitB,OAAOwB,KAAK,kBACbqZ,EAAWpmC,eAAe2D,EAAoBgjC,iBAC9CroC,KAAKitB,OAAOG,QAAQ,uCACpBptB,KAAKswB,aAAa9L,QAAQ,EAAUqG,0BAA0B1hB,EAAmBk/B,cAAe5I,EAAUjrB,OAAQszB,EAAWziC,EAAoBgjC,iBAErJ1qB,EAAS4T,aAAevxB,KAAK8gC,gBAAgBrB,EAAUjrB,OACvD,IAAI4M,OAAa,EAEjB,GAAI0mB,EAAWpmC,eAAe2D,EAAoBwU,cAAe,CAC7D7Z,KAAKitB,OAAOwB,KAAK,6BACjB9Q,EAASlD,YAAcqtB,EAAWziC,EAAoBwU,cAClDiuB,EAAWpmC,eAAe2D,EAAoBqiC,SAC9C/pB,EAASvK,OAAS00B,EAAWziC,EAAoBqiC,OAAOjgC,MAAM,MAG9DqgC,EAAWpmC,eAAe2D,EAAoByU,WAC9C9Z,KAAKitB,OAAOG,QAAQ,yBACpB4D,EAAa,IAAI,EAAQ8W,EAAWziC,EAAoByU,aAGxD9Z,KAAKitB,OAAOG,QAAQ,sDACpB4D,EAAa,IAAI,EAAQhxB,KAAKswB,aAAa3L,QAAQvb,EAAoBse,WAE3E/J,EAAW,GAAcmT,mBAAmBnT,EAAUqT,GAEtD,IAAI7Y,EAAYnY,KAAKsoC,kBAAkB7I,EAAUjrB,MAAOxU,KAAKg/B,SAAUh/B,KAAKswB,aAAcU,GAC1FhxB,KAAKitB,OAAOG,QAAQ,4BAEhB0a,EAAWpmC,eAAe2D,EAAoBuiB,cAC9C5nB,KAAKitB,OAAOG,QAAQ,2BACpBhM,EAAa,IAAI,EAAW0mB,EAAWziC,EAAoBuiB,aAAczP,IAEpEnY,KAAKmW,kBAAkBrM,gBAAkBA,EAAcoW,KAC5DkB,EAAa,EAAWI,4BAA4BwP,EAAY7Y,GAGhEnY,KAAKitB,OAAOkG,QAAQ,oDAExBxV,EAAS5C,QAAU,GAAQkR,cAAc+E,EAAY5P,GACrDphB,KAAKitB,OAAOG,QAAQ,wCACpB,IAAImb,OAAa,EACb5qB,EAAS5C,UAAYpP,EAAYC,QAAQ+R,EAAS5C,QAAQR,wBAC1Dva,KAAKitB,OAAOG,QAAQ,kBACpBmb,EAAa5qB,EAAS5C,QAAQR,wBAG9Bva,KAAKitB,OAAOG,QAAQ,gCACpBmb,EAAajgC,EAAU4/B,YAE3BF,EAAyB,EAAUxc,+BAA+B+c,EAAY9I,EAAUjrB,OACxF,IAAIg0B,EAAmC,EAAUhd,+BAA+BljB,EAAU4/B,WAAYzI,EAAUjrB,OAChHxU,KAAKitB,OAAOG,QAAQ,oCACpB,IAAIqb,EAAgBzoC,KAAKswB,aAAa3L,QAAQqjB,GAC1CU,OAAsB,EAErB/8B,EAAYC,QAAQ68B,GAWf98B,EAAYC,QAAQ5L,KAAKswB,aAAa3L,QAAQ6jB,MACpDxoC,KAAKitB,OAAOG,QAAQ,gDACpBzP,EAAW3d,KAAKwnC,gBAAgB7pB,EAAUxF,EAAW2vB,EAAY1mB,KAZjEsnB,EAAsB18B,KAAKC,MAAMw8B,GACjCzoC,KAAKitB,OAAOG,QAAQ,qDAChBzP,EAAS5C,SAAW2tB,GAAuB,GAAQxc,gBAAgBvO,EAAS5C,QAAS2tB,IACrF/qB,EAAW3d,KAAKwnC,gBAAgB7pB,EAAUxF,EAAW2vB,EAAY1mB,GACjEphB,KAAKitB,OAAOwB,KAAK,uGAGjBzuB,KAAKitB,OAAOkG,QAAQ,+GAShC,GAAI2U,EAAWpmC,eAAe2D,EAAoByU,UAAW,CACzD9Z,KAAKitB,OAAOwB,KAAK,wBAEjBuC,EAAa,IAAI,EAAQ8W,EAAWziC,EAAoByU,WAEpD3B,EAAYnY,KAAKsoC,kBAAkB7I,EAAUjrB,MAAOxU,KAAKg/B,SAAUh/B,KAAKswB,aAAcU,GAe1F,GAdArT,EAAW,GAAcmT,mBAAmBnT,EAAUqT,GAClD8W,EAAWpmC,eAAe2D,EAAoBuiB,cAC9C5nB,KAAKitB,OAAOG,QAAQ,2BACpBhM,EAAa,IAAI,EAAW0mB,EAAWziC,EAAoBuiB,aAAczP,IAEpEnY,KAAKmW,kBAAkBrM,gBAAkBA,EAAcoW,KAC5DkB,EAAa,EAAWI,4BAA4BwP,EAAY7Y,GAGhEnY,KAAKitB,OAAOkG,QAAQ,oDAExBnzB,KAAK+a,QAAU,GAAQkR,cAAc+E,EAAY5P,GACjDzD,EAAS5C,QAAU/a,KAAK+a,QACxB/a,KAAKitB,OAAOG,QAAQ,wCAChB4D,GAAcA,EAAWxa,MAAO,CAChCxW,KAAKitB,OAAOG,QAAQ,qBAEpB,IAAIub,EAAc3oC,KAAKswB,aAAa3L,QAAQ,EAAUkG,0BAA0B1hB,EAAmB8hB,cAAewU,EAAUjrB,OAAQxU,KAAKg/B,UACrIhO,EAAWxa,QAAUmyB,GACrB3oC,KAAK+a,QAAU,KACf/a,KAAKswB,aAAa9L,QAAQnb,EAAe4+B,YAAa,mCAAqCU,EAArC,kBAA4E3X,EAAWxa,OAC7IxW,KAAKitB,OAAO/gB,MAAM,mCAAqCy8B,EAAc,mBAAqB3X,EAAWxa,OACrGtK,EAAQ,EAAgBgC,yBAAyBy6B,EAAa3X,EAAWxa,SAIzExW,KAAKitB,OAAOG,QAAQ,0CACpBptB,KAAKswB,aAAa9L,QAAQpb,EAAoBse,QAASogB,EAAWziC,EAAoByU,UAAW9Z,KAAKg/B,UACtGh/B,KAAKswB,aAAa9L,QAAQpb,EAAoBwe,YAAaxG,EAAWW,mBAAoB/hB,KAAKg/B,UAE/Fh/B,KAAKunC,YAAY5pB,EAAUxF,EAAW2vB,EAAY1mB,EAAY4P,SAIlEhxB,KAAKitB,OAAOG,QAAQ,gEACpB2a,EAAetI,EAAUjrB,MACzBwzB,EAAyBvI,EAAUjrB,MACnCxU,KAAKitB,OAAO/gB,MAAM,6CAClBA,EAAQ,EAAgB2B,0BAA0BmjB,GAClDhxB,KAAKswB,aAAa9L,QAAQnb,EAAeuQ,MAAO1N,EAAMd,WACtDpL,KAAKswB,aAAa9L,QAAQnb,EAAe0e,WAAY7b,EAAMb,mBAKlE,CACDrL,KAAKitB,OAAOG,QAAQ,kBACpB2a,EAAetI,EAAUjrB,MACzBwzB,EAAyBvI,EAAUjrB,MACnC,IAAI8vB,EAAgBtkC,KAAKswB,aAAa3L,QAAQ,EAAUkG,0BAA0B1hB,EAAmB+hB,YAAauU,EAAUjrB,OAAQxU,KAAKg/B,UACzIh/B,KAAKitB,OAAO/gB,MAAM,mCAAqCo4B,EAAgB,mBAAqB7E,EAAUjrB,OACtGtI,EAAQ,EAAgB6B,wBAAwB0xB,EAAUjrB,MAAO8vB,GACjEtkC,KAAKswB,aAAa9L,QAAQnb,EAAeuQ,MAAO1N,EAAMd,WACtDpL,KAAKswB,aAAa9L,QAAQnb,EAAe0e,WAAY7b,EAAMb,cAanE,GATArL,KAAKswB,aAAazL,WAAW,EAAUgG,0BAA0B1hB,EAAmB2hB,aAAc2U,EAAUjrB,QAC5GxU,KAAKswB,aAAahH,oBAAoBmW,EAAUjrB,OAChDxU,KAAKitB,OAAOG,QAAQ,mDAEhBptB,KAAKg/B,WACLh/B,KAAKitB,OAAOG,QAAQ,oDACpBptB,KAAKswB,aAAa5L,cAAcqjB,EAAc,IAAK,GACnD/nC,KAAKswB,aAAatF,gBAAgByU,EAAUjrB,QAE5CtI,EAEA,MAAMA,EAEV,IAAKyR,EACD,MAAM,EAAUnS,sBAAsB,oBAE1C,OAAOmS,GAUXghB,EAAqB78B,UAAUwmC,kBAAoB,SAAU9zB,EAAOwqB,EAAU1O,EAAcU,GACxFhxB,KAAKitB,OAAOG,QAAQ,qCACpB,IAAI2a,EAAe,EAAUpc,qBAAqBnX,GAC9Co0B,EAAkBtY,EAAa3L,QAAQojB,EAAc/I,GAEzD,OAAOrzB,EAAYC,QAAQg9B,GAAmBA,EAAkB,EAASxxB,kBAAkBwxB,EAAiB5X,EAAW3Z,WAW3HsnB,EAAqB78B,UAAUi/B,WAAa,WAExC,GAAI/gC,KAAK+a,QACL,OAAO/a,KAAK+a,QAGhB,IAAI8I,EAAa7jB,KAAKswB,aAAa3L,QAAQvb,EAAoBse,QAAS1nB,KAAKg/B,UACzE9d,EAAgBlhB,KAAKswB,aAAa3L,QAAQvb,EAAoBwe,YAAa5nB,KAAKg/B,UACpF,IAAKrzB,EAAYC,QAAQiY,KAAgBlY,EAAYC,QAAQsV,GAAgB,CACzE,IAAIpT,EAAU,IAAI,EAAQ+V,GACtBzC,EAAa,IAAI,EAAWF,EAAe,IAE/C,OADAlhB,KAAK+a,QAAU,GAAQkR,cAAcne,EAASsT,GACvCphB,KAAK+a,QAGhB,OAAO,MASX4jB,EAAqB78B,UAAUg/B,gBAAkB,SAAUtsB,GACvD,GAAIA,EAAO,CACP,IAAIC,EAAaD,EAAMhB,QAAQlL,EAAUoM,mBACzC,GAAID,GAAc,GAAKA,EAAa,EAAID,EAAMjS,OAC1C,OAAOiS,EAAMG,UAAUF,EAAa,GAG5C,OAAOD,GAOXmqB,EAAqB78B,UAAU+mC,eAAiB,WAG5C,IAFA,IAAIC,EAAW,GACXlB,EAAwB5nC,KAAKswB,aAAarG,mBAAmB3hB,EAAUkN,SAAUlN,EAAUiS,uBACtFnY,EAAI,EAAGA,EAAIwlC,EAAsBrlC,OAAQH,IAAK,CACnD,IAAI0L,EAAU,IAAI,EAAQ85B,EAAsBxlC,GAAGY,MAAM8K,SACrDsT,EAAa,IAAI,EAAWwmB,EAAsBxlC,GAAGY,MAAMuX,sBAAuB,IAClFQ,EAAU,GAAQkR,cAAcne,EAASsT,GAC7C0nB,EAASjkC,KAAKkW,GAElB,OAAO/a,KAAK+oC,kBAAkBD,IASlCnK,EAAqB78B,UAAUinC,kBAAoB,SAAUD,GACzD,IAAKA,GAAYA,EAASvmC,QAAU,EAChC,OAAOumC,EAIX,IAFA,IAAIE,EAAQ,GACRC,EAAiB,GACZzgB,EAAQ,EAAGA,EAAQsgB,EAASvmC,SAAUimB,EACvCsgB,EAAStgB,GAAOjO,wBAAmF,IAA1DyuB,EAAMx1B,QAAQs1B,EAAStgB,GAAOjO,yBACvEyuB,EAAMnkC,KAAKikC,EAAStgB,GAAOjO,uBAC3B0uB,EAAepkC,KAAKikC,EAAStgB,KAGrC,OAAOygB,GAWXtK,EAAqB78B,UAAU2gC,UAAY,SAAUnK,EAAW4Q,GAC5D,IAAIC,EAAM,IAAIC,YAAY9Q,EAAW,CAAE+Q,OAAQH,IAC/CzjC,OAAO6jC,cAAcH,IAYzBxK,EAAqB78B,UAAUynC,uBAAyB,SAAUn2B,EAAQ2H,EAASvG,EAAOsC,GAEtF,IAAI0yB,EAAgBzuB,GAAW/a,KAAK+gC,aACpC,IAAKyI,EACD,OAAO,KAGX,IAAIC,EAAezpC,KAAKmW,kBAAoBnW,KAAKmW,kBAAoB,GAAiBic,eAAepyB,KAAKmY,UAAWnY,KAAKsS,OAAOkiB,KAAKvW,mBAClI3H,EAAetW,KAAK4hC,aAAa4H,EAAep2B,GAChDke,EAA8B,IAAI,EAAwBmY,EAAczpC,KAAKwV,SAAUc,EAActW,KAAK8hC,iBAAkB1uB,EAAQoB,EAAOsC,GAE/I,OAAO9W,KAAKkjC,eAAe5R,EAA6BvW,IAU5D4jB,EAAqB78B,UAAU4nC,qBAAuB,SAAUC,GAE5D,GAAI3pC,KAAKsS,OAAOsiB,UAAUP,qBAAqB9xB,OAAS,EACpD,IAAK,IAAIH,EAAI,EAAGA,EAAIpC,KAAKsS,OAAOsiB,UAAUP,qBAAqB9xB,OAAQH,IACnE,GAAIunC,EAASn2B,QAAQxT,KAAKsS,OAAOsiB,UAAUP,qBAAqBjyB,KAAO,EACnE,OAAO,KAKnB,GAAIpC,KAAKsS,OAAOsiB,UAAUN,qBAAqBsV,KAAO,EAClD,IAAK,IAAIC,EAAK,EAAG93B,EAAKvQ,MAAMsoC,KAAK9pC,KAAKsS,OAAOsiB,UAAUN,qBAAqB1hB,QAASi3B,EAAK93B,EAAGxP,OAAQsnC,IAAM,CACvG,IAAIt6B,EAAMwC,EAAG83B,GAEb,GAAIF,EAASn2B,QAAQjE,IAAQ,EACzB,OAAOvP,KAAKsS,OAAOsiB,UAAUN,qBAAqB9rB,IAAI+G,GASlE,OAAIo6B,EAASn2B,QAAQ,YAAc,GAAKm2B,EAASn2B,QAAQ,aAAe,EAChE,EAASyG,eAAe0vB,KAAc,EAAS1vB,eAAeja,KAAK8hC,kBAC5D,IAAItgC,MAAMxB,KAAKwV,UAWvB,KAHI,IAAIhU,MAAMxB,KAAKwV,WAS9BmpB,EAAqB78B,UAAUioC,mBAAqB,WAChD,OAAO/pC,KAAKswB,aAAahG,yBAAwB,IAQrDqU,EAAqB78B,UAAU4nB,yBAA2B,SAAUqB,GAChE/qB,KAAKswB,aAAa5G,yBAAyBqB,IAQ/C4T,EAAqB78B,UAAUkoC,mBAAqB,SAAUC,GAC1DjqC,KAAK0pB,yBAAyBugB,IAQlCtL,EAAqB78B,UAAUooC,0BAA4B,WACvD,OAAOlqC,KAAKswB,aAAahG,yBAAwB,IAQrDqU,EAAqB78B,UAAUqoC,0BAA4B,SAAUC,GACjEpqC,KAAK0pB,yBAAyB0gB,IAQlCzL,EAAqB78B,UAAUuoC,UAAY,WACvC,OAAOrqC,KAAKitB,QAMhB0R,EAAqB78B,UAAUwoC,UAAY,SAAUrd,GACjDjtB,KAAKitB,OAASA,GAUlB0R,EAAqB78B,UAAUggC,eAAiB,SAAUyI,GACtD,OAAIA,IAG6C,oBAAjCvqC,KAAKsS,OAAOkiB,KAAKje,YACtBvW,KAAKsS,OAAOkiB,KAAKje,cAErBvW,KAAKsS,OAAOkiB,KAAKje,cAQ5BooB,EAAqB78B,UAAUijC,yBAA2B,WACtD,MAAsD,oBAA3C/kC,KAAKsS,OAAOkiB,KAAKX,sBACjB7zB,KAAKsS,OAAOkiB,KAAKX,wBAErB7zB,KAAKsS,OAAOkiB,KAAKX,uBAO5B8K,EAAqB78B,UAAU0oC,wBAA0B,WACrD,IAAKxqC,KAAKsS,OACN,MAAM,EAAyBtB,gCAEnC,OAAOhR,KAAKsS,QAYhBqsB,EAAqB78B,UAAU8/B,aAAe,SAAU4H,EAAep2B,GACnE,IAAIyJ,EAAgB,GAAQqP,gBAAgBsd,EAAexpC,KAAK+gC,cAChE,OAAO,EAAwBnkB,sBAAsBC,EAAezJ,IAWxEurB,EAAqB78B,UAAU2oC,gBAAkB,SAAU1vB,EAASvG,GAEhE,IAAIiX,EAAY1Q,EAAU/a,KAAK0qC,aAAa3vB,GAAWzS,EAAU4/B,WAC7DF,EAAyB,EAAUxc,+BAA+BC,EAAWjX,GACjFxU,KAAKswB,aAAa9L,QAAQwjB,EAAwBh8B,KAAK0V,UAAU3G,KAWrE4jB,EAAqB78B,UAAU6oC,kBAAoB,SAAUn2B,EAAO2D,GAEhE,IAAI4vB,EAAe,EAAUpc,qBAAqBnX,GAClDxU,KAAKswB,aAAa9L,QAAQujB,EAAc,EAAShwB,gBAAgBI,GAAYnY,KAAKg/B,WAStFL,EAAqB78B,UAAUigC,mBAAqB,SAAUzQ,EAA6BvW,EAASgL,EAAayb,GAEzGA,GACAxhC,KAAKswB,aAAa9L,QAAQ,EAAUqG,0BAA0B1hB,EAAmBgiB,cAAemG,EAA4B9c,OAAQgtB,EAAgBxhC,KAAKg/B,UAGzJjZ,EAEA/lB,KAAKswB,aAAa9L,QAAQ,EAAUqG,0BAA0B1hB,EAAmB+hB,YAAaoG,EAA4B9c,OAAQ8c,EAA4B9c,MAAOxU,KAAKg/B,UAG1Kh/B,KAAKyqC,gBAAgB1vB,EAASuW,EAA4B9c,OAG9DxU,KAAK2qC,kBAAkBrZ,EAA4B9c,MAAO8c,EAA4BnZ,WAEtFnY,KAAKswB,aAAa9L,QAAQ,EAAUqG,0BAA0B1hB,EAAmB8hB,cAAeqG,EAA4B9c,OAAQ8c,EAA4B9a,MAAOxW,KAAKg/B,WAQhLL,EAAqB78B,UAAU4oC,aAAe,SAAU3vB,GAEpD,IAAI0Q,EAOJ,OAFIA,EAJC9f,EAAYC,QAAQmP,EAAQR,uBAIjBjS,EAAU4/B,WAHVntB,EAAQR,sBAKjBkR,GAQXkT,EAAqB78B,UAAUq/B,oBAAsB,SAAUnmB,GAC3D,IAAIkmB,EAAe,CACf9tB,OAAQ9K,EAAUuN,WAClBsC,UAAWnY,KAAKmY,UAChB4C,QAAS/a,KAAK+gC,aACdlqB,qBAAsBmE,EAAQnE,qBAC9BC,cAAekE,EAAQlE,eAE3B,OAAOoqB,GASXvC,EAAqB78B,UAAUm9B,8BAAgC,SAAU3sB,EAAQkD,GAC7E,IAAKlD,EACD,OAAO,GAAiByqB,wBAAwBvnB,EAAUxV,KAAKitB,QAGnE,IAAIza,EAAkBF,EAAOE,gBAAiBC,EAAqBH,EAAOG,mBAAoBC,EAAmBJ,EAAOI,iBACxH,IAAKF,IAAoBC,IAAuBC,EAC5C,MAAM,EAAyBL,2BAA2BC,GAG9D,IAAIoqB,EAAoB,CACpBlqB,gBAAiBA,EACjBC,mBAAoBA,GAEpBuqB,EAAyB,CACzB5D,SAAUsD,EACVlnB,SAAUA,GAEd,OAAO,IAAI,GAAiBwnB,EAAwBtqB,EAAkB1S,KAAKitB,SAExE0R,EA7gE8B,G,aC1C1B,IACXnK,KAAM,CACFoW,WAAW,qBACXp1B,SAAU,uCAEV2C,UAAW,yEASX5B,YAAY,kCAKhBke,MAAO,CAEHnQ,cAAe,eACf8C,wBAAwB,I,aC6PhCyjB,GAAA,gEAEA,QACEt/B,KAAF,QACE29B,KAFF,WAGI,MAAO,CACLzuB,YAAN,GACM3M,QAAN,GACMg9B,YAAN,GACMv/B,KAAN,GACMw/B,MAAN,KAIEC,QAAS,CACP,UADJ,WACA,gKACA,GACA,4BACA,eAEA,aACA,gBACA,kBACA,gCAEA,mCAEA,+BACA,sBACA,gCAGA,oDACA,kBACA,iCACA,oBACA,aACA,eACA,6BACA,OACA,gBACA,YACA,sBACA,2BAIA,eACA,mDACA,2CACA,oCACA,4BAGA,mBACA,eAIA,8BAQA,mBACA,iCArDA,gDClS+U,M,8OCoBhU,UAAAC,GAAA,MAAO,GAAD,KAEnB,gBAAmB,SAFN,OAIN,CACP1/B,KADO,SAGP2/B,QAHO,WAIL,MAAO,CAAEC,KAAMnrC,OAGjBorC,cAPO,EASPC,MAAO,CACLC,SADK,QAELC,eAFK,QAGLC,SAHK,QAILxoC,MAAOyoC,SAGTvC,KAAM,iBAAO,CACXwC,OADW,GAEXC,SAFW,GAGXC,SAAU,KAGZC,MAAO,CACLD,SAAU,CACRE,QADQ,SACD,GACL,IAAMC,EAAS1qC,OAAA,oBAAf,GAEArB,KAAA,mBAEFgsC,MANQ,EAORC,WAAW,IAIfjB,QAAS,CACPkB,WADO,SACG,GAAY,WACdC,EAAW,SAAAxlC,GACf,OAAOA,EAAA,mBAA0B,SAAAgS,GAC/B,OAAU,EAAV,SAAyBhS,EAAzB,UACC,CAAEslC,WAAW,KAGZN,EAAqB,CACzBrqB,KAAM3a,EADmB,KAEzBylC,MAAO,aACPC,eAAgB,cAiBlB,OAdIrsC,KAAJ,eAEE2rC,EAAA,eAA0BhlC,EAAA,yBAAgC,SAAAgS,GACxD,IAGI,0BAA6BhS,EAAjC,QAEAglC,EAAA,MAAiBQ,EAAjB,QAGFR,EAAA,MAAiBQ,EAAjB,GAGF,GAGFG,SA/BO,WAgCL,WAAOtsC,KAAK0rC,OAAOx3B,QAAO,SAAAvN,GAAK,OAAKA,EAAA,UAA7B,cAGT4lC,MAnCO,WAoCLvsC,KAAA,gBAAoB,SAAA2G,GAAK,OAAIA,EAA7B,WACA3G,KAAA,iBAEFwsC,cAvCO,WAuCM,WACPxsC,KAAJ,gBAEEmuB,YAAW,WACT,gBADF,IAMJse,gBAhDO,WAiDLzsC,KAAA,gBAAoB,SAAA2G,GAAK,OAAIA,EAA7B,qBACA3G,KAAA,iBAEF0sC,SApDO,SAoDC,GACN1sC,KAAA,eACAA,KAAA,cAAmBA,KAAKksC,WAAxB,KAEFS,WAxDO,SAwDG,GACR,IAAMC,EAAQ5sC,KAAK0rC,OAAOmB,MAAK,SAAAzqC,GAAC,OAAIA,EAAA,OAAWuE,EAA/C,QAEA,MAEA,IAAMmmC,EAAU9sC,KAAK2rC,SAASkB,MAAK,SAAAzqC,GAAC,OAAIA,EAAA,OAAWwqC,EAAnD,QACA,IACEE,EAAA,QACAA,EAAA,kBAGF9sC,KAAA,SAAgBA,KAAK2rC,SAASz3B,QAAO,SAAA9R,GAAC,OAAIA,EAAA,OAAWwqC,EAArD,QACA5sC,KAAA,OAAcA,KAAK0rC,OAAOx3B,QAAO,SAAA9R,GAAC,OAAIA,EAAA,OAAWwqC,EAAjD,QACA5sC,KAAA,QAAaA,KAAb,SAA4B4sC,EAA5B,SAIJG,OA3GO,SA2GD,GAAG,WACP,OAAOC,EAAE,OAAQ,CACf3sC,YADe,SAEfC,MAAO,iBACL2sC,YADK,GAEFjtC,KAAKktC,QAEVvsC,GAAI,CACFwsC,OAAS,SAAA5pC,GAAD,OAAc,uBAEvBvD,KAAKotC,OATR,Y,0BC5HAC,GAAY,gBACd,GACA,EACApsC,GACA,EACA,KACA,WACA,MAIa,aAAAosC,GAAiB,QAYhC,KAAkBA,GAAW,CAACC,QAAA,KAAKC,SAAA,KAAM1tC,UAAA,QAAU2tC,QAAA,KAAKC,cAAA,KAAWC,SAAMC,QAAA,KAAKC,QAAA,Q","file":"js/chunk-78a72de6.b8219459.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./login.vue?vue&type=style&index=0&id=9de05cb2&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./login.vue?vue&type=style&index=0&id=9de05cb2&scoped=true&lang=css&\"","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"down-top-padding\",attrs:{\"id\":\"wrapper\",\"fluid\":\"\"}},[_c('div',{attrs:{\"id\":\"right\"}},[_c('div',{attrs:{\"id\":\"signin\"}}),_c('img',{staticStyle:{\"height\":\"15%\",\"position\":\"absolute\",\"top\":\"70%\",\"left\":\"5%\",\"background-color\":\"#ffffff\",\"padding\":\"15px 24px 15px 24px\",\"border-radius\":\"24px\",\"z-index\":\"2\"},attrs:{\"src\":_vm.logo}})]),_c('div',{attrs:{\"id\":\"left\"}},[_c('div',{attrs:{\"id\":\"showcase\"}},[_c('div',{staticClass:\"showcase-content\"},[_c('VCard',[_c('VCardText',[_c('img',{staticStyle:{\"height\":\"135px\",\"margin-bottom\":\"30px\",\"object-fit\":\"contain !important\"},attrs:{\"max-width\":\"505\",\"src\":_vm.logo}}),_c('p',{staticClass:\"mb-0\"},[_vm._v(\" Please sign-in to your account and start the adventure \")])]),_c('VCardText',[_c('VForm',{ref:\"refVForm\",on:{\"submit\":function($event){$event.preventDefault();return _vm.onSubmit($event)}}},[_c('VRow',[_c('VCol',[_c('div',{staticClass:\"alert-demo-v-model-wrapper\"}),_c('VBtn',{staticStyle:{\"padding-left\":\"72px\",\"padding-right\":\"72px\",\"margin-left\":\"33px\"},attrs:{\"type\":\"button\"},on:{\"click\":_vm.msalLogin}},[_c('VImg',{staticStyle:{\"position\":\"absolute\",\"z-index\":\"20\",\"width\":\"21px\",\"left\":\"40px\"},attrs:{\"src\":_vm.microsoft}}),_vm._v(\" Sign in with MICROSOFT \")],1)],1)],1)],1)],1)],1)],1)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar CryptoUtils = /** @class */ (function () {\r\n    function CryptoUtils() {\r\n    }\r\n    /**\r\n     * Creates a new random GUID\r\n     * @returns string (GUID)\r\n     */\r\n    CryptoUtils.createNewGuid = function () {\r\n        /*\r\n         * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n         * pseudo-random numbers.\r\n         * The algorithm is as follows:\r\n         *     Set the two most significant bits (bits 6 and 7) of the\r\n         *        clock_seq_hi_and_reserved to zero and one, respectively.\r\n         *     Set the four most significant bits (bits 12 through 15) of the\r\n         *        time_hi_and_version field to the 4-bit version number from\r\n         *        Section 4.1.3. Version4\r\n         *     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n         *     values.\r\n         * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n         * time-low               = 4hexOctet\r\n         * time-mid               = 2hexOctet\r\n         * time-high-and-version  = 2hexOctet\r\n         * clock-seq-and-reserved = hexOctet:\r\n         * clock-seq-low          = hexOctet\r\n         * node                   = 6hexOctet\r\n         * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n         * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n         * y values are 8, 9, A, B\r\n         */\r\n        var cryptoObj = window.crypto; // for IE 11\r\n        if (cryptoObj && cryptoObj.getRandomValues) {\r\n            var buffer = new Uint8Array(16);\r\n            cryptoObj.getRandomValues(buffer);\r\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\r\n            return CryptoUtils.decimalToHex(buffer[0]) + CryptoUtils.decimalToHex(buffer[1])\r\n                + CryptoUtils.decimalToHex(buffer[2]) + CryptoUtils.decimalToHex(buffer[3])\r\n                + \"-\" + CryptoUtils.decimalToHex(buffer[4]) + CryptoUtils.decimalToHex(buffer[5])\r\n                + \"-\" + CryptoUtils.decimalToHex(buffer[6]) + CryptoUtils.decimalToHex(buffer[7])\r\n                + \"-\" + CryptoUtils.decimalToHex(buffer[8]) + CryptoUtils.decimalToHex(buffer[9])\r\n                + \"-\" + CryptoUtils.decimalToHex(buffer[10]) + CryptoUtils.decimalToHex(buffer[11])\r\n                + CryptoUtils.decimalToHex(buffer[12]) + CryptoUtils.decimalToHex(buffer[13])\r\n                + CryptoUtils.decimalToHex(buffer[14]) + CryptoUtils.decimalToHex(buffer[15]);\r\n        }\r\n        else {\r\n            var guidHolder = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n            var hex = \"0123456789abcdef\";\r\n            var r = 0;\r\n            var guidResponse = \"\";\r\n            for (var i = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === \"x\") {\r\n                    guidResponse += hex[r];\r\n                }\r\n                else if (guidHolder[i] === \"y\") {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                }\r\n                else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    };\r\n    /**\r\n     * verifies if a string is  GUID\r\n     * @param guid\r\n     */\r\n    CryptoUtils.isGuid = function (guid) {\r\n        var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    };\r\n    /**\r\n     * Decimal to Hex\r\n     *\r\n     * @param num\r\n     */\r\n    CryptoUtils.decimalToHex = function (num) {\r\n        var hex = num.toString(16);\r\n        while (hex.length < 2) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    };\r\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_4_%E2%80%93_escaping_the_string_before_encoding_it\r\n    /**\r\n     * encoding string to base64 - platform specific check\r\n     *\r\n     * @param input\r\n     */\r\n    CryptoUtils.base64Encode = function (input) {\r\n        return btoa(encodeURIComponent(input).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {\r\n            return String.fromCharCode(Number(\"0x\" + p1));\r\n        }));\r\n    };\r\n    /**\r\n     * Decodes a base64 encoded string.\r\n     *\r\n     * @param input\r\n     */\r\n    CryptoUtils.base64Decode = function (input) {\r\n        var encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        switch (encodedString.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                encodedString += \"==\";\r\n                break;\r\n            case 3:\r\n                encodedString += \"=\";\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid base64 string\");\r\n        }\r\n        return decodeURIComponent(atob(encodedString).split(\"\").map(function (c) {\r\n            return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(\"\"));\r\n    };\r\n    /**\r\n     * deserialize a string\r\n     *\r\n     * @param query\r\n     */\r\n    CryptoUtils.deserialize = function (query) {\r\n        var match; // Regex for replacing addition symbol with a space\r\n        var pl = /\\+/g;\r\n        var search = /([^&=]+)=([^&]*)/g;\r\n        var decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); };\r\n        var obj = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n        return obj;\r\n    };\r\n    return CryptoUtils;\r\n}());\r\nexport { CryptoUtils };\r\n//# sourceMappingURL=CryptoUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n * Constants\r\n */\r\nvar Constants = /** @class */ (function () {\r\n    function Constants() {\r\n    }\r\n    Object.defineProperty(Constants, \"libraryName\", {\r\n        get: function () { return \"Msal.js\"; } // used in telemetry sdkName\r\n        ,\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"claims\", {\r\n        get: function () { return \"claims\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"clientId\", {\r\n        get: function () { return \"clientId\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"adalIdToken\", {\r\n        get: function () { return \"adal.idtoken\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"cachePrefix\", {\r\n        get: function () { return \"msal\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"scopes\", {\r\n        get: function () { return \"scopes\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"no_account\", {\r\n        get: function () { return \"NO_ACCOUNT\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"upn\", {\r\n        get: function () { return \"upn\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"domain_hint\", {\r\n        get: function () { return \"domain_hint\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"prompt_select_account\", {\r\n        get: function () { return \"&prompt=select_account\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"prompt_none\", {\r\n        get: function () { return \"&prompt=none\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"prompt\", {\r\n        get: function () { return \"prompt\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"response_mode_fragment\", {\r\n        get: function () { return \"&response_mode=fragment\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"resourceDelimiter\", {\r\n        get: function () { return \"|\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"cacheDelimiter\", {\r\n        get: function () { return \".\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"popUpWidth\", {\r\n        get: function () { return this._popUpWidth; },\r\n        set: function (width) {\r\n            this._popUpWidth = width;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"popUpHeight\", {\r\n        get: function () { return this._popUpHeight; },\r\n        set: function (height) {\r\n            this._popUpHeight = height;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"login\", {\r\n        get: function () { return \"LOGIN\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"renewToken\", {\r\n        get: function () { return \"RENEW_TOKEN\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"unknown\", {\r\n        get: function () { return \"UNKNOWN\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"ADFS\", {\r\n        get: function () { return \"adfs\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"homeAccountIdentifier\", {\r\n        get: function () { return \"homeAccountIdentifier\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"common\", {\r\n        get: function () { return \"common\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"openidScope\", {\r\n        get: function () { return \"openid\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"profileScope\", {\r\n        get: function () { return \"profile\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"oidcScopes\", {\r\n        get: function () { return [this.openidScope, this.profileScope]; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"interactionTypeRedirect\", {\r\n        get: function () { return \"redirectInteraction\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"interactionTypePopup\", {\r\n        get: function () { return \"popupInteraction\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"interactionTypeSilent\", {\r\n        get: function () { return \"silentInteraction\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Constants, \"inProgress\", {\r\n        get: function () { return \"inProgress\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Constants._popUpWidth = 483;\r\n    Constants._popUpHeight = 600;\r\n    return Constants;\r\n}());\r\nexport { Constants };\r\nexport var SESSION_STORAGE = \"sessionStorage\";\r\n/**\r\n * Keys in the hashParams\r\n */\r\nexport var ServerHashParamKeys;\r\n(function (ServerHashParamKeys) {\r\n    ServerHashParamKeys[\"SCOPE\"] = \"scope\";\r\n    ServerHashParamKeys[\"STATE\"] = \"state\";\r\n    ServerHashParamKeys[\"ERROR\"] = \"error\";\r\n    ServerHashParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    ServerHashParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    ServerHashParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    ServerHashParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    ServerHashParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    ServerHashParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n})(ServerHashParamKeys || (ServerHashParamKeys = {}));\r\n/**\r\n * @hidden\r\n * @ignore\r\n * response_type from OpenIDConnect\r\n * References: https://openid.net/specs/oauth-v2-multiple-response-types-1_0.html & https://tools.ietf.org/html/rfc6749#section-4.2.1\r\n *\r\n */\r\nexport var ResponseTypes = {\r\n    id_token: \"id_token\",\r\n    token: \"token\",\r\n    id_token_token: \"id_token token\"\r\n};\r\n/**\r\n * @hidden\r\n * CacheKeys for MSAL\r\n */\r\nexport var TemporaryCacheKeys;\r\n(function (TemporaryCacheKeys) {\r\n    TemporaryCacheKeys[\"AUTHORITY\"] = \"authority\";\r\n    TemporaryCacheKeys[\"ACQUIRE_TOKEN_ACCOUNT\"] = \"acquireTokenAccount\";\r\n    TemporaryCacheKeys[\"SESSION_STATE\"] = \"session.state\";\r\n    TemporaryCacheKeys[\"STATE_LOGIN\"] = \"state.login\";\r\n    TemporaryCacheKeys[\"STATE_ACQ_TOKEN\"] = \"state.acquireToken\";\r\n    TemporaryCacheKeys[\"STATE_RENEW\"] = \"state.renew\";\r\n    TemporaryCacheKeys[\"NONCE_IDTOKEN\"] = \"nonce.idtoken\";\r\n    TemporaryCacheKeys[\"LOGIN_REQUEST\"] = \"login.request\";\r\n    TemporaryCacheKeys[\"RENEW_STATUS\"] = \"token.renew.status\";\r\n    TemporaryCacheKeys[\"URL_HASH\"] = \"urlHash\";\r\n    TemporaryCacheKeys[\"INTERACTION_STATUS\"] = \"interaction.status\";\r\n    TemporaryCacheKeys[\"REDIRECT_REQUEST\"] = \"redirect_request\";\r\n})(TemporaryCacheKeys || (TemporaryCacheKeys = {}));\r\nexport var PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"IDTOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\nexport var ErrorCacheKeys;\r\n(function (ErrorCacheKeys) {\r\n    ErrorCacheKeys[\"LOGIN_ERROR\"] = \"login.error\";\r\n    ErrorCacheKeys[\"ERROR\"] = \"error\";\r\n    ErrorCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n})(ErrorCacheKeys || (ErrorCacheKeys = {}));\r\nexport var DEFAULT_AUTHORITY = \"https://login.microsoftonline.com/common/\";\r\nexport var AAD_INSTANCE_DISCOVERY_ENDPOINT = DEFAULT_AUTHORITY + \"/discovery/instance?api-version=1.1&authorization_endpoint=\";\r\nexport var WELL_KNOWN_SUFFIX = \".well-known/openid-configuration\";\r\n/**\r\n * @hidden\r\n * SSO Types - generated to populate hints\r\n */\r\nexport var SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\r\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n/**\r\n * @hidden\r\n */\r\nexport var DisallowedEQParams = [\r\n    SSOTypes.SID,\r\n    SSOTypes.LOGIN_HINT\r\n];\r\nexport var NetworkRequestType = {\r\n    GET: \"GET\",\r\n    POST: \"POST\"\r\n};\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n * @hidden\r\n */\r\nexport var PromptState = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\"\r\n};\r\n/**\r\n * Frame name prefixes for the hidden iframe created in silent frames\r\n */\r\nexport var FramePrefix = {\r\n    ID_TOKEN_FRAME: \"msalIdTokenFrame\",\r\n    TOKEN_FRAME: \"msalRenewFrame\"\r\n};\r\n//# sourceMappingURL=Constants.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { ClientConfigurationErrorMessage, ClientConfigurationError } from \"../error/ClientConfigurationError\";\r\nimport { XhrClient } from \"../XHRClient\";\r\nimport { UrlUtils } from \"../utils/UrlUtils\";\r\nimport { TrustedAuthority } from \"./TrustedAuthority\";\r\nimport { NetworkRequestType, Constants, WELL_KNOWN_SUFFIX } from \"../utils/Constants\";\r\n/**\r\n * @hidden\r\n */\r\nexport var AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Default\"] = 0] = \"Default\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n})(AuthorityType || (AuthorityType = {}));\r\n/**\r\n * @hidden\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, validateAuthority, authorityMetadata) {\r\n        this.IsValidationEnabled = validateAuthority;\r\n        this.CanonicalAuthority = authority;\r\n        this.validateAsUri();\r\n        this.tenantDiscoveryResponse = authorityMetadata;\r\n    }\r\n    Authority.isAdfs = function (authorityUrl) {\r\n        var components = UrlUtils.GetUrlComponents(authorityUrl);\r\n        var pathSegments = components.PathSegments;\r\n        return (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS);\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"AuthorityType\", {\r\n        get: function () {\r\n            return Authority.isAdfs(this.canonicalAuthority) ? AuthorityType.Adfs : AuthorityType.Default;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"Tenant\", {\r\n        get: function () {\r\n            return this.CanonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"AuthorizationEndpoint\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.AuthorizationEndpoint.replace(/{tenant}|{tenantid}/g, this.Tenant);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"EndSessionEndpoint\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.EndSessionEndpoint.replace(/{tenant}|{tenantid}/g, this.Tenant);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"SelfSignedJwtAudience\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.Issuer.replace(/{tenant}|{tenantid}/g, this.Tenant);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Authority.prototype.validateResolved = function () {\r\n        if (!this.hasCachedMetadata()) {\r\n            throw \"Please call ResolveEndpointsAsync first\";\r\n        }\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"CanonicalAuthority\", {\r\n        /**\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthority;\r\n        },\r\n        set: function (url) {\r\n            this.canonicalAuthority = UrlUtils.CanonicalizeUri(url);\r\n            this.canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"CanonicalAuthorityUrlComponents\", {\r\n        get: function () {\r\n            if (!this.canonicalAuthorityUrlComponents) {\r\n                this.canonicalAuthorityUrlComponents = UrlUtils.GetUrlComponents(this.CanonicalAuthority);\r\n            }\r\n            return this.canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"DefaultOpenIdConfigurationEndpoint\", {\r\n        // http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\r\n        get: function () {\r\n            return (this.AuthorityType === AuthorityType.Adfs) ? \"\" + this.CanonicalAuthority + WELL_KNOWN_SUFFIX : this.CanonicalAuthority + \"v2.0/\" + WELL_KNOWN_SUFFIX;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Given a string, validate that it is of the form https://domain/path\r\n     */\r\n    Authority.prototype.validateAsUri = function () {\r\n        var components;\r\n        try {\r\n            components = this.CanonicalAuthorityUrlComponents;\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationErrorMessage.invalidAuthorityType;\r\n        }\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw ClientConfigurationErrorMessage.authorityUriInsecure;\r\n        }\r\n        if (!components.PathSegments || components.PathSegments.length < 1) {\r\n            throw ClientConfigurationErrorMessage.authorityUriInvalidPath;\r\n        }\r\n    };\r\n    /**\r\n     * Calls the OIDC endpoint and returns the response\r\n     */\r\n    Authority.prototype.DiscoverEndpoints = function (openIdConfigurationEndpoint, telemetryManager, correlationId) {\r\n        var client = new XhrClient();\r\n        var httpMethod = NetworkRequestType.GET;\r\n        var httpEvent = telemetryManager.createAndStartHttpEvent(correlationId, httpMethod, openIdConfigurationEndpoint, \"openIdConfigurationEndpoint\");\r\n        return client.sendRequestAsync(openIdConfigurationEndpoint, httpMethod, /* enableCaching: */ true)\r\n            .then(function (response) {\r\n            httpEvent.httpResponseStatus = response.statusCode;\r\n            telemetryManager.stopEvent(httpEvent);\r\n            return {\r\n                AuthorizationEndpoint: response.body[\"authorization_endpoint\"],\r\n                EndSessionEndpoint: response.body[\"end_session_endpoint\"],\r\n                Issuer: response.body[\"issuer\"]\r\n            };\r\n        })\r\n            .catch(function (err) {\r\n            httpEvent.serverErrorCode = err;\r\n            telemetryManager.stopEvent(httpEvent);\r\n            throw err;\r\n        });\r\n    };\r\n    /**\r\n     * Returns a promise.\r\n     * Checks to see if the authority is in the cache\r\n     * Discover endpoints via openid-configuration\r\n     * If successful, caches the endpoint for later use in OIDC\r\n     */\r\n    Authority.prototype.resolveEndpointsAsync = function (telemetryManager, correlationId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var host, openIdConfigurationEndpointResponse, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.IsValidationEnabled) return [3 /*break*/, 3];\r\n                        host = this.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n                        if (!(TrustedAuthority.getTrustedHostList().length === 0)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, TrustedAuthority.setTrustedAuthoritiesFromNetwork(this.canonicalAuthority, telemetryManager, correlationId)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        if (!TrustedAuthority.IsInTrustedHostList(host)) {\r\n                            throw ClientConfigurationError.createUntrustedAuthorityError(host);\r\n                        }\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        openIdConfigurationEndpointResponse = this.GetOpenIdConfigurationEndpoint();\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.DiscoverEndpoints(openIdConfigurationEndpointResponse, telemetryManager, correlationId)];\r\n                    case 4:\r\n                        _a.tenantDiscoveryResponse = _b.sent();\r\n                        return [2 /*return*/, this.tenantDiscoveryResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if there is a cached tenant discovery response with required fields.\r\n     */\r\n    Authority.prototype.hasCachedMetadata = function () {\r\n        return !!(this.tenantDiscoveryResponse &&\r\n            this.tenantDiscoveryResponse.AuthorizationEndpoint &&\r\n            this.tenantDiscoveryResponse.EndSessionEndpoint &&\r\n            this.tenantDiscoveryResponse.Issuer);\r\n    };\r\n    /**\r\n     * Returns a promise which resolves to the OIDC endpoint\r\n     * Only responds with the endpoint\r\n     */\r\n    Authority.prototype.GetOpenIdConfigurationEndpoint = function () {\r\n        return this.DefaultOpenIdConfigurationEndpoint;\r\n    };\r\n    return Authority;\r\n}());\r\nexport { Authority };\r\n//# sourceMappingURL=Authority.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __extends } from \"tslib\";\r\nexport var AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    },\r\n    noWindowObjectError: {\r\n        code: \"no_window_object\",\r\n        desc: \"No window object available. Details:\"\r\n    }\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nvar AuthError = /** @class */ (function (_super) {\r\n    __extends(AuthError, _super);\r\n    function AuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorMessage) || this;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.errorCode = errorCode;\r\n        _this.errorMessage = errorMessage;\r\n        _this.name = \"AuthError\";\r\n        return _this;\r\n    }\r\n    AuthError.createUnexpectedError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\r\n    };\r\n    AuthError.createNoWindowObjectError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.noWindowObjectError.code, AuthErrorMessage.noWindowObjectError.desc + \" \" + errDesc);\r\n    };\r\n    return AuthError;\r\n}(Error));\r\nexport { AuthError };\r\n//# sourceMappingURL=AuthError.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar StringUtils = /** @class */ (function () {\r\n    function StringUtils() {\r\n    }\r\n    /**\r\n     * Check if a string is empty\r\n     *\r\n     * @param str\r\n     */\r\n    StringUtils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    /**\r\n     * Check if a string's value is a valid JSON object\r\n     *\r\n     * @param str\r\n     */\r\n    StringUtils.validateAndParseJsonCacheKey = function (str) {\r\n        try {\r\n            var parsedKey = JSON.parse(str);\r\n            /**\r\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\r\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\r\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\r\n             *\r\n             */\r\n            return (parsedKey && typeof parsedKey === \"object\") ? parsedKey : null;\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n    };\r\n    return StringUtils;\r\n}());\r\nexport { StringUtils };\r\n//# sourceMappingURL=StringUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { AuthError } from \"./AuthError\";\r\nimport { StringUtils } from \"../utils/StringUtils\";\r\nexport var ClientAuthErrorMessage = {\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    tokenRenewalError: {\r\n        code: \"token_renewal_error\",\r\n        desc: \"Token renewal operation failed due to timeout.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    invalidStateError: {\r\n        code: \"invalid_state_error\",\r\n        desc: \"Invalid state.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch_error\",\r\n        desc: \"Nonce is not matching, Nonce received: \"\r\n    },\r\n    loginProgressError: {\r\n        code: \"login_progress_error\",\r\n        desc: \"Login_In_Progress: Error during login call - login is already in progress.\"\r\n    },\r\n    acquireTokenProgressError: {\r\n        code: \"acquiretoken_progress_error\",\r\n        desc: \"AcquireToken_In_Progress: Error during login call - login is already in progress.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    callbackError: {\r\n        code: \"callback_error\",\r\n        desc: \"Error occurred in token received callback function.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required. For silent calls, request must contain either sid or login_hint\"\r\n    },\r\n    userDoesNotExistError: {\r\n        code: \"user_non_existent\",\r\n        desc: \"User object does not exist. Please call a login API.\"\r\n    },\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoNotPopulatedError: {\r\n        code: \"client_info_not_populated_error\",\r\n        desc: \"The service did not populate client_info in the response, Please verify with the service team\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenNotParsed: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    tokenEncodingError: {\r\n        code: \"token_encoding_error\",\r\n        desc: \"The token to be decoded is not encoded correctly.\"\r\n    },\r\n    invalidInteractionType: {\r\n        code: \"invalid_interaction_type\",\r\n        desc: \"The interaction type passed to the handler was incorrect or unknown\"\r\n    },\r\n    cacheParseError: {\r\n        code: \"cannot_parse_cache\",\r\n        desc: \"The cached token key is not a valid JSON and cannot be parsed\"\r\n    },\r\n    blockTokenRequestsInHiddenIframe: {\r\n        code: \"block_token_requests\",\r\n        desc: \"Token calls are blocked in hidden iframes\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    __extends(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    ClientAuthError.createEndpointResolutionError = function (errDetail) {\r\n        var errorMessage = ClientAuthErrorMessage.endpointResolutionError.desc;\r\n        if (errDetail && !StringUtils.isEmpty(errDetail)) {\r\n            errorMessage += \" Details: \" + errDetail;\r\n        }\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createPopupWindowError = function (errDetail) {\r\n        var errorMessage = ClientAuthErrorMessage.popUpWindowError.desc;\r\n        if (errDetail && !StringUtils.isEmpty(errDetail)) {\r\n            errorMessage += \" Details: \" + errDetail;\r\n        }\r\n        return new ClientAuthError(ClientAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createTokenRenewalTimeoutError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRenewalError.code, ClientAuthErrorMessage.tokenRenewalError.desc);\r\n    };\r\n    ClientAuthError.createInvalidIdTokenError = function (idToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + idToken);\r\n    };\r\n    // TODO: Is this not a security flaw to send the user the state expected??\r\n    ClientAuthError.createInvalidStateError = function (invalidState, actualState) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" \" + invalidState + \", state expected : \" + actualState + \".\");\r\n    };\r\n    // TODO: Is this not a security flaw to send the user the Nonce expected??\r\n    ClientAuthError.createNonceMismatchError = function (invalidNonce, actualNonce) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc + \" \" + invalidNonce + \", nonce expected : \" + actualNonce + \".\");\r\n    };\r\n    ClientAuthError.createLoginInProgressError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.loginProgressError.code, ClientAuthErrorMessage.loginProgressError.desc);\r\n    };\r\n    ClientAuthError.createAcquireTokenInProgressError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.acquireTokenProgressError.code, ClientAuthErrorMessage.acquireTokenProgressError.desc);\r\n    };\r\n    ClientAuthError.createUserCancelledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userCancelledError.code, ClientAuthErrorMessage.userCancelledError.desc);\r\n    };\r\n    ClientAuthError.createErrorInCallbackFunction = function (errorDesc) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.callbackError.code, ClientAuthErrorMessage.callbackError.desc + \" \" + errorDesc + \".\");\r\n    };\r\n    ClientAuthError.createUserLoginRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    };\r\n    ClientAuthError.createUserDoesNotExistError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userDoesNotExistError.code, ClientAuthErrorMessage.userDoesNotExistError.desc);\r\n    };\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    ClientAuthError.createClientInfoNotPopulatedError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoNotPopulatedError.code, ClientAuthErrorMessage.clientInfoNotPopulatedError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\r\n    };\r\n    ClientAuthError.createIdTokenParsingError = function (caughtParsingError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenNotParsed.code, ClientAuthErrorMessage.idTokenNotParsed.desc + \" Failed with error: \" + caughtParsingError);\r\n    };\r\n    ClientAuthError.createTokenEncodingError = function (incorrectlyEncodedToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenEncodingError.code, ClientAuthErrorMessage.tokenEncodingError.desc + \" Attempted to decode: \" + incorrectlyEncodedToken);\r\n    };\r\n    ClientAuthError.createInvalidInteractionTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidInteractionType.code, ClientAuthErrorMessage.invalidInteractionType.desc);\r\n    };\r\n    ClientAuthError.createCacheParseError = function (key) {\r\n        var errorMessage = \"invalid key: \" + key + \", \" + ClientAuthErrorMessage.cacheParseError.desc;\r\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createBlockTokenRequestsInHiddenIframeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.code, ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.desc);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\r\nexport { ClientAuthError };\r\n//# sourceMappingURL=ClientAuthError.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { ClientAuthError } from \"./ClientAuthError\";\r\nexport var ClientConfigurationErrorMessage = {\r\n    configurationNotSet: {\r\n        code: \"no_config_set\",\r\n        desc: \"Configuration has not been set. Please call the UserAgentApplication constructor with a valid Configuration object.\"\r\n    },\r\n    storageNotSupported: {\r\n        code: \"storage_not_supported\",\r\n        desc: \"The value for the cacheLocation is not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call handleRedirectCallback() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    scopesRequired: {\r\n        code: \"scopes_required\",\r\n        desc: \"Scopes are required to obtain an access token.\"\r\n    },\r\n    emptyScopes: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as empty array.\"\r\n    },\r\n    nonArrayScopes: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'\",\r\n    },\r\n    invalidAuthorityType: {\r\n        code: \"invalid_authority_type\",\r\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please see here for valid authorities: <insert URL here>.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.\"\r\n    },\r\n    authorityUriInvalidPath: {\r\n        code: \"authority_uri_invalid_path\",\r\n        desc: \"Given authority URI is invalid.\"\r\n    },\r\n    unsupportedAuthorityValidation: {\r\n        code: \"unsupported_authority_validation\",\r\n        desc: \"The authority validation is not supported for this authority type.\"\r\n    },\r\n    untrustedAuthority: {\r\n        code: \"untrusted_authority\",\r\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter or set validateAuthority=false.\"\r\n    },\r\n    b2cAuthorityUriInvalidPath: {\r\n        code: \"b2c_authority_uri_invalid_path\",\r\n        desc: \"The given URI for the B2C authority is invalid.\"\r\n    },\r\n    b2cKnownAuthoritiesNotSet: {\r\n        code: \"b2c_known_authorities_not_set\",\r\n        desc: \"Must set known authorities when validateAuthority is set to True and using B2C\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    emptyRequestError: {\r\n        code: \"empty_request_error\",\r\n        desc: \"Request object is required.\"\r\n    },\r\n    invalidCorrelationIdError: {\r\n        code: \"invalid_guid_sent_as_correlationId\",\r\n        desc: \"Please set the correlationId as a valid guid\"\r\n    },\r\n    telemetryConfigError: {\r\n        code: \"telemetry_config_error\",\r\n        desc: \"Telemetry config is not configured with required values\"\r\n    },\r\n    ssoSilentError: {\r\n        code: \"sso_silent_error\",\r\n        desc: \"request must contain either sid or login_hint\"\r\n    },\r\n    invalidAuthorityMetadataError: {\r\n        code: \"authority_metadata_error\",\r\n        desc: \"Invalid authorityMetadata. Must be a JSON object containing authorization_endpoint, end_session_endpoint, and issuer fields.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the .js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    __extends(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    ClientConfigurationError.createNoSetConfigurationError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.configurationNotSet.code, \"\" + ClientConfigurationErrorMessage.configurationNotSet.desc);\r\n    };\r\n    ClientConfigurationError.createStorageNotSupportedError = function (givenCacheLocation) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.storageNotSupported.code, ClientConfigurationErrorMessage.storageNotSupported.desc + \" Given location: \" + givenCacheLocation);\r\n    };\r\n    ClientConfigurationError.createRedirectCallbacksNotSetError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.noRedirectCallbacksSet.code, ClientConfigurationErrorMessage.noRedirectCallbacksSet.desc);\r\n    };\r\n    ClientConfigurationError.createInvalidCallbackObjectError = function (callbackObject) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCallbackObject.code, ClientConfigurationErrorMessage.invalidCallbackObject.desc + \" Given value for callback function: \" + callbackObject);\r\n    };\r\n    ClientConfigurationError.createEmptyScopesArrayError = function (scopesValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopes.code, ClientConfigurationErrorMessage.emptyScopes.desc + \" Given value: \" + scopesValue + \".\");\r\n    };\r\n    ClientConfigurationError.createScopesNonArrayError = function (scopesValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopes.code, ClientConfigurationErrorMessage.nonArrayScopes.desc + \" Given value: \" + scopesValue + \".\");\r\n    };\r\n    ClientConfigurationError.createScopesRequiredError = function (scopesValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.scopesRequired.code, ClientConfigurationErrorMessage.scopesRequired.desc + \" Given value: \" + scopesValue);\r\n    };\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    ClientConfigurationError.createEmptyRequestError = function () {\r\n        var _a = ClientConfigurationErrorMessage.emptyRequestError, code = _a.code, desc = _a.desc;\r\n        return new ClientConfigurationError(code, desc);\r\n    };\r\n    ClientConfigurationError.createInvalidCorrelationIdError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCorrelationIdError.code, ClientConfigurationErrorMessage.invalidCorrelationIdError.desc);\r\n    };\r\n    ClientConfigurationError.createKnownAuthoritiesNotSetError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.code, ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.desc);\r\n    };\r\n    ClientConfigurationError.createInvalidAuthorityTypeError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityType.code, ClientConfigurationErrorMessage.invalidAuthorityType.desc);\r\n    };\r\n    ClientConfigurationError.createUntrustedAuthorityError = function (host) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc + \" Provided Authority: \" + host);\r\n    };\r\n    ClientConfigurationError.createTelemetryConfigError = function (config) {\r\n        var _a = ClientConfigurationErrorMessage.telemetryConfigError, code = _a.code, desc = _a.desc;\r\n        var requiredKeys = {\r\n            applicationName: \"string\",\r\n            applicationVersion: \"string\",\r\n            telemetryEmitter: \"function\"\r\n        };\r\n        var missingKeys = Object.keys(requiredKeys)\r\n            .reduce(function (keys, key) {\r\n            return config[key] ? keys : keys.concat([key + \" (\" + requiredKeys[key] + \")\"]);\r\n        }, []);\r\n        return new ClientConfigurationError(code, desc + \" mising values: \" + missingKeys.join(\",\"));\r\n    };\r\n    ClientConfigurationError.createSsoSilentError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.ssoSilentError.code, ClientConfigurationErrorMessage.ssoSilentError.desc);\r\n    };\r\n    ClientConfigurationError.createInvalidAuthorityMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadataError.code, ClientConfigurationErrorMessage.invalidAuthorityMetadataError.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\r\nexport { ClientConfigurationError };\r\n//# sourceMappingURL=ClientConfigurationError.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __spreadArrays } from \"tslib\";\r\nimport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\r\nimport { Constants } from \"./utils/Constants\";\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet() {\r\n    }\r\n    /**\r\n     * Check if there are dup scopes in a given request\r\n     *\r\n     * @param cachedScopes\r\n     * @param scopes\r\n     */\r\n    // TODO: Rename this, intersecting scopes isn't a great name for duplicate checker\r\n    ScopeSet.isIntersectingScopes = function (cachedScopes, scopes) {\r\n        var convertedCachedScopes = this.trimAndConvertArrayToLowerCase(__spreadArrays(cachedScopes));\r\n        var requestScopes = this.trimAndConvertArrayToLowerCase(__spreadArrays(scopes));\r\n        for (var i = 0; i < requestScopes.length; i++) {\r\n            if (convertedCachedScopes.indexOf(requestScopes[i].toLowerCase()) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Check if a given scope is present in the request\r\n     *\r\n     * @param cachedScopes\r\n     * @param scopes\r\n     */\r\n    ScopeSet.containsScope = function (cachedScopes, scopes) {\r\n        var convertedCachedScopes = this.trimAndConvertArrayToLowerCase(__spreadArrays(cachedScopes));\r\n        var requestScopes = this.trimAndConvertArrayToLowerCase(__spreadArrays(scopes));\r\n        return requestScopes.every(function (value) { return convertedCachedScopes.indexOf(value.toString().toLowerCase()) >= 0; });\r\n    };\r\n    /**\r\n     *  Trims and converts string to lower case\r\n     *\r\n     * @param scopes\r\n     */\r\n    // TODO: Rename this, too generic name for a function that only deals with scopes\r\n    ScopeSet.trimAndConvertToLowerCase = function (scope) {\r\n        return scope.trim().toLowerCase();\r\n    };\r\n    /**\r\n     * Performs trimAndConvertToLowerCase on string array\r\n     * @param scopes\r\n     */\r\n    ScopeSet.trimAndConvertArrayToLowerCase = function (scopes) {\r\n        var _this = this;\r\n        return scopes.map(function (scope) { return _this.trimAndConvertToLowerCase(scope); });\r\n    };\r\n    /**\r\n     * Trims each scope in scopes array\r\n     * @param scopes\r\n     */\r\n    ScopeSet.trimScopes = function (scopes) {\r\n        return scopes.map(function (scope) { return scope.trim(); });\r\n    };\r\n    /**\r\n     * Remove one element from a scope array\r\n     *\r\n     * @param scopes\r\n     * @param scope\r\n     */\r\n    // TODO: Rename this, too generic name for a function that only deals with scopes\r\n    ScopeSet.removeElement = function (scopes, scope) {\r\n        var scopeVal = this.trimAndConvertToLowerCase(scope);\r\n        return scopes.filter(function (value) { return value !== scopeVal; });\r\n    };\r\n    /**\r\n     * Parse the scopes into a formatted scopeList\r\n     * @param scopes\r\n     */\r\n    ScopeSet.parseScope = function (scopes) {\r\n        var scopeList = \"\";\r\n        if (scopes) {\r\n            for (var i = 0; i < scopes.length; ++i) {\r\n                scopeList += (i !== scopes.length - 1) ? scopes[i] + \" \" : scopes[i];\r\n            }\r\n        }\r\n        return scopeList;\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} scopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n     * @ignore\r\n     */\r\n    ScopeSet.validateInputScope = function (scopes, scopesRequired) {\r\n        if (!scopes) {\r\n            if (scopesRequired) {\r\n                throw ClientConfigurationError.createScopesRequiredError(scopes);\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        // Check that scopes is an array object (also throws error if scopes == null)\r\n        if (!Array.isArray(scopes)) {\r\n            throw ClientConfigurationError.createScopesNonArrayError(scopes);\r\n        }\r\n        // Check that scopes is not an empty array\r\n        if (scopes.length < 1 && scopesRequired) {\r\n            throw ClientConfigurationError.createEmptyScopesArrayError(scopes.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Extracts scope value from the state sent with the authentication request.\r\n     * @param {string} state\r\n     * @returns {string} scope.\r\n     * @ignore\r\n     */\r\n    ScopeSet.getScopeFromState = function (state) {\r\n        if (state) {\r\n            var splitIndex = state.indexOf(Constants.resourceDelimiter);\r\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n                return state.substring(splitIndex + 1);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Appends extraScopesToConsent if passed\r\n     * @param {@link AuthenticationParameters}\r\n     */\r\n    ScopeSet.appendScopes = function (reqScopes, reqExtraScopesToConsent) {\r\n        if (reqScopes) {\r\n            var convertedExtraScopes = reqExtraScopesToConsent ? this.trimAndConvertArrayToLowerCase(__spreadArrays(reqExtraScopesToConsent)) : null;\r\n            var convertedReqScopes = this.trimAndConvertArrayToLowerCase(__spreadArrays(reqScopes));\r\n            return convertedExtraScopes ? __spreadArrays(convertedReqScopes, convertedExtraScopes) : convertedReqScopes;\r\n        }\r\n        return null;\r\n    };\r\n    // #endregion\r\n    /**\r\n     * @ignore\r\n     * Returns true if the scopes array only contains openid and/or profile\r\n     */\r\n    ScopeSet.onlyContainsOidcScopes = function (scopes) {\r\n        var scopesCount = scopes.length;\r\n        var oidcScopesFound = 0;\r\n        if (scopes.indexOf(Constants.openidScope) > -1) {\r\n            oidcScopesFound += 1;\r\n        }\r\n        if (scopes.indexOf(Constants.profileScope) > -1) {\r\n            oidcScopesFound += 1;\r\n        }\r\n        return (scopesCount > 0 && scopesCount === oidcScopesFound);\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Returns true if the scopes array only contains openid and/or profile\r\n     */\r\n    ScopeSet.containsAnyOidcScopes = function (scopes) {\r\n        var containsOpenIdScope = scopes.indexOf(Constants.openidScope) > -1;\r\n        var containsProfileScope = scopes.indexOf(Constants.profileScope) > -1;\r\n        return (containsOpenIdScope || containsProfileScope);\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Returns true if the clientId is the only scope in the array\r\n     */\r\n    ScopeSet.onlyContainsClientId = function (scopes, clientId) {\r\n        // Double negation to force false value returned in case scopes is null\r\n        return !!scopes && (scopes.indexOf(clientId) > -1 && scopes.length === 1);\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Adds missing OIDC scopes to scopes array without duplication. Since STS requires OIDC scopes for\r\n     * all implicit flow requests, 'openid' and 'profile' should always be included in the final request\r\n     */\r\n    ScopeSet.appendDefaultScopes = function (scopes) {\r\n        var extendedScopes = scopes;\r\n        if (extendedScopes.indexOf(Constants.openidScope) === -1) {\r\n            extendedScopes.push(Constants.openidScope);\r\n        }\r\n        if (extendedScopes.indexOf(Constants.profileScope) === -1) {\r\n            extendedScopes.push(Constants.profileScope);\r\n        }\r\n        return extendedScopes;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Removes present OIDC scopes from scopes array.\r\n     */\r\n    ScopeSet.removeDefaultScopes = function (scopes) {\r\n        return scopes.filter(function (scope) {\r\n            return (scope !== Constants.openidScope && scope !== Constants.profileScope);\r\n        });\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Removes clientId from scopes array if included as only scope. If it's not the only scope, it is treated as a resource scope.\r\n     * @param scopes Array<string>: Pre-normalized scopes array\r\n     * @param clientId string: The application's clientId that is searched for in the scopes array\r\n     */\r\n    ScopeSet.translateClientIdIfSingleScope = function (scopes, clientId) {\r\n        return this.onlyContainsClientId(scopes, clientId) ? Constants.oidcScopes : scopes;\r\n    };\r\n    return ScopeSet;\r\n}());\r\nexport { ScopeSet };\r\n//# sourceMappingURL=ScopeSet.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { Constants, SSOTypes, ServerHashParamKeys } from \"./Constants\";\r\nimport { ScopeSet } from \"../ScopeSet\";\r\nimport { StringUtils } from \"./StringUtils\";\r\nimport { CryptoUtils } from \"./CryptoUtils\";\r\n/**\r\n * @hidden\r\n */\r\nvar UrlUtils = /** @class */ (function () {\r\n    function UrlUtils() {\r\n    }\r\n    /**\r\n     * generates the URL with QueryString Parameters\r\n     * @param scopes\r\n     */\r\n    UrlUtils.createNavigateUrl = function (serverRequestParams) {\r\n        var str = this.createNavigationUrlString(serverRequestParams);\r\n        var authEndpoint = serverRequestParams.authorityInstance.AuthorizationEndpoint;\r\n        // if the endpoint already has queryparams, lets add to it, otherwise add the first one\r\n        if (authEndpoint.indexOf(\"?\") < 0) {\r\n            authEndpoint += \"?\";\r\n        }\r\n        else {\r\n            authEndpoint += \"&\";\r\n        }\r\n        var requestUrl = \"\" + authEndpoint + str.join(\"&\");\r\n        return requestUrl;\r\n    };\r\n    /**\r\n     * Generate the array of all QueryStringParams to be sent to the server\r\n     * @param scopes\r\n     */\r\n    UrlUtils.createNavigationUrlString = function (serverRequestParams) {\r\n        var scopes = ScopeSet.appendDefaultScopes(serverRequestParams.scopes);\r\n        var str = [];\r\n        str.push(\"response_type=\" + serverRequestParams.responseType);\r\n        str.push(\"scope=\" + encodeURIComponent(ScopeSet.parseScope(scopes)));\r\n        str.push(\"client_id=\" + encodeURIComponent(serverRequestParams.clientId));\r\n        str.push(\"redirect_uri=\" + encodeURIComponent(serverRequestParams.redirectUri));\r\n        str.push(\"state=\" + encodeURIComponent(serverRequestParams.state));\r\n        str.push(\"nonce=\" + encodeURIComponent(serverRequestParams.nonce));\r\n        str.push(\"client_info=1\");\r\n        str.push(\"x-client-SKU=\" + serverRequestParams.xClientSku);\r\n        str.push(\"x-client-Ver=\" + serverRequestParams.xClientVer);\r\n        if (serverRequestParams.promptValue) {\r\n            str.push(\"prompt=\" + encodeURIComponent(serverRequestParams.promptValue));\r\n        }\r\n        if (serverRequestParams.claimsValue) {\r\n            str.push(\"claims=\" + encodeURIComponent(serverRequestParams.claimsValue));\r\n        }\r\n        if (serverRequestParams.queryParameters) {\r\n            str.push(serverRequestParams.queryParameters);\r\n        }\r\n        if (serverRequestParams.extraQueryParameters) {\r\n            str.push(serverRequestParams.extraQueryParameters);\r\n        }\r\n        str.push(\"client-request-id=\" + encodeURIComponent(serverRequestParams.correlationId));\r\n        return str;\r\n    };\r\n    /**\r\n     * Returns current window URL as redirect uri\r\n     */\r\n    UrlUtils.getCurrentUrl = function () {\r\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n    };\r\n    /**\r\n     * Returns given URL with query string removed\r\n     */\r\n    UrlUtils.removeHashFromUrl = function (url) {\r\n        return url.split(\"#\")[0];\r\n    };\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    UrlUtils.replaceTenantPath = function (url, tenantId) {\r\n        var lowerCaseUrl = url.toLowerCase();\r\n        var urlObject = this.GetUrlComponents(lowerCaseUrl);\r\n        var pathArray = urlObject.PathSegments;\r\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === Constants.common || pathArray[0] === SSOTypes.ORGANIZATIONS || pathArray[0] === SSOTypes.CONSUMERS))) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return this.constructAuthorityUriFromObject(urlObject, pathArray);\r\n    };\r\n    UrlUtils.constructAuthorityUriFromObject = function (urlObject, pathArray) {\r\n        return this.CanonicalizeUri(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + pathArray.join(\"/\"));\r\n    };\r\n    /**\r\n     * Checks if an authority is common (ex. https://a:b/common/)\r\n     * @param url The url\r\n     * @returns true if authority is common and false otherwise\r\n     */\r\n    UrlUtils.isCommonAuthority = function (url) {\r\n        var authority = this.CanonicalizeUri(url);\r\n        var pathArray = this.GetUrlComponents(authority).PathSegments;\r\n        return (pathArray.length !== 0 && pathArray[0] === Constants.common);\r\n    };\r\n    /**\r\n     * Checks if an authority is for organizations (ex. https://a:b/organizations/)\r\n     * @param url The url\r\n     * @returns true if authority is for  and false otherwise\r\n     */\r\n    UrlUtils.isOrganizationsAuthority = function (url) {\r\n        var authority = this.CanonicalizeUri(url);\r\n        var pathArray = this.GetUrlComponents(authority).PathSegments;\r\n        return (pathArray.length !== 0 && pathArray[0] === SSOTypes.ORGANIZATIONS);\r\n    };\r\n    /**\r\n     * Checks if an authority is for consumers (ex. https://a:b/consumers/)\r\n     * @param url The url\r\n     * @returns true if authority is for  and false otherwise\r\n     */\r\n    UrlUtils.isConsumersAuthority = function (url) {\r\n        var authority = this.CanonicalizeUri(url);\r\n        var pathArray = this.GetUrlComponents(authority).PathSegments;\r\n        return (pathArray.length !== 0 && pathArray[0] === SSOTypes.CONSUMERS);\r\n    };\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    UrlUtils.GetUrlComponents = function (url) {\r\n        if (!url) {\r\n            throw \"Url required\";\r\n        }\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        var match = url.match(regEx);\r\n        if (!match || match.length < 6) {\r\n            throw \"Valid url required\";\r\n        }\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        if (match[6]) {\r\n            urlComponents.Search = match[6];\r\n        }\r\n        if (match[8]) {\r\n            urlComponents.Hash = match[8];\r\n        }\r\n        return urlComponents;\r\n    };\r\n    /**\r\n     * Given a url or path, append a trailing slash if one doesnt exist\r\n     *\r\n     * @param url\r\n     */\r\n    UrlUtils.CanonicalizeUri = function (url) {\r\n        if (url) {\r\n            var lowerCaseUrl = url.toLowerCase();\r\n            if (!UrlUtils.endsWith(lowerCaseUrl, \"/\")) {\r\n                lowerCaseUrl += \"/\";\r\n            }\r\n            return lowerCaseUrl;\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Checks to see if the url ends with the suffix\r\n     * Required because we are compiling for es5 instead of es6\r\n     * @param url\r\n     * @param str\r\n     */\r\n    // TODO: Rename this, not clear what it is supposed to do\r\n    UrlUtils.endsWith = function (url, suffix) {\r\n        if (!url || !suffix) {\r\n            return false;\r\n        }\r\n        return url.indexOf(suffix, url.length - suffix.length) !== -1;\r\n    };\r\n    /**\r\n     * Utils function to remove the login_hint and domain_hint from the i/p extraQueryParameters\r\n     * @param url\r\n     * @param name\r\n     */\r\n    UrlUtils.urlRemoveQueryStringParameter = function (url, name) {\r\n        if (StringUtils.isEmpty(url)) {\r\n            return url;\r\n        }\r\n        var updatedUrl = url;\r\n        var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\r\n        updatedUrl = url.replace(regex, \"\");\r\n        // name=value&\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\r\n        updatedUrl = url.replace(regex, \"\");\r\n        // name=value\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\r\n        updatedUrl = url.replace(regex, \"\");\r\n        return updatedUrl;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * Returns the anchor part(#) of the URL\r\n     */\r\n    UrlUtils.getHashFromUrl = function (urlStringOrFragment) {\r\n        var hashIndex1 = urlStringOrFragment.indexOf(\"#\");\r\n        var hashIndex2 = urlStringOrFragment.indexOf(\"#/\");\r\n        if (hashIndex2 > -1) {\r\n            return urlStringOrFragment.substring(hashIndex2 + 2);\r\n        }\r\n        else if (hashIndex1 > -1) {\r\n            return urlStringOrFragment.substring(hashIndex1 + 1);\r\n        }\r\n        return urlStringOrFragment;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Check if the url contains a hash with known properties\r\n     * @ignore\r\n     */\r\n    UrlUtils.urlContainsHash = function (urlString) {\r\n        var parameters = UrlUtils.deserializeHash(urlString);\r\n        return (parameters.hasOwnProperty(ServerHashParamKeys.ERROR_DESCRIPTION) ||\r\n            parameters.hasOwnProperty(ServerHashParamKeys.ERROR) ||\r\n            parameters.hasOwnProperty(ServerHashParamKeys.ACCESS_TOKEN) ||\r\n            parameters.hasOwnProperty(ServerHashParamKeys.ID_TOKEN));\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Returns deserialized portion of URL hash\r\n     * @ignore\r\n     */\r\n    UrlUtils.deserializeHash = function (urlFragment) {\r\n        var hash = UrlUtils.getHashFromUrl(urlFragment);\r\n        return CryptoUtils.deserialize(hash);\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @param {string} URI\r\n     * @returns {string} host from the URI\r\n     *\r\n     * extract URI from the host\r\n     */\r\n    UrlUtils.getHostFromUri = function (uri) {\r\n        // remove http:// or https:// from uri\r\n        var extractedUri = String(uri).replace(/^(https?:)\\/\\//, \"\");\r\n        extractedUri = extractedUri.split(\"/\")[0];\r\n        return extractedUri;\r\n    };\r\n    return UrlUtils;\r\n}());\r\nexport { UrlUtils };\r\n//# sourceMappingURL=UrlUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\r\nimport { UrlUtils } from \"../utils/UrlUtils\";\r\n/**\r\n * @hidden\r\n */\r\nvar AccessTokenKey = /** @class */ (function () {\r\n    function AccessTokenKey(authority, clientId, scopes, uid, utid) {\r\n        this.authority = UrlUtils.CanonicalizeUri(authority);\r\n        this.clientId = clientId;\r\n        this.scopes = scopes;\r\n        this.homeAccountIdentifier = CryptoUtils.base64Encode(uid) + \".\" + CryptoUtils.base64Encode(utid);\r\n    }\r\n    return AccessTokenKey;\r\n}());\r\nexport { AccessTokenKey };\r\n//# sourceMappingURL=AccessTokenKey.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar AccessTokenValue = /** @class */ (function () {\r\n    function AccessTokenValue(accessToken, idToken, expiresIn, homeAccountIdentifier) {\r\n        this.accessToken = accessToken;\r\n        this.idToken = idToken;\r\n        this.expiresIn = expiresIn;\r\n        this.homeAccountIdentifier = homeAccountIdentifier;\r\n    }\r\n    return AccessTokenValue;\r\n}());\r\nexport { AccessTokenValue };\r\n//# sourceMappingURL=AccessTokenValue.js.map","/* eslint-disable header/header */\r\nexport var name = \"msal\";\r\nexport var version = \"1.4.18\";\r\n//# sourceMappingURL=packageMetadata.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __spreadArrays } from \"tslib\";\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { SSOTypes, Constants, PromptState, ResponseTypes } from \"./utils/Constants\";\r\nimport { ScopeSet } from \"./ScopeSet\";\r\nimport { version as libraryVersion } from \"./packageMetadata\";\r\n/**\r\n * Nonce: OIDC Nonce definition: https://openid.net/specs/openid-connect-core-1_0.html#IDToken\r\n * State: OAuth Spec: https://tools.ietf.org/html/rfc6749#section-10.12\r\n * @hidden\r\n */\r\nvar ServerRequestParameters = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param authority\r\n     * @param clientId\r\n     * @param scope\r\n     * @param responseType\r\n     * @param redirectUri\r\n     * @param state\r\n     */\r\n    function ServerRequestParameters(authority, clientId, responseType, redirectUri, scopes, state, correlationId) {\r\n        this.authorityInstance = authority;\r\n        this.clientId = clientId;\r\n        this.nonce = CryptoUtils.createNewGuid();\r\n        // set scope to clientId if null\r\n        this.scopes = scopes ? __spreadArrays(scopes) : Constants.oidcScopes;\r\n        this.scopes = ScopeSet.trimScopes(this.scopes);\r\n        // set state (already set at top level)\r\n        this.state = state;\r\n        // set correlationId\r\n        this.correlationId = correlationId;\r\n        // telemetry information\r\n        this.xClientSku = \"MSAL.JS\";\r\n        this.xClientVer = libraryVersion;\r\n        this.responseType = responseType;\r\n        this.redirectUri = redirectUri;\r\n    }\r\n    Object.defineProperty(ServerRequestParameters.prototype, \"authority\", {\r\n        get: function () {\r\n            return this.authorityInstance ? this.authorityInstance.CanonicalAuthority : null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * Utility to populate QueryParameters and ExtraQueryParameters to ServerRequestParamerers\r\n     * @param request\r\n     * @param serverAuthenticationRequest\r\n     */\r\n    ServerRequestParameters.prototype.populateQueryParams = function (account, request, adalIdTokenObject, silentCall) {\r\n        var queryParameters = {};\r\n        if (request) {\r\n            // add the prompt parameter to serverRequestParameters if passed\r\n            if (request.prompt) {\r\n                this.promptValue = request.prompt;\r\n            }\r\n            // Add claims challenge to serverRequestParameters if passed\r\n            if (request.claimsRequest) {\r\n                this.claimsValue = request.claimsRequest;\r\n            }\r\n            // if the developer provides one of these, give preference to developer choice\r\n            if (ServerRequestParameters.isSSOParam(request)) {\r\n                queryParameters = this.constructUnifiedCacheQueryParameter(request, null);\r\n            }\r\n        }\r\n        if (adalIdTokenObject) {\r\n            queryParameters = this.constructUnifiedCacheQueryParameter(null, adalIdTokenObject);\r\n        }\r\n        /*\r\n         * adds sid/login_hint if not populated\r\n         * this.logger.verbose(\"Calling addHint parameters\");\r\n         */\r\n        queryParameters = this.addHintParameters(account, queryParameters);\r\n        // sanity check for developer passed extraQueryParameters\r\n        var eQParams = request ? request.extraQueryParameters : null;\r\n        // Populate the extraQueryParameters to be sent to the server\r\n        this.queryParameters = ServerRequestParameters.generateQueryParametersString(queryParameters);\r\n        this.extraQueryParameters = ServerRequestParameters.generateQueryParametersString(eQParams, silentCall);\r\n    };\r\n    // #region QueryParam helpers\r\n    /**\r\n     * Constructs extraQueryParameters to be sent to the server for the AuthenticationParameters set by the developer\r\n     * in any login() or acquireToken() calls\r\n     * @param idTokenObject\r\n     * @param extraQueryParameters\r\n     * @param sid\r\n     * @param loginHint\r\n     */\r\n    // TODO: check how this behaves when domain_hint only is sent in extraparameters and idToken has no upn.\r\n    ServerRequestParameters.prototype.constructUnifiedCacheQueryParameter = function (request, idTokenObject) {\r\n        var _a;\r\n        // preference order: account > sid > login_hint\r\n        var ssoType;\r\n        var ssoData;\r\n        var serverReqParam = {};\r\n        // if account info is passed, account.login_hint claim > account.sid > account.username\r\n        if (request) {\r\n            if (request.account) {\r\n                var account = request.account;\r\n                if ((_a = account.idTokenClaims) === null || _a === void 0 ? void 0 : _a.login_hint) {\r\n                    ssoType = SSOTypes.LOGIN_HINT;\r\n                    ssoData = account.idTokenClaims.login_hint;\r\n                }\r\n                else if (account.sid) {\r\n                    ssoType = SSOTypes.SID;\r\n                    ssoData = account.sid;\r\n                }\r\n                else if (account.userName) {\r\n                    ssoType = SSOTypes.LOGIN_HINT;\r\n                    ssoData = account.userName;\r\n                }\r\n            }\r\n            // sid from request\r\n            else if (request.sid) {\r\n                ssoType = SSOTypes.SID;\r\n                ssoData = request.sid;\r\n            }\r\n            // loginHint from request\r\n            else if (request.loginHint) {\r\n                ssoType = SSOTypes.LOGIN_HINT;\r\n                ssoData = request.loginHint;\r\n            }\r\n        }\r\n        // adalIdToken retrieved from cache\r\n        else if (idTokenObject) {\r\n            if (idTokenObject.hasOwnProperty(Constants.upn)) {\r\n                ssoType = SSOTypes.ID_TOKEN;\r\n                ssoData = idTokenObject[\"upn\"];\r\n            }\r\n        }\r\n        serverReqParam = this.addSSOParameter(ssoType, ssoData);\r\n        return serverReqParam;\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time\r\n     * domain_hint if added skips the email based discovery process of the user - only supported for interactive calls in implicit_flow\r\n     * domain_req utid received as part of the clientInfo\r\n     * login_req uid received as part of clientInfo\r\n     * Also does a sanity check for extraQueryParameters passed by the user to ensure no repeat queryParameters\r\n     *\r\n     * @param {@link Account} account - Account for which the token is requested\r\n     * @param queryparams\r\n     * @param {@link ServerRequestParameters}\r\n     * @ignore\r\n     */\r\n    ServerRequestParameters.prototype.addHintParameters = function (account, params) {\r\n        var _a, _b;\r\n        /*\r\n         * This is a final check for all queryParams added so far; preference order: sid > login_hint\r\n         * sid cannot be passed along with login_hint or domain_hint, hence we check both are not populated yet in queryParameters\r\n         */\r\n        var qParams = params;\r\n        if (account) {\r\n            if (!qParams[SSOTypes.SID] && !qParams[SSOTypes.LOGIN_HINT]) {\r\n                if ((_a = account.idTokenClaims) === null || _a === void 0 ? void 0 : _a.login_hint) {\r\n                    // Use login_hint claim if available over sid or email/upn\r\n                    qParams = this.addSSOParameter(SSOTypes.LOGIN_HINT, (_b = account.idTokenClaims) === null || _b === void 0 ? void 0 : _b.login_hint, qParams);\r\n                }\r\n                else if (account.sid && this.promptValue === PromptState.NONE) {\r\n                    // sid - populate only if login_hint is not already populated and the account has sid\r\n                    qParams = this.addSSOParameter(SSOTypes.SID, account.sid, qParams);\r\n                }\r\n                else if (account.userName) {\r\n                    // Add username/upn as loginHint if nothing else available\r\n                    qParams = this.addSSOParameter(SSOTypes.LOGIN_HINT, account.userName, qParams);\r\n                }\r\n            }\r\n        }\r\n        return qParams;\r\n    };\r\n    /**\r\n     * Add SID to extraQueryParameters\r\n     * @param sid\r\n     */\r\n    ServerRequestParameters.prototype.addSSOParameter = function (ssoType, ssoData, params) {\r\n        var ssoParam = params || {};\r\n        if (!ssoData) {\r\n            return ssoParam;\r\n        }\r\n        switch (ssoType) {\r\n            case SSOTypes.SID: {\r\n                ssoParam[SSOTypes.SID] = ssoData;\r\n                break;\r\n            }\r\n            case SSOTypes.ID_TOKEN: {\r\n                ssoParam[SSOTypes.LOGIN_HINT] = ssoData;\r\n                break;\r\n            }\r\n            case SSOTypes.LOGIN_HINT: {\r\n                ssoParam[SSOTypes.LOGIN_HINT] = ssoData;\r\n                break;\r\n            }\r\n        }\r\n        return ssoParam;\r\n    };\r\n    /**\r\n     * Utility to generate a QueryParameterString from a Key-Value mapping of extraQueryParameters passed\r\n     * @param extraQueryParameters\r\n     */\r\n    ServerRequestParameters.generateQueryParametersString = function (queryParameters, silentCall) {\r\n        var paramsString = null;\r\n        if (queryParameters) {\r\n            Object.keys(queryParameters).forEach(function (key) {\r\n                // sid cannot be passed along with login_hint or domain_hint\r\n                if (key === Constants.domain_hint && (silentCall || queryParameters[SSOTypes.SID])) {\r\n                    return;\r\n                }\r\n                if (!paramsString) {\r\n                    paramsString = key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n                else {\r\n                    paramsString += \"&\" + key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n            });\r\n        }\r\n        return paramsString;\r\n    };\r\n    // #endregion\r\n    /**\r\n     * Check to see if there are SSO params set in the Request\r\n     * @param request\r\n     */\r\n    ServerRequestParameters.isSSOParam = function (request) {\r\n        return !!(request && (request.account || request.sid || request.loginHint));\r\n    };\r\n    /**\r\n     * Returns the correct response_type string attribute for an acquireToken request configuration\r\n     * @param accountsMatch boolean: Determines whether the account in the request matches the cached account\r\n     * @param scopes Array<string>: AuthenticationRequest scopes configuration\r\n     * @param loginScopesOnly boolean: True if the scopes array ONLY contains the clientId or any combination of OIDC scopes, without resource scopes\r\n     */\r\n    ServerRequestParameters.determineResponseType = function (accountsMatch, scopes) {\r\n        // Supports getting an id_token by sending in clientId as only scope or OIDC scopes as only scopes\r\n        if (ScopeSet.onlyContainsOidcScopes(scopes)) {\r\n            return ResponseTypes.id_token;\r\n        }\r\n        // If accounts match, check if OIDC scopes are included, otherwise return id_token_token\r\n        return (accountsMatch) ? this.responseTypeForMatchingAccounts(scopes) : ResponseTypes.id_token_token;\r\n    };\r\n    /**\r\n     * Returns the correct response_type string attribute for an acquireToken request configuration that contains an\r\n     * account that matches the account in the MSAL cache.\r\n     * @param scopes Array<string>: AuthenticationRequest scopes configuration\r\n     */\r\n    ServerRequestParameters.responseTypeForMatchingAccounts = function (scopes) {\r\n        // Opt-into also requesting an ID token by sending in 'openid', 'profile' or both along with resource scopes when login is not necessary.\r\n        return (ScopeSet.containsAnyOidcScopes(scopes)) ? ResponseTypes.id_token_token : ResponseTypes.token;\r\n    };\r\n    return ServerRequestParameters;\r\n}());\r\nexport { ServerRequestParameters };\r\n//# sourceMappingURL=ServerRequestParameters.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { NetworkRequestType } from \"./utils/Constants\";\r\n/**\r\n * XHR client for JSON endpoints\r\n * https://www.npmjs.com/package/async-promise\r\n * @hidden\r\n */\r\nvar XhrClient = /** @class */ (function () {\r\n    function XhrClient() {\r\n    }\r\n    XhrClient.prototype.sendRequestAsync = function (url, method, enableCaching) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, /* async: */ true);\r\n            if (enableCaching) {\r\n                /*\r\n                 * TODO: (shivb) ensure that this can be cached\r\n                 * xhr.setRequestHeader(\"Cache-Control\", \"Public\");\r\n                 */\r\n            }\r\n            xhr.onload = function () {\r\n                if (xhr.status < 200 || xhr.status >= 300) {\r\n                    reject(_this.handleError(xhr.responseText));\r\n                }\r\n                var jsonResponse;\r\n                try {\r\n                    jsonResponse = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (e) {\r\n                    reject(_this.handleError(xhr.responseText));\r\n                }\r\n                var response = {\r\n                    statusCode: xhr.status,\r\n                    body: jsonResponse\r\n                };\r\n                resolve(response);\r\n            };\r\n            xhr.onerror = function () {\r\n                reject(xhr.status);\r\n            };\r\n            if (method === NetworkRequestType.GET) {\r\n                xhr.send();\r\n            }\r\n            else {\r\n                throw \"not implemented\";\r\n            }\r\n        });\r\n    };\r\n    XhrClient.prototype.handleError = function (responseText) {\r\n        var jsonResponse;\r\n        try {\r\n            jsonResponse = JSON.parse(responseText);\r\n            if (jsonResponse[\"error\"]) {\r\n                return jsonResponse[\"error\"];\r\n            }\r\n            else {\r\n                throw responseText;\r\n            }\r\n        }\r\n        catch (e) {\r\n            return responseText;\r\n        }\r\n    };\r\n    return XhrClient;\r\n}());\r\nexport { XhrClient };\r\n//# sourceMappingURL=XHRClient.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { XhrClient } from \"../XHRClient\";\r\nimport { AAD_INSTANCE_DISCOVERY_ENDPOINT, NetworkRequestType } from \"../utils/Constants\";\r\nimport { UrlUtils } from \"../utils/UrlUtils\";\r\nvar TrustedAuthority = /** @class */ (function () {\r\n    function TrustedAuthority() {\r\n    }\r\n    /**\r\n     *\r\n     * @param validateAuthority\r\n     * @param knownAuthorities\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromConfig = function (validateAuthority, knownAuthorities) {\r\n        if (validateAuthority && !this.getTrustedHostList().length) {\r\n            knownAuthorities.forEach(function (authority) {\r\n                TrustedAuthority.TrustedHostList.push(authority.toLowerCase());\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param telemetryManager\r\n     * @param correlationId\r\n     */\r\n    TrustedAuthority.getAliases = function (authorityToVerify, telemetryManager, correlationId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var client, httpMethod, instanceDiscoveryEndpoint, httpEvent;\r\n            return __generator(this, function (_a) {\r\n                client = new XhrClient();\r\n                httpMethod = NetworkRequestType.GET;\r\n                instanceDiscoveryEndpoint = \"\" + AAD_INSTANCE_DISCOVERY_ENDPOINT + authorityToVerify + \"oauth2/v2.0/authorize\";\r\n                httpEvent = telemetryManager.createAndStartHttpEvent(correlationId, httpMethod, instanceDiscoveryEndpoint, \"getAliases\");\r\n                return [2 /*return*/, client.sendRequestAsync(instanceDiscoveryEndpoint, httpMethod, true)\r\n                        .then(function (response) {\r\n                        httpEvent.httpResponseStatus = response.statusCode;\r\n                        telemetryManager.stopEvent(httpEvent);\r\n                        return response.body[\"metadata\"];\r\n                    })\r\n                        .catch(function (err) {\r\n                        httpEvent.serverErrorCode = err;\r\n                        telemetryManager.stopEvent(httpEvent);\r\n                        throw err;\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param telemetryManager\r\n     * @param correlationId\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromNetwork = function (authorityToVerify, telemetryManager, correlationId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var metadata, host;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAliases(authorityToVerify, telemetryManager, correlationId)];\r\n                    case 1:\r\n                        metadata = _a.sent();\r\n                        metadata.forEach(function (entry) {\r\n                            var authorities = entry[\"aliases\"];\r\n                            authorities.forEach(function (authority) {\r\n                                TrustedAuthority.TrustedHostList.push(authority.toLowerCase());\r\n                            });\r\n                        });\r\n                        host = UrlUtils.GetUrlComponents(authorityToVerify).HostNameAndPort;\r\n                        if (TrustedAuthority.getTrustedHostList().length && !TrustedAuthority.IsInTrustedHostList(host)) {\r\n                            // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\r\n                            TrustedAuthority.TrustedHostList.push(host.toLowerCase());\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TrustedAuthority.getTrustedHostList = function () {\r\n        return this.TrustedHostList;\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param host\r\n     */\r\n    TrustedAuthority.IsInTrustedHostList = function (host) {\r\n        return this.TrustedHostList.indexOf(host.toLowerCase()) > -1;\r\n    };\r\n    TrustedAuthority.TrustedHostList = [];\r\n    return TrustedAuthority;\r\n}());\r\nexport { TrustedAuthority };\r\n//# sourceMappingURL=TrustedAuthority.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\nimport { version as libraryVersion } from \"./packageMetadata\";\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n})(LogLevel || (LogLevel = {}));\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(localCallback, options) {\r\n        if (options === void 0) { options = {}; }\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.level = LogLevel.Info;\r\n        var _a = options.correlationId, correlationId = _a === void 0 ? \"\" : _a, _b = options.level, level = _b === void 0 ? LogLevel.Info : _b, _c = options.piiLoggingEnabled, piiLoggingEnabled = _c === void 0 ? false : _c;\r\n        this.localCallback = localCallback;\r\n        this.correlationId = correlationId;\r\n        this.level = level;\r\n        this.piiLoggingEnabled = piiLoggingEnabled;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.logMessage = function (logLevel, logMessage, containsPii) {\r\n        if ((logLevel > this.level) || (!this.piiLoggingEnabled && containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        var log;\r\n        if (!StringUtils.isEmpty(this.correlationId)) {\r\n            log = timestamp + \":\" + this.correlationId + \"-\" + libraryVersion + \"-\" + LogLevel[logLevel] + (containsPii ? \"-pii\" : \"\") + \" \" + logMessage;\r\n        }\r\n        else {\r\n            log = timestamp + \":\" + libraryVersion + \"-\" + LogLevel[logLevel] + (containsPii ? \"-pii\" : \"\") + \" \" + logMessage;\r\n        }\r\n        this.executeCallback(logLevel, log, containsPii);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.error = function (message) {\r\n        this.logMessage(LogLevel.Error, message, false);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.errorPii = function (message) {\r\n        this.logMessage(LogLevel.Error, message, true);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.warning = function (message) {\r\n        this.logMessage(LogLevel.Warning, message, false);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.warningPii = function (message) {\r\n        this.logMessage(LogLevel.Warning, message, true);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.info = function (message) {\r\n        this.logMessage(LogLevel.Info, message, false);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.infoPii = function (message) {\r\n        this.logMessage(LogLevel.Info, message, true);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.verbose = function (message) {\r\n        this.logMessage(LogLevel.Verbose, message, false);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    Logger.prototype.verbosePii = function (message) {\r\n        this.logMessage(LogLevel.Verbose, message, true);\r\n    };\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled;\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\n//# sourceMappingURL=Logger.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { ClientAuthError } from \"./error/ClientAuthError\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\n/**\r\n * @hidden\r\n */\r\nvar ClientInfo = /** @class */ (function () {\r\n    function ClientInfo(rawClientInfo, authority) {\r\n        if (!rawClientInfo || StringUtils.isEmpty(rawClientInfo)) {\r\n            this.uid = \"\";\r\n            this.utid = \"\";\r\n            return;\r\n        }\r\n        try {\r\n            var decodedClientInfo = CryptoUtils.base64Decode(rawClientInfo);\r\n            var clientInfo = JSON.parse(decodedClientInfo);\r\n            if (clientInfo) {\r\n                if (clientInfo.hasOwnProperty(\"uid\")) {\r\n                    this.uid = authority ? ClientInfo.stripPolicyFromUid(clientInfo.uid, authority) : clientInfo.uid;\r\n                }\r\n                if (clientInfo.hasOwnProperty(\"utid\")) {\r\n                    this.utid = clientInfo.utid;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createClientInfoDecodingError(e);\r\n        }\r\n    }\r\n    Object.defineProperty(ClientInfo.prototype, \"uid\", {\r\n        get: function () {\r\n            return this._uid ? this._uid : \"\";\r\n        },\r\n        set: function (uid) {\r\n            this._uid = uid;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientInfo.prototype, \"utid\", {\r\n        get: function () {\r\n            return this._utid ? this._utid : \"\";\r\n        },\r\n        set: function (utid) {\r\n            this._utid = utid;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ClientInfo.createClientInfoFromIdToken = function (idToken, authority) {\r\n        var clientInfo = {\r\n            uid: idToken.subject,\r\n            utid: \"\"\r\n        };\r\n        return new ClientInfo(CryptoUtils.base64Encode(JSON.stringify(clientInfo)), authority);\r\n    };\r\n    ClientInfo.stripPolicyFromUid = function (uid, authority) {\r\n        var uidSegments = uid.split(\"-\");\r\n        // Reverse the url segments so the last one is more easily accessible\r\n        var urlSegments = authority.split(\"/\").reverse();\r\n        var policy = \"\";\r\n        if (!StringUtils.isEmpty(urlSegments[0])) {\r\n            policy = urlSegments[0];\r\n        }\r\n        else if (urlSegments.length > 1) {\r\n            // If the original url had a trailing slash, urlSegments[0] would be \"\" so take the next element\r\n            policy = urlSegments[1];\r\n        }\r\n        if (uidSegments[uidSegments.length - 1] === policy) {\r\n            // If the last segment of uid matches the last segment of authority url, remove the last segment of uid\r\n            return uidSegments.slice(0, uidSegments.length - 1).join(\"-\");\r\n        }\r\n        return uid;\r\n    };\r\n    ClientInfo.prototype.encodeClientInfo = function () {\r\n        var clientInfo = JSON.stringify({ uid: this.uid, utid: this.utid });\r\n        return CryptoUtils.base64Encode(clientInfo);\r\n    };\r\n    return ClientInfo;\r\n}());\r\nexport { ClientInfo };\r\n//# sourceMappingURL=ClientInfo.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar TimeUtils = /** @class */ (function () {\r\n    function TimeUtils() {\r\n    }\r\n    /**\r\n     * Returns time in seconds for expiration based on string value passed in.\r\n     *\r\n     * @param expiresIn\r\n     */\r\n    TimeUtils.parseExpiresIn = function (expiresIn) {\r\n        // if AAD did not send \"expires_in\" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as \"expires_in\" value instead of 3600\r\n        var expires = expiresIn || \"3599\";\r\n        return parseInt(expires, 10);\r\n    };\r\n    /**\r\n     * Return the current time in Unix time (seconds). Date.getTime() returns in milliseconds.\r\n     */\r\n    TimeUtils.now = function () {\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    /**\r\n     * Returns the amount of time in milliseconds since the page loaded.\r\n     */\r\n    TimeUtils.relativeNowMs = function () {\r\n        return window.performance.now();\r\n    };\r\n    return TimeUtils;\r\n}());\r\nexport { TimeUtils };\r\n//# sourceMappingURL=TimeUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { CryptoUtils } from \"./CryptoUtils\";\r\nimport { StringUtils } from \"./StringUtils\";\r\nimport { TimeUtils } from \"./TimeUtils\";\r\n/**\r\n * @hidden\r\n */\r\nvar TokenUtils = /** @class */ (function () {\r\n    function TokenUtils() {\r\n    }\r\n    /**\r\n     * decode a JWT\r\n     *\r\n     * @param jwtToken\r\n     */\r\n    TokenUtils.decodeJwt = function (jwtToken) {\r\n        if (StringUtils.isEmpty(jwtToken)) {\r\n            return null;\r\n        }\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            // this._requestContext.logger.warn(\"The returned id_token is not parseable.\");\r\n            return null;\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    /**\r\n     * Evaluates whether token cache item expiration is within expiration offset range\r\n     * @param tokenCacheItem\r\n     */\r\n    TokenUtils.validateExpirationIsWithinOffset = function (expiration, tokenRenewalOffsetSeconds) {\r\n        var offset = tokenRenewalOffsetSeconds || 300;\r\n        return expiration && (expiration > TimeUtils.now() + offset);\r\n    };\r\n    /**\r\n     * Extract IdToken by decoding the RAWIdToken\r\n     *\r\n     * @param encodedIdToken\r\n     */\r\n    TokenUtils.extractIdToken = function (encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = this.decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            var base64IdToken = decodedToken[\"JWSPayload\"];\r\n            var base64Decoded = CryptoUtils.base64Decode(base64IdToken);\r\n            if (!base64Decoded) {\r\n                // this._requestContext.logger.info(\"The returned id_token could not be base64 url safe decoded.\");\r\n                return null;\r\n            }\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            // this._requestContext.logger.error(\"The returned id_token could not be decoded\" + err);\r\n        }\r\n        return null;\r\n    };\r\n    return TokenUtils;\r\n}());\r\nexport { TokenUtils };\r\n//# sourceMappingURL=TokenUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ClientAuthError } from \"./error/ClientAuthError\";\r\nimport { TokenUtils } from \"./utils/TokenUtils\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\n/**\r\n * @hidden\r\n */\r\nvar IdToken = /** @class */ (function () {\r\n    /* tslint:disable:no-string-literal */\r\n    function IdToken(rawIdToken) {\r\n        if (StringUtils.isEmpty(rawIdToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\r\n        }\r\n        try {\r\n            this.rawIdToken = rawIdToken;\r\n            this.claims = TokenUtils.extractIdToken(rawIdToken);\r\n            if (this.claims) {\r\n                if (this.claims.hasOwnProperty(\"iss\")) {\r\n                    this.issuer = this.claims[\"iss\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"oid\")) {\r\n                    this.objectId = this.claims[\"oid\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"sub\")) {\r\n                    this.subject = this.claims[\"sub\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"tid\")) {\r\n                    this.tenantId = this.claims[\"tid\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"ver\")) {\r\n                    this.version = this.claims[\"ver\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"preferred_username\")) {\r\n                    this.preferredName = this.claims[\"preferred_username\"];\r\n                }\r\n                else if (this.claims.hasOwnProperty(\"upn\")) {\r\n                    this.preferredName = this.claims[\"upn\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"name\")) {\r\n                    this.name = this.claims[\"name\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"nonce\")) {\r\n                    this.nonce = this.claims[\"nonce\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"exp\")) {\r\n                    this.expiration = this.claims[\"exp\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"home_oid\")) {\r\n                    this.homeObjectId = this.claims[\"home_oid\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"sid\")) {\r\n                    this.sid = this.claims[\"sid\"];\r\n                }\r\n                if (this.claims.hasOwnProperty(\"cloud_instance_host_name\")) {\r\n                    this.cloudInstance = this.claims[\"cloud_instance_host_name\"];\r\n                }\r\n                /* tslint:enable:no-string-literal */\r\n            }\r\n        }\r\n        catch (e) {\r\n            /*\r\n             * TODO: This error here won't really every be thrown, since extractIdToken() returns null if the decodeJwt() fails.\r\n             * Need to add better error handling here to account for being unable to decode jwts.\r\n             */\r\n            throw ClientAuthError.createIdTokenParsingError(e);\r\n        }\r\n    }\r\n    return IdToken;\r\n}());\r\nexport { IdToken };\r\n//# sourceMappingURL=IdToken.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar AccessTokenCacheItem = /** @class */ (function () {\r\n    function AccessTokenCacheItem(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    return AccessTokenCacheItem;\r\n}());\r\nexport { AccessTokenCacheItem };\r\n//# sourceMappingURL=AccessTokenCacheItem.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\r\nimport { AuthError } from \"../error/AuthError\";\r\n/**\r\n * @hidden\r\n */\r\nvar BrowserStorage = /** @class */ (function () {\r\n    function BrowserStorage(cacheLocation) {\r\n        if (!window) {\r\n            throw AuthError.createNoWindowObjectError(\"Browser storage class could not find window object\");\r\n        }\r\n        var storageSupported = typeof window[cacheLocation] !== \"undefined\" && window[cacheLocation] !== null;\r\n        if (!storageSupported) {\r\n            throw ClientConfigurationError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n        this.cacheLocation = cacheLocation;\r\n    }\r\n    /**\r\n     * add value to storage\r\n     * @param key\r\n     * @param value\r\n     * @param enableCookieStorage\r\n     */\r\n    BrowserStorage.prototype.setItem = function (key, value, enableCookieStorage) {\r\n        window[this.cacheLocation].setItem(key, value);\r\n        if (enableCookieStorage) {\r\n            this.setItemCookie(key, value);\r\n        }\r\n    };\r\n    /**\r\n     * get one item by key from storage\r\n     * @param key\r\n     * @param enableCookieStorage\r\n     */\r\n    BrowserStorage.prototype.getItem = function (key, enableCookieStorage) {\r\n        if (enableCookieStorage && this.getItemCookie(key)) {\r\n            return this.getItemCookie(key);\r\n        }\r\n        return window[this.cacheLocation].getItem(key);\r\n    };\r\n    /**\r\n     * remove value from storage\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.removeItem = function (key) {\r\n        return window[this.cacheLocation].removeItem(key);\r\n    };\r\n    /**\r\n     * clear storage (remove all items from it)\r\n     */\r\n    BrowserStorage.prototype.clear = function () {\r\n        return window[this.cacheLocation].clear();\r\n    };\r\n    /**\r\n     * add value to cookies\r\n     * @param cName\r\n     * @param cValue\r\n     * @param expires\r\n     */\r\n    BrowserStorage.prototype.setItemCookie = function (cName, cValue, expires) {\r\n        var cookieStr = encodeURIComponent(cName) + \"=\" + encodeURIComponent(cValue) + \";path=/;\";\r\n        if (expires) {\r\n            var expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += \"expires=\" + expireTime + \";\";\r\n        }\r\n        document.cookie = cookieStr;\r\n    };\r\n    /**\r\n     * get one item by key from cookies\r\n     * @param cName\r\n     */\r\n    BrowserStorage.prototype.getItemCookie = function (cName) {\r\n        var name = encodeURIComponent(cName) + \"=\";\r\n        var ca = document.cookie.split(\";\");\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === \" \") {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return decodeURIComponent(c.substring(name.length, c.length));\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cName\r\n     */\r\n    BrowserStorage.prototype.clearItemCookie = function (cName) {\r\n        this.setItemCookie(cName, \"\", -1);\r\n    };\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     */\r\n    BrowserStorage.prototype.getCookieExpirationTime = function (cookieLifeDays) {\r\n        var today = new Date();\r\n        var expr = new Date(today.getTime() + cookieLifeDays * 24 * 60 * 60 * 1000);\r\n        return expr.toUTCString();\r\n    };\r\n    return BrowserStorage;\r\n}());\r\nexport { BrowserStorage };\r\n//# sourceMappingURL=BrowserStorage.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { Constants, PromptState, DisallowedEQParams } from \"./Constants\";\r\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\r\nimport { ScopeSet } from \"../ScopeSet\";\r\nimport { StringUtils } from \"./StringUtils\";\r\nimport { CryptoUtils } from \"./CryptoUtils\";\r\nimport { TimeUtils } from \"./TimeUtils\";\r\nimport { ClientAuthError } from \"../error/ClientAuthError\";\r\n/**\r\n * @hidden\r\n */\r\nvar RequestUtils = /** @class */ (function () {\r\n    function RequestUtils() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     *\r\n     * @param request\r\n     * @param isLoginCall\r\n     * @param cacheStorage\r\n     * @param clientId\r\n     *\r\n     * validates all request parameters and generates a consumable request object\r\n     */\r\n    RequestUtils.validateRequest = function (request, isLoginCall, clientId, interactionType) {\r\n        // Throw error if request is empty for acquire * calls\r\n        if (!isLoginCall && !request) {\r\n            throw ClientConfigurationError.createEmptyRequestError();\r\n        }\r\n        var scopes;\r\n        var extraQueryParameters;\r\n        if (request) {\r\n            // if extraScopesToConsent is passed in loginCall, append them to the login request; Validate and filter scopes (the validate function will throw if validation fails)\r\n            scopes = isLoginCall ? ScopeSet.appendScopes(request.scopes, request.extraScopesToConsent) : request.scopes;\r\n            ScopeSet.validateInputScope(scopes, !isLoginCall);\r\n            scopes = ScopeSet.translateClientIdIfSingleScope(scopes, clientId);\r\n            // validate prompt parameter\r\n            this.validatePromptParameter(request.prompt);\r\n            // validate extraQueryParameters\r\n            extraQueryParameters = this.validateEQParameters(request.extraQueryParameters, request.claimsRequest);\r\n            // validate claimsRequest\r\n            this.validateClaimsRequest(request.claimsRequest);\r\n        }\r\n        // validate and generate state and correlationId\r\n        var state = this.validateAndGenerateState(request && request.state, interactionType);\r\n        var correlationId = this.validateAndGenerateCorrelationId(request && request.correlationId);\r\n        var validatedRequest = __assign(__assign({}, request), { extraQueryParameters: extraQueryParameters,\r\n            scopes: scopes,\r\n            state: state,\r\n            correlationId: correlationId });\r\n        return validatedRequest;\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * Utility to test if valid prompt value is passed in the request\r\n     * @param request\r\n     */\r\n    RequestUtils.validatePromptParameter = function (prompt) {\r\n        if (prompt) {\r\n            if ([PromptState.LOGIN, PromptState.SELECT_ACCOUNT, PromptState.CONSENT, PromptState.NONE].indexOf(prompt) < 0) {\r\n                throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n     * @param request\r\n     */\r\n    RequestUtils.validateEQParameters = function (extraQueryParameters, claimsRequest) {\r\n        var eQParams = __assign({}, extraQueryParameters);\r\n        if (!eQParams) {\r\n            return null;\r\n        }\r\n        if (claimsRequest) {\r\n            // this.logger.warning(\"Removed duplicate claims from extraQueryParameters. Please use either the claimsRequest field OR pass as extraQueryParameter - not both.\");\r\n            delete eQParams[Constants.claims];\r\n        }\r\n        DisallowedEQParams.forEach(function (param) {\r\n            if (eQParams[param]) {\r\n                // this.logger.warning(\"Removed duplicate \" + param + \" from extraQueryParameters. Please use the \" + param + \" field in request object.\");\r\n                delete eQParams[param];\r\n            }\r\n        });\r\n        return eQParams;\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * Validates the claims passed in request is a JSON\r\n     * TODO: More validation will be added when the server team tells us how they have actually implemented claims\r\n     * @param claimsRequest\r\n     */\r\n    RequestUtils.validateClaimsRequest = function (claimsRequest) {\r\n        if (!claimsRequest) {\r\n            return;\r\n        }\r\n        try {\r\n            JSON.parse(claimsRequest);\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createClaimsRequestParsingError(e);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * generate unique state per request\r\n     * @param userState User-provided state value\r\n     * @returns State string include library state and user state\r\n     */\r\n    RequestUtils.validateAndGenerateState = function (userState, interactionType) {\r\n        return !StringUtils.isEmpty(userState) ? \"\" + RequestUtils.generateLibraryState(interactionType) + Constants.resourceDelimiter + userState : RequestUtils.generateLibraryState(interactionType);\r\n    };\r\n    /**\r\n     * Generates the state value used by the library.\r\n     *\r\n     * @returns Base64 encoded string representing the state\r\n     */\r\n    RequestUtils.generateLibraryState = function (interactionType) {\r\n        var stateObject = {\r\n            id: CryptoUtils.createNewGuid(),\r\n            ts: TimeUtils.now(),\r\n            method: interactionType\r\n        };\r\n        var stateString = JSON.stringify(stateObject);\r\n        return CryptoUtils.base64Encode(stateString);\r\n    };\r\n    /**\r\n     * Decodes the state value into a StateObject\r\n     *\r\n     * @param state State value returned in the request\r\n     * @returns Parsed values from the encoded state value\r\n     */\r\n    RequestUtils.parseLibraryState = function (state) {\r\n        var libraryState = decodeURIComponent(state).split(Constants.resourceDelimiter)[0];\r\n        if (CryptoUtils.isGuid(libraryState)) {\r\n            // If state is guid, assume timestamp is now and is redirect, as redirect should be only method where this can happen.\r\n            return {\r\n                id: libraryState,\r\n                ts: TimeUtils.now(),\r\n                method: Constants.interactionTypeRedirect\r\n            };\r\n        }\r\n        try {\r\n            var stateString = CryptoUtils.base64Decode(libraryState);\r\n            var stateObject = JSON.parse(stateString);\r\n            return stateObject;\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, null);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * validate correlationId and generate if not valid or not set by the user\r\n     * @param correlationId\r\n     */\r\n    RequestUtils.validateAndGenerateCorrelationId = function (correlationId) {\r\n        // validate user set correlationId or set one for the user if null\r\n        if (correlationId && !CryptoUtils.isGuid(correlationId)) {\r\n            throw ClientConfigurationError.createInvalidCorrelationIdError();\r\n        }\r\n        return CryptoUtils.isGuid(correlationId) ? correlationId : CryptoUtils.createNewGuid();\r\n    };\r\n    /**\r\n     * Create a request signature\r\n     * @param request\r\n     */\r\n    RequestUtils.createRequestSignature = function (request) {\r\n        return \"\" + request.scopes.join(\" \").toLowerCase() + Constants.resourceDelimiter + request.authority;\r\n    };\r\n    return RequestUtils;\r\n}());\r\nexport { RequestUtils };\r\n//# sourceMappingURL=RequestUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __extends, __spreadArrays } from \"tslib\";\r\nimport { Constants, PersistentCacheKeys, TemporaryCacheKeys, ErrorCacheKeys, ServerHashParamKeys, SESSION_STORAGE } from \"../utils/Constants\";\r\nimport { AccessTokenCacheItem } from \"./AccessTokenCacheItem\";\r\nimport { BrowserStorage } from \"./BrowserStorage\";\r\nimport { RequestUtils } from \"../utils/RequestUtils\";\r\nimport { StringUtils } from \"../utils/StringUtils\";\r\nimport { IdToken } from \"../IdToken\";\r\nimport { ClientAuthError } from \"../error/ClientAuthError\";\r\n/**\r\n * @hidden\r\n */\r\nvar AuthCache = /** @class */ (function (_super) {\r\n    __extends(AuthCache, _super);\r\n    function AuthCache(clientId, cacheLocation, storeAuthStateInCookie) {\r\n        var _this = _super.call(this, cacheLocation) || this;\r\n        _this.temporaryCache = new BrowserStorage(SESSION_STORAGE);\r\n        _this.clientId = clientId;\r\n        // This is hardcoded to true for now. We may make this configurable in the future\r\n        _this.rollbackEnabled = true;\r\n        _this.migrateCacheEntries(storeAuthStateInCookie);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Support roll back to old cache schema until the next major release: true by default now\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    AuthCache.prototype.migrateCacheEntries = function (storeAuthStateInCookie) {\r\n        var _this = this;\r\n        var idTokenKey = Constants.cachePrefix + \".\" + PersistentCacheKeys.IDTOKEN;\r\n        var clientInfoKey = Constants.cachePrefix + \".\" + PersistentCacheKeys.CLIENT_INFO;\r\n        var errorKey = Constants.cachePrefix + \".\" + ErrorCacheKeys.ERROR;\r\n        var errorDescKey = Constants.cachePrefix + \".\" + ErrorCacheKeys.ERROR_DESC;\r\n        var idTokenValue = _super.prototype.getItem.call(this, idTokenKey);\r\n        var idToken;\r\n        if (idTokenValue) {\r\n            try {\r\n                idToken = new IdToken(idTokenValue);\r\n            }\r\n            catch (e) {\r\n                return;\r\n            }\r\n        }\r\n        if (idToken && idToken.claims && idToken.claims.aud === this.clientId) {\r\n            var clientInfoValue = _super.prototype.getItem.call(this, clientInfoKey);\r\n            var errorValue = _super.prototype.getItem.call(this, errorKey);\r\n            var errorDescValue = _super.prototype.getItem.call(this, errorDescKey);\r\n            var values_1 = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\r\n            var keysToMigrate = [PersistentCacheKeys.IDTOKEN, PersistentCacheKeys.CLIENT_INFO, ErrorCacheKeys.ERROR, ErrorCacheKeys.ERROR_DESC];\r\n            keysToMigrate.forEach(function (cacheKey, index) { return _this.duplicateCacheEntry(cacheKey, values_1[index], storeAuthStateInCookie); });\r\n        }\r\n    };\r\n    /**\r\n     * Utility function to help with roll back keys\r\n     * @param newKey\r\n     * @param value\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    AuthCache.prototype.duplicateCacheEntry = function (newKey, value, storeAuthStateInCookie) {\r\n        if (value) {\r\n            this.setItem(newKey, value, storeAuthStateInCookie);\r\n        }\r\n    };\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    AuthCache.prototype.generateCacheKey = function (key, addInstanceId) {\r\n        try {\r\n            // Defined schemas do not need the key appended\r\n            JSON.parse(key);\r\n            return key;\r\n        }\r\n        catch (e) {\r\n            if (key.indexOf(\"\" + Constants.cachePrefix) === 0 || key.indexOf(Constants.adalIdToken) === 0) {\r\n                return key;\r\n            }\r\n            return addInstanceId ? Constants.cachePrefix + \".\" + this.clientId + \".\" + key : Constants.cachePrefix + \".\" + key;\r\n        }\r\n    };\r\n    /**\r\n     * Validates that the input cache key contains the account search terms (clientId and homeAccountIdentifier) and\r\n     * then whether or not it contains the \"scopes\", depending on the token type being searched for. With matching account\r\n     * search terms, Access Token search tries to match the \"scopes\" keyword, while Id Token search expects \"scopes\" to not be included.\r\n     * @param key\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     * @param tokenType\r\n     */\r\n    AuthCache.prototype.matchKeyForType = function (key, clientId, homeAccountIdentifier, tokenType) {\r\n        // All valid token cache item keys are valid JSON objects, ignore keys that aren't\r\n        var parsedKey = StringUtils.validateAndParseJsonCacheKey(key);\r\n        if (!parsedKey) {\r\n            return null;\r\n        }\r\n        // Does the cache item match the request account\r\n        var accountMatches = key.match(clientId) && key.match(homeAccountIdentifier);\r\n        // Does the cache item match the requested token type\r\n        var tokenTypeMatches = false;\r\n        switch (tokenType) {\r\n            case ServerHashParamKeys.ACCESS_TOKEN:\r\n                // Cache item is an access token if scopes are included in the cache item key\r\n                tokenTypeMatches = !!key.match(Constants.scopes);\r\n                break;\r\n            case ServerHashParamKeys.ID_TOKEN:\r\n                // Cache may be an ID token if scopes are NOT included in the cache item key\r\n                tokenTypeMatches = !key.match(Constants.scopes);\r\n                break;\r\n        }\r\n        return (accountMatches && tokenTypeMatches) ? parsedKey : null;\r\n    };\r\n    /**\r\n     * add value to storage\r\n     * @param key\r\n     * @param value\r\n     * @param enableCookieStorage\r\n     */\r\n    AuthCache.prototype.setItem = function (key, value, enableCookieStorage) {\r\n        _super.prototype.setItem.call(this, this.generateCacheKey(key, true), value, enableCookieStorage);\r\n        // Values stored in cookies will have rollback disabled to minimize cookie length\r\n        if (this.rollbackEnabled && !enableCookieStorage) {\r\n            _super.prototype.setItem.call(this, this.generateCacheKey(key, false), value, enableCookieStorage);\r\n        }\r\n    };\r\n    /**\r\n     * get one item by key from storage\r\n     * @param key\r\n     * @param enableCookieStorage\r\n     */\r\n    AuthCache.prototype.getItem = function (key, enableCookieStorage) {\r\n        return _super.prototype.getItem.call(this, this.generateCacheKey(key, true), enableCookieStorage);\r\n    };\r\n    /**\r\n     * remove value from storage\r\n     * @param key\r\n     */\r\n    AuthCache.prototype.removeItem = function (key) {\r\n        this.temporaryCache.removeItem(this.generateCacheKey(key, true));\r\n        _super.prototype.removeItem.call(this, this.generateCacheKey(key, true));\r\n        if (this.rollbackEnabled) {\r\n            _super.prototype.removeItem.call(this, this.generateCacheKey(key, false));\r\n        }\r\n    };\r\n    /**\r\n     * Sets temporary cache value\r\n     * @param key\r\n     * @param value\r\n     * @param enableCookieStorage\r\n     */\r\n    AuthCache.prototype.setTemporaryItem = function (key, value, enableCookieStorage) {\r\n        this.temporaryCache.setItem(this.generateCacheKey(key, true), value, enableCookieStorage);\r\n    };\r\n    /**\r\n     * Gets temporary cache value\r\n     * @param key\r\n     * @param enableCookieStorage\r\n     */\r\n    AuthCache.prototype.getTemporaryItem = function (key, enableCookieStorage) {\r\n        return this.temporaryCache.getItem(this.generateCacheKey(key, true), enableCookieStorage);\r\n    };\r\n    /**\r\n     * Reset the cache items\r\n     */\r\n    AuthCache.prototype.resetCacheItems = function () {\r\n        var storage = window[this.cacheLocation];\r\n        var key;\r\n        for (key in storage) {\r\n            // Check if key contains msal prefix; For now, we are clearing all cache items created by MSAL.js\r\n            if (storage.hasOwnProperty(key) && (key.indexOf(Constants.cachePrefix) !== -1)) {\r\n                _super.prototype.removeItem.call(this, key);\r\n                // TODO: Clear cache based on client id (clarify use cases where this is needed)\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Reset all temporary cache items\r\n     */\r\n    AuthCache.prototype.resetTempCacheItems = function (state) {\r\n        var _this = this;\r\n        var stateId = state && RequestUtils.parseLibraryState(state).id;\r\n        var isTokenRenewalInProgress = this.tokenRenewalInProgress(state);\r\n        var storage = window[this.cacheLocation];\r\n        // check state and remove associated cache\r\n        if (stateId && !isTokenRenewalInProgress) {\r\n            Object.keys(storage).forEach(function (key) {\r\n                if (key.indexOf(stateId) !== -1) {\r\n                    _this.removeItem(key);\r\n                    _super.prototype.clearItemCookie.call(_this, key);\r\n                }\r\n            });\r\n        }\r\n        // delete the interaction status cache\r\n        this.setInteractionInProgress(false);\r\n        this.removeItem(TemporaryCacheKeys.REDIRECT_REQUEST);\r\n    };\r\n    /**\r\n     * Set cookies for IE\r\n     * @param cName\r\n     * @param cValue\r\n     * @param expires\r\n     */\r\n    AuthCache.prototype.setItemCookie = function (cName, cValue, expires) {\r\n        _super.prototype.setItemCookie.call(this, this.generateCacheKey(cName, true), cValue, expires);\r\n        if (this.rollbackEnabled) {\r\n            _super.prototype.setItemCookie.call(this, this.generateCacheKey(cName, false), cValue, expires);\r\n        }\r\n    };\r\n    AuthCache.prototype.clearItemCookie = function (cName) {\r\n        _super.prototype.clearItemCookie.call(this, this.generateCacheKey(cName, true));\r\n        if (this.rollbackEnabled) {\r\n            _super.prototype.clearItemCookie.call(this, this.generateCacheKey(cName, false));\r\n        }\r\n    };\r\n    /**\r\n     * get one item by key from cookies\r\n     * @param cName\r\n     */\r\n    AuthCache.prototype.getItemCookie = function (cName) {\r\n        return _super.prototype.getItemCookie.call(this, this.generateCacheKey(cName, true));\r\n    };\r\n    /**\r\n     * Get all tokens of a certain type from the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     * @param tokenType\r\n     */\r\n    AuthCache.prototype.getAllTokensByType = function (clientId, homeAccountIdentifier, tokenType) {\r\n        var _this = this;\r\n        var results = Object.keys(window[this.cacheLocation]).reduce(function (tokens, key) {\r\n            var matchedTokenKey = _this.matchKeyForType(key, clientId, homeAccountIdentifier, tokenType);\r\n            if (matchedTokenKey) {\r\n                var value = _this.getItem(key);\r\n                if (value) {\r\n                    try {\r\n                        var newAccessTokenCacheItem = new AccessTokenCacheItem(matchedTokenKey, JSON.parse(value));\r\n                        return tokens.concat([newAccessTokenCacheItem]);\r\n                    }\r\n                    catch (err) {\r\n                        // Skip cache items with non-valid JSON values\r\n                        return tokens;\r\n                    }\r\n                }\r\n            }\r\n            return tokens;\r\n        }, []);\r\n        return results;\r\n    };\r\n    /**\r\n     * Get all access tokens in the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    AuthCache.prototype.getAllAccessTokens = function (clientId, homeAccountIdentifier) {\r\n        return this.getAllTokensByType(clientId, homeAccountIdentifier, ServerHashParamKeys.ACCESS_TOKEN);\r\n    };\r\n    /**\r\n     * Get all id tokens in the cache in the form of AccessTokenCacheItem objects so they are\r\n     * in a normalized format and can make use of the existing cached access token validation logic\r\n     */\r\n    AuthCache.prototype.getAllIdTokens = function (clientId, homeAccountIdentifier) {\r\n        return this.getAllTokensByType(clientId, homeAccountIdentifier, ServerHashParamKeys.ID_TOKEN);\r\n    };\r\n    /**\r\n     * Get all access and ID tokens in the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    AuthCache.prototype.getAllTokens = function (clientId, homeAccountIdentifier) {\r\n        var accessTokens = this.getAllAccessTokens(clientId, homeAccountIdentifier);\r\n        var idTokens = this.getAllIdTokens(clientId, homeAccountIdentifier);\r\n        return __spreadArrays(accessTokens, idTokens);\r\n    };\r\n    /**\r\n     * Returns whether or not interaction is currently in progress. Optionally scope it to just this clientId\r\n     * @param forThisClient\r\n     */\r\n    AuthCache.prototype.isInteractionInProgress = function (matchClientId) {\r\n        var clientId = this.getInteractionInProgress();\r\n        if (matchClientId) {\r\n            return clientId === this.clientId;\r\n        }\r\n        else {\r\n            return !!clientId;\r\n        }\r\n    };\r\n    /**\r\n     * Returns the clientId of the interaction currently in progress\r\n     */\r\n    AuthCache.prototype.getInteractionInProgress = function () {\r\n        return this.getTemporaryItem(this.generateCacheKey(TemporaryCacheKeys.INTERACTION_STATUS, false));\r\n    };\r\n    /**\r\n     * Sets interaction in progress state\r\n     * @param isInProgress\r\n     */\r\n    AuthCache.prototype.setInteractionInProgress = function (newInProgressValue) {\r\n        if (newInProgressValue) {\r\n            if (this.isInteractionInProgress(false)) {\r\n                throw ClientAuthError.createAcquireTokenInProgressError();\r\n            }\r\n            else {\r\n                // Ensure we don't overwrite interaction in progress for a different clientId\r\n                this.setTemporaryItem(this.generateCacheKey(TemporaryCacheKeys.INTERACTION_STATUS, false), this.clientId);\r\n            }\r\n        }\r\n        else if (!newInProgressValue && this.isInteractionInProgress(true)) {\r\n            // Only remove if the current in progress interaction is for this clientId\r\n            this.removeItem(this.generateCacheKey(TemporaryCacheKeys.INTERACTION_STATUS, false));\r\n        }\r\n    };\r\n    /**\r\n     * Return if the token renewal is still in progress\r\n     *\r\n     * @param stateValue\r\n     */\r\n    AuthCache.prototype.tokenRenewalInProgress = function (stateValue) {\r\n        var renewStatus = this.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, stateValue));\r\n        return !!(renewStatus && renewStatus === Constants.inProgress);\r\n    };\r\n    /**\r\n     * Clear all cookies\r\n     */\r\n    AuthCache.prototype.clearMsalCookie = function (state) {\r\n        var _this = this;\r\n        /*\r\n         * If state is truthy, remove values associated with that request.\r\n         * Otherwise, remove all MSAL cookies.\r\n         */\r\n        if (state) {\r\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.NONCE_IDTOKEN, state));\r\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_LOGIN, state));\r\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.LOGIN_REQUEST, state));\r\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_ACQ_TOKEN, state));\r\n        }\r\n        else {\r\n            var cookies = document.cookie.split(\";\");\r\n            cookies.forEach(function (cookieString) {\r\n                var cookieName = cookieString.trim().split(\"=\")[0];\r\n                if (cookieName.indexOf(Constants.cachePrefix) > -1) {\r\n                    _super.prototype.clearItemCookie.call(_this, cookieName);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Create acquireTokenAccountKey to cache account object\r\n     * @param accountId\r\n     * @param state\r\n     */\r\n    AuthCache.generateAcquireTokenAccountKey = function (accountId, state) {\r\n        var stateId = RequestUtils.parseLibraryState(state).id;\r\n        return \"\" + TemporaryCacheKeys.ACQUIRE_TOKEN_ACCOUNT + Constants.resourceDelimiter + accountId + Constants.resourceDelimiter + stateId;\r\n    };\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    AuthCache.generateAuthorityKey = function (state) {\r\n        return AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.AUTHORITY, state);\r\n    };\r\n    /**\r\n     * Generates the cache key for temporary cache items, using request state\r\n     * @param tempCacheKey Cache key prefix\r\n     * @param state Request state value\r\n     */\r\n    AuthCache.generateTemporaryCacheKey = function (tempCacheKey, state) {\r\n        // Use the state id (a guid), in the interest of shorter key names, which is important for cookies.\r\n        var stateId = RequestUtils.parseLibraryState(state).id;\r\n        return \"\" + tempCacheKey + Constants.resourceDelimiter + stateId;\r\n    };\r\n    return AuthCache;\r\n}(BrowserStorage));\r\nexport { AuthCache };\r\n//# sourceMappingURL=AuthCache.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\n/**\r\n * accountIdentifier       combination of idToken.uid and idToken.utid\r\n * homeAccountIdentifier   combination of clientInfo.uid and clientInfo.utid\r\n * userName                idToken.preferred_username\r\n * name                    idToken.name\r\n * idToken                 idToken\r\n * sid                     idToken.sid - session identifier\r\n * environment             idtoken.issuer (the authority that issues the token)\r\n */\r\nvar Account = /** @class */ (function () {\r\n    /**\r\n     * Creates an Account Object\r\n     * @praram accountIdentifier\r\n     * @param homeAccountIdentifier\r\n     * @param userName\r\n     * @param name\r\n     * @param idToken\r\n     * @param sid\r\n     * @param environment\r\n     */\r\n    function Account(accountIdentifier, homeAccountIdentifier, userName, name, idTokenClaims, sid, environment) {\r\n        this.accountIdentifier = accountIdentifier;\r\n        this.homeAccountIdentifier = homeAccountIdentifier;\r\n        this.userName = userName;\r\n        this.name = name;\r\n        // will be deprecated soon\r\n        this.idToken = idTokenClaims;\r\n        this.idTokenClaims = idTokenClaims;\r\n        this.sid = sid;\r\n        this.environment = environment;\r\n    }\r\n    /**\r\n     * @hidden\r\n     * @param idToken\r\n     * @param clientInfo\r\n     */\r\n    Account.createAccount = function (idToken, clientInfo) {\r\n        // create accountIdentifier\r\n        var accountIdentifier = idToken.objectId || idToken.subject;\r\n        // create homeAccountIdentifier\r\n        var uid = clientInfo ? clientInfo.uid : \"\";\r\n        var utid = clientInfo ? clientInfo.utid : \"\";\r\n        var homeAccountIdentifier;\r\n        if (!StringUtils.isEmpty(uid)) {\r\n            homeAccountIdentifier = StringUtils.isEmpty(utid) ? CryptoUtils.base64Encode(uid) : CryptoUtils.base64Encode(uid) + \".\" + CryptoUtils.base64Encode(utid);\r\n        }\r\n        return new Account(accountIdentifier, homeAccountIdentifier, idToken.preferredName, idToken.name, idToken.claims, idToken.sid, idToken.issuer);\r\n    };\r\n    /**\r\n     * Utils function to compare two Account objects - used to check if the same user account is logged in\r\n     *\r\n     * @param a1: Account object\r\n     * @param a2: Account object\r\n     */\r\n    Account.compareAccounts = function (a1, a2) {\r\n        if (!a1 || !a2) {\r\n            return false;\r\n        }\r\n        if (a1.homeAccountIdentifier && a2.homeAccountIdentifier) {\r\n            if (a1.homeAccountIdentifier === a2.homeAccountIdentifier) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return Account;\r\n}());\r\nexport { Account };\r\n//# sourceMappingURL=Account.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ClientAuthError } from \"../error/ClientAuthError\";\r\nimport { UrlUtils } from \"./UrlUtils\";\r\nimport { TemporaryCacheKeys, Constants } from \"./Constants\";\r\nimport { TimeUtils } from \"./TimeUtils\";\r\nvar WindowUtils = /** @class */ (function () {\r\n    function WindowUtils() {\r\n    }\r\n    /**\r\n     * @hidden\r\n     * Checks if the current page is running in an iframe.\r\n     * @ignore\r\n     */\r\n    WindowUtils.isInIframe = function () {\r\n        return window.parent !== window;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Check if the current page is running in a popup.\r\n     * @ignore\r\n     */\r\n    WindowUtils.isInPopup = function () {\r\n        return !!(window.opener && window.opener !== window);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @param prefix\r\n     * @param scopes\r\n     * @param authority\r\n     */\r\n    WindowUtils.generateFrameName = function (prefix, requestSignature) {\r\n        return \"\" + prefix + Constants.resourceDelimiter + requestSignature;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Polls an iframe until it loads a url with a hash\r\n     * @ignore\r\n     */\r\n    WindowUtils.monitorIframeForHash = function (contentWindow, timeout, urlNavigate, logger) {\r\n        return new Promise(function (resolve, reject) {\r\n            /*\r\n             * Polling for iframes can be purely timing based,\r\n             * since we don't need to account for interaction.\r\n             */\r\n            var nowMark = TimeUtils.relativeNowMs();\r\n            var timeoutMark = nowMark + timeout;\r\n            logger.verbose(\"monitorWindowForIframe polling started\");\r\n            var intervalId = setInterval(function () {\r\n                if (TimeUtils.relativeNowMs() > timeoutMark) {\r\n                    logger.error(\"monitorIframeForHash unable to find hash in url, timing out\");\r\n                    logger.errorPii(\"monitorIframeForHash polling timed out for url: \" + urlNavigate);\r\n                    clearInterval(intervalId);\r\n                    reject(ClientAuthError.createTokenRenewalTimeoutError());\r\n                    return;\r\n                }\r\n                var href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = contentWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                if (href && UrlUtils.urlContainsHash(href)) {\r\n                    logger.verbose(\"monitorIframeForHash found url in hash\");\r\n                    clearInterval(intervalId);\r\n                    resolve(contentWindow.location.hash);\r\n                }\r\n            }, WindowUtils.POLLING_INTERVAL_MS);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Polls a popup until it loads a url with a hash\r\n     * @ignore\r\n     */\r\n    WindowUtils.monitorPopupForHash = function (contentWindow, timeout, urlNavigate, logger) {\r\n        return new Promise(function (resolve, reject) {\r\n            /*\r\n             * Polling for popups needs to be tick-based,\r\n             * since a non-trivial amount of time can be spent on interaction (which should not count against the timeout).\r\n             */\r\n            var maxTicks = timeout / WindowUtils.POLLING_INTERVAL_MS;\r\n            var ticks = 0;\r\n            logger.verbose(\"monitorWindowForHash polling started\");\r\n            var intervalId = setInterval(function () {\r\n                if (contentWindow.closed) {\r\n                    logger.error(\"monitorWindowForHash window closed\");\r\n                    clearInterval(intervalId);\r\n                    reject(ClientAuthError.createUserCancelledError());\r\n                    return;\r\n                }\r\n                var href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = contentWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                // Don't process blank pages or cross domain\r\n                if (!href || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n                /*\r\n                 * Only run clock when we are on same domain for popups\r\n                 * as popup operations can take a long time.\r\n                 */\r\n                ticks++;\r\n                if (href && UrlUtils.urlContainsHash(href)) {\r\n                    logger.verbose(\"monitorPopupForHash found url in hash\");\r\n                    clearInterval(intervalId);\r\n                    var hash = contentWindow.location.hash;\r\n                    WindowUtils.clearUrlFragment(contentWindow);\r\n                    resolve(hash);\r\n                }\r\n                else if (ticks > maxTicks) {\r\n                    logger.error(\"monitorPopupForHash unable to find hash in url, timing out\");\r\n                    logger.errorPii(\"monitorPopupForHash polling timed out for url: \" + urlNavigate);\r\n                    clearInterval(intervalId);\r\n                    reject(ClientAuthError.createTokenRenewalTimeoutError());\r\n                }\r\n            }, WindowUtils.POLLING_INTERVAL_MS);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    WindowUtils.loadFrame = function (urlNavigate, frameName, timeoutMs, logger) {\r\n        var _this = this;\r\n        /*\r\n         * This trick overcomes iframe navigation in IE\r\n         * IE does not load the page consistently in iframe\r\n         */\r\n        logger.infoPii(\"LoadFrame: \" + frameName);\r\n        return new Promise(function (resolve, reject) {\r\n            setTimeout(function () {\r\n                var frameHandle = _this.loadFrameSync(urlNavigate, frameName, logger);\r\n                if (!frameHandle) {\r\n                    reject(\"Unable to load iframe with name: \" + frameName);\r\n                    return;\r\n                }\r\n                resolve(frameHandle);\r\n            }, timeoutMs);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n     * @param urlNavigate\r\n     * @param frameName\r\n     * @param logger\r\n     */\r\n    WindowUtils.loadFrameSync = function (urlNavigate, frameName, logger) {\r\n        var frameHandle = WindowUtils.addHiddenIFrame(frameName, logger);\r\n        // returning to handle null in loadFrame, also to avoid null object access errors\r\n        if (!frameHandle) {\r\n            return null;\r\n        }\r\n        else if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\r\n            frameHandle.src = urlNavigate;\r\n            logger.infoPii(\"Frame Name : \" + frameName + \" Navigated to: \" + urlNavigate);\r\n        }\r\n        return frameHandle;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Adds the hidden iframe for silent token renewal.\r\n     * @ignore\r\n     */\r\n    WindowUtils.addHiddenIFrame = function (iframeId, logger) {\r\n        if (typeof iframeId === \"undefined\") {\r\n            return null;\r\n        }\r\n        logger.info(\"Add msal iframe to document\");\r\n        logger.infoPii(\"Add msal frame to document:\" + iframeId);\r\n        var adalFrame = document.getElementById(iframeId);\r\n        if (!adalFrame) {\r\n            logger.verbose(\"Add msal iframe does not exist\");\r\n            var ifr = document.createElement(\"iframe\");\r\n            ifr.setAttribute(\"id\", iframeId);\r\n            ifr.setAttribute(\"aria-hidden\", \"true\");\r\n            ifr.style.visibility = \"hidden\";\r\n            ifr.style.position = \"absolute\";\r\n            ifr.style.width = ifr.style.height = \"0\";\r\n            ifr.style.border = \"0\";\r\n            ifr.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n            adalFrame = document.getElementsByTagName(\"body\")[0].appendChild(ifr);\r\n        }\r\n        else {\r\n            logger.verbose(\"Add msal iframe already exists\");\r\n        }\r\n        return adalFrame;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Removes a hidden iframe from the page.\r\n     * @ignore\r\n     */\r\n    WindowUtils.removeHiddenIframe = function (iframe) {\r\n        if (document.body === iframe.parentNode) {\r\n            document.body.removeChild(iframe);\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Find and return the iframe element with the given hash\r\n     * @ignore\r\n     */\r\n    WindowUtils.getIframeWithHash = function (hash) {\r\n        var iframes = document.getElementsByTagName(\"iframe\");\r\n        var iframeArray = Array.apply(null, Array(iframes.length)).map(function (iframe, index) { return iframes.item(index); }); // eslint-disable-line prefer-spread\r\n        return iframeArray.filter(function (iframe) {\r\n            try {\r\n                return iframe.contentWindow.location.hash === hash;\r\n            }\r\n            catch (e) {\r\n                return false;\r\n            }\r\n        })[0];\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Returns an array of all the popups opened by MSAL\r\n     * @ignore\r\n     */\r\n    WindowUtils.getPopups = function () {\r\n        if (!window.openedWindows) {\r\n            window.openedWindows = [];\r\n        }\r\n        return window.openedWindows;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Find and return the popup with the given hash\r\n     * @ignore\r\n     */\r\n    WindowUtils.getPopUpWithHash = function (hash) {\r\n        return WindowUtils.getPopups().filter(function (popup) {\r\n            try {\r\n                return popup.location.hash === hash;\r\n            }\r\n            catch (e) {\r\n                return false;\r\n            }\r\n        })[0];\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Add the popup to the known list of popups\r\n     * @ignore\r\n     */\r\n    WindowUtils.trackPopup = function (popup) {\r\n        WindowUtils.getPopups().push(popup);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Close all popups\r\n     * @ignore\r\n     */\r\n    WindowUtils.closePopups = function () {\r\n        WindowUtils.getPopups().forEach(function (popup) { return popup.close(); });\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * blocks any login/acquireToken calls to reload from within a hidden iframe (generated for silent calls)\r\n     */\r\n    WindowUtils.blockReloadInHiddenIframes = function () {\r\n        // return an error if called from the hidden iframe created by the msal js silent calls\r\n        if (UrlUtils.urlContainsHash(window.location.hash) && WindowUtils.isInIframe()) {\r\n            throw ClientAuthError.createBlockTokenRequestsInHiddenIframeError();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param cacheStorage\r\n     */\r\n    WindowUtils.checkIfBackButtonIsPressed = function (cacheStorage) {\r\n        var redirectCache = cacheStorage.getItem(TemporaryCacheKeys.REDIRECT_REQUEST);\r\n        // if redirect request is set and there is no hash\r\n        if (redirectCache && !UrlUtils.urlContainsHash(window.location.hash)) {\r\n            var splitCache = redirectCache.split(Constants.resourceDelimiter);\r\n            splitCache.shift();\r\n            var state = splitCache.length > 0 ? splitCache.join(Constants.resourceDelimiter) : null;\r\n            cacheStorage.resetTempCacheItems(state);\r\n        }\r\n    };\r\n    /**\r\n     * Removes url fragment from browser url\r\n     */\r\n    WindowUtils.clearUrlFragment = function (contentWindow) {\r\n        contentWindow.location.hash = \"\";\r\n        // Office.js sets history.replaceState to null\r\n        if (typeof contentWindow.history.replaceState === \"function\") {\r\n            // Full removes \"#\" from url\r\n            contentWindow.history.replaceState(null, null, \"\" + contentWindow.location.pathname + contentWindow.location.search);\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Interval in milliseconds that we poll a window\r\n     * @ignore\r\n     */\r\n    WindowUtils.POLLING_INTERVAL_MS = 50;\r\n    return WindowUtils;\r\n}());\r\nexport { WindowUtils };\r\n//# sourceMappingURL=WindowUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { ResponseTypes, ServerHashParamKeys } from \"./Constants\";\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar ResponseUtils = /** @class */ (function () {\r\n    function ResponseUtils() {\r\n    }\r\n    ResponseUtils.setResponseIdToken = function (originalResponse, idTokenObj) {\r\n        if (!originalResponse) {\r\n            return null;\r\n        }\r\n        else if (!idTokenObj) {\r\n            return originalResponse;\r\n        }\r\n        var exp = Number(idTokenObj.expiration);\r\n        if (exp && !originalResponse.expiresOn) {\r\n            originalResponse.expiresOn = new Date(exp * 1000);\r\n        }\r\n        return __assign(__assign({}, originalResponse), { idToken: idTokenObj, idTokenClaims: idTokenObj.claims, uniqueId: idTokenObj.objectId || idTokenObj.subject, tenantId: idTokenObj.tenantId });\r\n    };\r\n    ResponseUtils.buildAuthResponse = function (idToken, authResponse, serverAuthenticationRequest, account, scopes, accountState) {\r\n        switch (serverAuthenticationRequest.responseType) {\r\n            case ResponseTypes.id_token:\r\n                var idTokenResponse = __assign(__assign({}, authResponse), { tokenType: ServerHashParamKeys.ID_TOKEN, account: account, scopes: scopes, accountState: accountState });\r\n                idTokenResponse = ResponseUtils.setResponseIdToken(idTokenResponse, idToken);\r\n                return (idTokenResponse.idToken) ? idTokenResponse : null;\r\n            case ResponseTypes.id_token_token:\r\n                var idTokeTokenResponse = ResponseUtils.setResponseIdToken(authResponse, idToken);\r\n                return (idTokeTokenResponse && idTokeTokenResponse.accessToken && idTokeTokenResponse.idToken) ? idTokeTokenResponse : null;\r\n            case ResponseTypes.token:\r\n                var tokenResponse = ResponseUtils.setResponseIdToken(authResponse, idToken);\r\n                return tokenResponse;\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n    return ResponseUtils;\r\n}());\r\nexport { ResponseUtils };\r\n//# sourceMappingURL=ResponseUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\n/**\r\n * @hidden\r\n */\r\nimport { Authority } from \"./Authority\";\r\nimport { StringUtils } from \"../utils/StringUtils\";\r\nimport { ClientConfigurationError } from \"../error/ClientConfigurationError\";\r\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    AuthorityFactory.saveMetadataFromNetwork = function (authorityInstance, telemetryManager, correlationId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var metadata;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, authorityInstance.resolveEndpointsAsync(telemetryManager, correlationId)];\r\n                    case 1:\r\n                        metadata = _a.sent();\r\n                        this.metadataMap.set(authorityInstance.CanonicalAuthority, metadata);\r\n                        return [2 /*return*/, metadata];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthorityFactory.getMetadata = function (authorityUrl) {\r\n        return this.metadataMap.get(authorityUrl);\r\n    };\r\n    AuthorityFactory.saveMetadataFromConfig = function (authorityUrl, authorityMetadataJson) {\r\n        try {\r\n            if (authorityMetadataJson) {\r\n                var parsedMetadata = JSON.parse(authorityMetadataJson);\r\n                if (!parsedMetadata.authorization_endpoint || !parsedMetadata.end_session_endpoint || !parsedMetadata.issuer) {\r\n                    throw ClientConfigurationError.createInvalidAuthorityMetadataError();\r\n                }\r\n                this.metadataMap.set(authorityUrl, {\r\n                    AuthorizationEndpoint: parsedMetadata.authorization_endpoint,\r\n                    EndSessionEndpoint: parsedMetadata.end_session_endpoint,\r\n                    Issuer: parsedMetadata.issuer\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createInvalidAuthorityMetadataError();\r\n        }\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (eg aad, b2c)\r\n     */\r\n    AuthorityFactory.CreateInstance = function (authorityUrl, validateAuthority, authorityMetadata) {\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            return null;\r\n        }\r\n        if (authorityMetadata) {\r\n            // todo: log statements\r\n            this.saveMetadataFromConfig(authorityUrl, authorityMetadata);\r\n        }\r\n        return new Authority(authorityUrl, validateAuthority, this.metadataMap.get(authorityUrl));\r\n    };\r\n    AuthorityFactory.metadataMap = new Map();\r\n    return AuthorityFactory;\r\n}());\r\nexport { AuthorityFactory };\r\n//# sourceMappingURL=AuthorityFactory.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { Logger } from \"./Logger\";\r\nimport { UrlUtils } from \"./utils/UrlUtils\";\r\n/**\r\n * Defaults for the Configuration Options\r\n */\r\nvar FRAME_TIMEOUT = 6000;\r\nvar OFFSET = 300;\r\nvar NAVIGATE_FRAME_WAIT = 500;\r\nvar DEFAULT_AUTH_OPTIONS = {\r\n    clientId: \"\",\r\n    authority: null,\r\n    validateAuthority: true,\r\n    authorityMetadata: \"\",\r\n    knownAuthorities: [],\r\n    redirectUri: function () { return UrlUtils.getCurrentUrl(); },\r\n    postLogoutRedirectUri: function () { return UrlUtils.getCurrentUrl(); },\r\n    navigateToLoginRequestUrl: true\r\n};\r\nvar DEFAULT_CACHE_OPTIONS = {\r\n    cacheLocation: \"sessionStorage\",\r\n    storeAuthStateInCookie: false\r\n};\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    logger: new Logger(null),\r\n    loadFrameTimeout: FRAME_TIMEOUT,\r\n    tokenRenewalOffsetSeconds: OFFSET,\r\n    navigateFrameWait: NAVIGATE_FRAME_WAIT\r\n};\r\nvar DEFAULT_FRAMEWORK_OPTIONS = {\r\n    isAngular: false,\r\n    unprotectedResources: new Array(),\r\n    protectedResourceMap: new Map()\r\n};\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param TAuthOptions\r\n * @param TCacheOptions\r\n * @param TSystemOptions\r\n * @param TFrameworkOptions\r\n * @param TAuthorityDataOptions\r\n *\r\n * @returns TConfiguration object\r\n */\r\nexport function buildConfiguration(_a) {\r\n    var auth = _a.auth, _b = _a.cache, cache = _b === void 0 ? {} : _b, _c = _a.system, system = _c === void 0 ? {} : _c, _d = _a.framework, framework = _d === void 0 ? {} : _d;\r\n    var overlayedConfig = {\r\n        auth: __assign(__assign({}, DEFAULT_AUTH_OPTIONS), auth),\r\n        cache: __assign(__assign({}, DEFAULT_CACHE_OPTIONS), cache),\r\n        system: __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), system),\r\n        framework: __assign(__assign({}, DEFAULT_FRAMEWORK_OPTIONS), framework)\r\n    };\r\n    return overlayedConfig;\r\n}\r\n//# sourceMappingURL=Configuration.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { AuthError } from \"./AuthError\";\r\nexport var ServerErrorMessage = {\r\n    serverUnavailable: {\r\n        code: \"server_unavailable\",\r\n        desc: \"Server is temporarily unavailable.\"\r\n    },\r\n    unknownServerError: {\r\n        code: \"unknown_server_error\"\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    __extends(ServerError, _super);\r\n    function ServerError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ServerError\";\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    ServerError.createServerUnavailableError = function () {\r\n        return new ServerError(ServerErrorMessage.serverUnavailable.code, ServerErrorMessage.serverUnavailable.desc);\r\n    };\r\n    ServerError.createUnknownServerError = function (errorDesc) {\r\n        return new ServerError(ServerErrorMessage.unknownServerError.code, errorDesc);\r\n    };\r\n    return ServerError;\r\n}(AuthError));\r\nexport { ServerError };\r\n//# sourceMappingURL=ServerError.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { ServerError } from \"./ServerError\";\r\nexport var InteractionRequiredAuthErrorMessage = {\r\n    interactionRequired: {\r\n        code: \"interaction_required\"\r\n    },\r\n    consentRequired: {\r\n        code: \"consent_required\"\r\n    },\r\n    loginRequired: {\r\n        code: \"login_required\"\r\n    },\r\n};\r\n/**\r\n * Error thrown when the user is required to perform an interactive token request.\r\n */\r\nvar InteractionRequiredAuthError = /** @class */ (function (_super) {\r\n    __extends(InteractionRequiredAuthError, _super);\r\n    function InteractionRequiredAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"InteractionRequiredAuthError\";\r\n        Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\r\n        return _this;\r\n    }\r\n    InteractionRequiredAuthError.isInteractionRequiredError = function (errorString) {\r\n        var interactionRequiredCodes = [\r\n            InteractionRequiredAuthErrorMessage.interactionRequired.code,\r\n            InteractionRequiredAuthErrorMessage.consentRequired.code,\r\n            InteractionRequiredAuthErrorMessage.loginRequired.code\r\n        ];\r\n        return errorString && interactionRequiredCodes.indexOf(errorString) > -1;\r\n    };\r\n    InteractionRequiredAuthError.createLoginRequiredAuthError = function (errorDesc) {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.loginRequired.code, errorDesc);\r\n    };\r\n    InteractionRequiredAuthError.createInteractionRequiredAuthError = function (errorDesc) {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.interactionRequired.code, errorDesc);\r\n    };\r\n    InteractionRequiredAuthError.createConsentRequiredAuthError = function (errorDesc) {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.consentRequired.code, errorDesc);\r\n    };\r\n    return InteractionRequiredAuthError;\r\n}(ServerError));\r\nexport { InteractionRequiredAuthError };\r\n//# sourceMappingURL=InteractionRequiredAuthError.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nexport function buildResponseStateOnly(state) {\r\n    return {\r\n        uniqueId: \"\",\r\n        tenantId: \"\",\r\n        tokenType: \"\",\r\n        idToken: null,\r\n        idTokenClaims: null,\r\n        accessToken: \"\",\r\n        scopes: null,\r\n        expiresOn: null,\r\n        account: null,\r\n        accountState: state,\r\n        fromCache: false\r\n    };\r\n}\r\n//# sourceMappingURL=AuthResponse.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nexport var EVENT_NAME_PREFIX = \"msal.\";\r\nexport var EVENT_NAME_KEY = \"event_name\";\r\nexport var START_TIME_KEY = \"start_time\";\r\nexport var ELAPSED_TIME_KEY = \"elapsed_time\";\r\nexport var TELEMETRY_BLOB_EVENT_NAMES = {\r\n    MsalCorrelationIdConstStrKey: \"Microsoft.MSAL.correlation_id\",\r\n    ApiTelemIdConstStrKey: \"msal.api_telem_id\",\r\n    ApiIdConstStrKey: \"msal.api_id\",\r\n    BrokerAppConstStrKey: \"Microsoft_MSAL_broker_app\",\r\n    CacheEventCountConstStrKey: \"Microsoft_MSAL_cache_event_count\",\r\n    HttpEventCountTelemetryBatchKey: \"Microsoft_MSAL_http_event_count\",\r\n    IdpConstStrKey: \"Microsoft_MSAL_idp\",\r\n    IsSilentTelemetryBatchKey: \"\",\r\n    IsSuccessfulConstStrKey: \"Microsoft_MSAL_is_successful\",\r\n    ResponseTimeConstStrKey: \"Microsoft_MSAL_response_time\",\r\n    TenantIdConstStrKey: \"Microsoft_MSAL_tenant_id\",\r\n    UiEventCountTelemetryBatchKey: \"Microsoft_MSAL_ui_event_count\"\r\n};\r\n// This is used to replace the real tenant in telemetry info\r\nexport var TENANT_PLACEHOLDER = \"<tenant>\";\r\n//# sourceMappingURL=TelemetryConstants.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar _a;\r\nimport { __extends } from \"tslib\";\r\nimport TelemetryEvent from \"./TelemetryEvent\";\r\nimport { TELEMETRY_BLOB_EVENT_NAMES } from \"./TelemetryConstants\";\r\nimport { scrubTenantFromUri, hashPersonalIdentifier, prependEventNamePrefix } from \"./TelemetryUtils\";\r\nexport var EVENT_KEYS = {\r\n    AUTHORITY: prependEventNamePrefix(\"authority\"),\r\n    AUTHORITY_TYPE: prependEventNamePrefix(\"authority_type\"),\r\n    PROMPT: prependEventNamePrefix(\"ui_behavior\"),\r\n    TENANT_ID: prependEventNamePrefix(\"tenant_id\"),\r\n    USER_ID: prependEventNamePrefix(\"user_id\"),\r\n    WAS_SUCESSFUL: prependEventNamePrefix(\"was_successful\"),\r\n    API_ERROR_CODE: prependEventNamePrefix(\"api_error_code\"),\r\n    LOGIN_HINT: prependEventNamePrefix(\"login_hint\")\r\n};\r\nexport var API_CODE;\r\n(function (API_CODE) {\r\n    API_CODE[API_CODE[\"AcquireTokenRedirect\"] = 2001] = \"AcquireTokenRedirect\";\r\n    API_CODE[API_CODE[\"AcquireTokenSilent\"] = 2002] = \"AcquireTokenSilent\";\r\n    API_CODE[API_CODE[\"AcquireTokenPopup\"] = 2003] = \"AcquireTokenPopup\";\r\n    API_CODE[API_CODE[\"LoginRedirect\"] = 2004] = \"LoginRedirect\";\r\n    API_CODE[API_CODE[\"LoginPopup\"] = 2005] = \"LoginPopup\";\r\n    API_CODE[API_CODE[\"Logout\"] = 2006] = \"Logout\";\r\n})(API_CODE || (API_CODE = {}));\r\nexport var API_EVENT_IDENTIFIER;\r\n(function (API_EVENT_IDENTIFIER) {\r\n    API_EVENT_IDENTIFIER[\"AcquireTokenRedirect\"] = \"AcquireTokenRedirect\";\r\n    API_EVENT_IDENTIFIER[\"AcquireTokenSilent\"] = \"AcquireTokenSilent\";\r\n    API_EVENT_IDENTIFIER[\"AcquireTokenPopup\"] = \"AcquireTokenPopup\";\r\n    API_EVENT_IDENTIFIER[\"LoginRedirect\"] = \"LoginRedirect\";\r\n    API_EVENT_IDENTIFIER[\"LoginPopup\"] = \"LoginPopup\";\r\n    API_EVENT_IDENTIFIER[\"Logout\"] = \"Logout\";\r\n})(API_EVENT_IDENTIFIER || (API_EVENT_IDENTIFIER = {}));\r\nvar mapEventIdentiferToCode = (_a = {},\r\n    _a[API_EVENT_IDENTIFIER.AcquireTokenSilent] = API_CODE.AcquireTokenSilent,\r\n    _a[API_EVENT_IDENTIFIER.AcquireTokenPopup] = API_CODE.AcquireTokenPopup,\r\n    _a[API_EVENT_IDENTIFIER.AcquireTokenRedirect] = API_CODE.AcquireTokenRedirect,\r\n    _a[API_EVENT_IDENTIFIER.LoginPopup] = API_CODE.LoginPopup,\r\n    _a[API_EVENT_IDENTIFIER.LoginRedirect] = API_CODE.LoginRedirect,\r\n    _a[API_EVENT_IDENTIFIER.Logout] = API_CODE.Logout,\r\n    _a);\r\nvar ApiEvent = /** @class */ (function (_super) {\r\n    __extends(ApiEvent, _super);\r\n    function ApiEvent(correlationId, piiEnabled, apiEventIdentifier) {\r\n        var _this = _super.call(this, prependEventNamePrefix(\"api_event\"), correlationId, apiEventIdentifier) || this;\r\n        if (apiEventIdentifier) {\r\n            _this.apiCode = mapEventIdentiferToCode[apiEventIdentifier];\r\n            _this.apiEventIdentifier = apiEventIdentifier;\r\n        }\r\n        _this.piiEnabled = piiEnabled;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ApiEvent.prototype, \"apiEventIdentifier\", {\r\n        set: function (apiEventIdentifier) {\r\n            this.event[TELEMETRY_BLOB_EVENT_NAMES.ApiTelemIdConstStrKey] = apiEventIdentifier;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"apiCode\", {\r\n        set: function (apiCode) {\r\n            this.event[TELEMETRY_BLOB_EVENT_NAMES.ApiIdConstStrKey] = apiCode;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"authority\", {\r\n        set: function (uri) {\r\n            this.event[EVENT_KEYS.AUTHORITY] = scrubTenantFromUri(uri).toLowerCase();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"apiErrorCode\", {\r\n        set: function (errorCode) {\r\n            this.event[EVENT_KEYS.API_ERROR_CODE] = errorCode;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"tenantId\", {\r\n        set: function (tenantId) {\r\n            this.event[EVENT_KEYS.TENANT_ID] = this.piiEnabled && tenantId ?\r\n                hashPersonalIdentifier(tenantId)\r\n                : null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"accountId\", {\r\n        set: function (accountId) {\r\n            this.event[EVENT_KEYS.USER_ID] = this.piiEnabled && accountId ?\r\n                hashPersonalIdentifier(accountId)\r\n                : null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"wasSuccessful\", {\r\n        get: function () {\r\n            return this.event[EVENT_KEYS.WAS_SUCESSFUL] === true;\r\n        },\r\n        set: function (wasSuccessful) {\r\n            this.event[EVENT_KEYS.WAS_SUCESSFUL] = wasSuccessful;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"loginHint\", {\r\n        set: function (loginHint) {\r\n            this.event[EVENT_KEYS.LOGIN_HINT] = this.piiEnabled && loginHint ?\r\n                hashPersonalIdentifier(loginHint)\r\n                : null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"authorityType\", {\r\n        set: function (authorityType) {\r\n            this.event[EVENT_KEYS.AUTHORITY_TYPE] = authorityType.toLowerCase();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ApiEvent.prototype, \"promptType\", {\r\n        set: function (promptType) {\r\n            this.event[EVENT_KEYS.PROMPT] = promptType.toLowerCase();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ApiEvent;\r\n}(TelemetryEvent));\r\nexport default ApiEvent;\r\n//# sourceMappingURL=ApiEvent.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { TENANT_PLACEHOLDER, EVENT_NAME_PREFIX } from \"./TelemetryConstants\";\r\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\r\nimport { UrlUtils } from \"../utils/UrlUtils\";\r\nimport { Authority } from \"../authority/Authority\";\r\nexport var scrubTenantFromUri = function (uri) {\r\n    var url = UrlUtils.GetUrlComponents(uri);\r\n    // validate trusted host\r\n    if (Authority.isAdfs(uri)) {\r\n        /**\r\n         * returning what was passed because the library needs to work with uris that are non\r\n         * AAD trusted but passed by users such as B2C or others.\r\n         * HTTP Events for instance can take a url to the open id config endpoint\r\n         */\r\n        return uri;\r\n    }\r\n    var pathParams = url.PathSegments;\r\n    if (pathParams && pathParams.length >= 2) {\r\n        var tenantPosition = pathParams[1] === \"tfp\" ? 2 : 1;\r\n        if (tenantPosition < pathParams.length) {\r\n            pathParams[tenantPosition] = TENANT_PLACEHOLDER;\r\n        }\r\n    }\r\n    return url.Protocol + \"//\" + url.HostNameAndPort + \"/\" + pathParams.join(\"/\");\r\n};\r\nexport var hashPersonalIdentifier = function (valueToHash) {\r\n    /*\r\n     * TODO sha256 this\r\n     * Current test runner is being funny with node libs that are webpacked anyway\r\n     * need a different solution\r\n     */\r\n    return CryptoUtils.base64Encode(valueToHash);\r\n};\r\nexport var prependEventNamePrefix = function (suffix) { return \"\" + EVENT_NAME_PREFIX + (suffix || \"\"); };\r\nexport var supportsBrowserPerformance = function () { return !!(typeof window !== \"undefined\" &&\r\n    \"performance\" in window &&\r\n    window.performance.mark &&\r\n    window.performance.measure); };\r\nexport var endBrowserPerformanceMeasurement = function (measureName, startMark, endMark) {\r\n    if (supportsBrowserPerformance()) {\r\n        window.performance.mark(endMark);\r\n        window.performance.measure(measureName, startMark, endMark);\r\n        window.performance.clearMeasures(measureName);\r\n        window.performance.clearMarks(startMark);\r\n        window.performance.clearMarks(endMark);\r\n    }\r\n};\r\nexport var startBrowserPerformanceMeasurement = function (startMark) {\r\n    if (supportsBrowserPerformance()) {\r\n        window.performance.mark(startMark);\r\n    }\r\n};\r\n//# sourceMappingURL=TelemetryUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { TELEMETRY_BLOB_EVENT_NAMES, EVENT_NAME_KEY, START_TIME_KEY, ELAPSED_TIME_KEY } from \"./TelemetryConstants\";\r\nimport { prependEventNamePrefix, startBrowserPerformanceMeasurement, endBrowserPerformanceMeasurement } from \"./TelemetryUtils\";\r\nimport { CryptoUtils } from \"../utils/CryptoUtils\";\r\nvar TelemetryEvent = /** @class */ (function () {\r\n    function TelemetryEvent(eventName, correlationId, eventLabel) {\r\n        var _a;\r\n        this.eventId = CryptoUtils.createNewGuid();\r\n        this.label = eventLabel;\r\n        this.event = (_a = {},\r\n            _a[prependEventNamePrefix(EVENT_NAME_KEY)] = eventName,\r\n            _a[prependEventNamePrefix(ELAPSED_TIME_KEY)] = -1,\r\n            _a[\"\" + TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey] = correlationId,\r\n            _a);\r\n    }\r\n    TelemetryEvent.prototype.setElapsedTime = function (time) {\r\n        this.event[prependEventNamePrefix(ELAPSED_TIME_KEY)] = time;\r\n    };\r\n    TelemetryEvent.prototype.stop = function () {\r\n        // Set duration of event\r\n        this.setElapsedTime(+Date.now() - +this.startTimestamp);\r\n        endBrowserPerformanceMeasurement(this.displayName, this.perfStartMark, this.perfEndMark);\r\n    };\r\n    TelemetryEvent.prototype.start = function () {\r\n        this.startTimestamp = Date.now();\r\n        this.event[prependEventNamePrefix(START_TIME_KEY)] = this.startTimestamp;\r\n        startBrowserPerformanceMeasurement(this.perfStartMark);\r\n    };\r\n    Object.defineProperty(TelemetryEvent.prototype, \"telemetryCorrelationId\", {\r\n        get: function () {\r\n            return this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey];\r\n        },\r\n        set: function (value) {\r\n            this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.MsalCorrelationIdConstStrKey] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TelemetryEvent.prototype, \"eventName\", {\r\n        get: function () {\r\n            return this.event[prependEventNamePrefix(EVENT_NAME_KEY)];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TelemetryEvent.prototype.get = function () {\r\n        return __assign(__assign({}, this.event), { eventId: this.eventId });\r\n    };\r\n    Object.defineProperty(TelemetryEvent.prototype, \"key\", {\r\n        get: function () {\r\n            return this.telemetryCorrelationId + \"_\" + this.eventId + \"-\" + this.eventName;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TelemetryEvent.prototype, \"displayName\", {\r\n        get: function () {\r\n            return \"Msal-\" + this.label + \"-\" + this.telemetryCorrelationId;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TelemetryEvent.prototype, \"perfStartMark\", {\r\n        get: function () {\r\n            return \"start-\" + this.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TelemetryEvent.prototype, \"perfEndMark\", {\r\n        get: function () {\r\n            return \"end-\" + this.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return TelemetryEvent;\r\n}());\r\nexport default TelemetryEvent;\r\n//# sourceMappingURL=TelemetryEvent.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { TELEMETRY_BLOB_EVENT_NAMES } from \"./TelemetryConstants\";\r\nimport TelemetryEvent from \"./TelemetryEvent\";\r\nimport { prependEventNamePrefix } from \"./TelemetryUtils\";\r\nvar DefaultEvent = /** @class */ (function (_super) {\r\n    __extends(DefaultEvent, _super);\r\n    // TODO Platform Type\r\n    function DefaultEvent(platform, correlationId, clientId, eventCount) {\r\n        var _this = _super.call(this, prependEventNamePrefix(\"default_event\"), correlationId, \"DefaultEvent\") || this;\r\n        _this.event[prependEventNamePrefix(\"client_id\")] = clientId;\r\n        _this.event[prependEventNamePrefix(\"sdk_plaform\")] = platform.sdk;\r\n        _this.event[prependEventNamePrefix(\"sdk_version\")] = platform.sdkVersion;\r\n        _this.event[prependEventNamePrefix(\"application_name\")] = platform.applicationName;\r\n        _this.event[prependEventNamePrefix(\"application_version\")] = platform.applicationVersion;\r\n        _this.event[prependEventNamePrefix(\"effective_connection_speed\")] = platform.networkInformation && platform.networkInformation.connectionSpeed;\r\n        _this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.UiEventCountTelemetryBatchKey] = _this.getEventCount(prependEventNamePrefix(\"ui_event\"), eventCount);\r\n        _this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.HttpEventCountTelemetryBatchKey] = _this.getEventCount(prependEventNamePrefix(\"http_event\"), eventCount);\r\n        _this.event[\"\" + TELEMETRY_BLOB_EVENT_NAMES.CacheEventCountConstStrKey] = _this.getEventCount(prependEventNamePrefix(\"cache_event\"), eventCount);\r\n        return _this;\r\n        // / Device id?\r\n    }\r\n    DefaultEvent.prototype.getEventCount = function (eventName, eventCount) {\r\n        if (!eventCount[eventName]) {\r\n            return 0;\r\n        }\r\n        return eventCount[eventName];\r\n    };\r\n    return DefaultEvent;\r\n}(TelemetryEvent));\r\nexport default DefaultEvent;\r\n//# sourceMappingURL=DefaultEvent.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport TelemetryEvent from \"./TelemetryEvent\";\r\nimport { scrubTenantFromUri, prependEventNamePrefix } from \"./TelemetryUtils\";\r\nimport { ServerRequestParameters } from \"../ServerRequestParameters\";\r\nexport var EVENT_KEYS = {\r\n    HTTP_PATH: prependEventNamePrefix(\"http_path\"),\r\n    USER_AGENT: prependEventNamePrefix(\"user_agent\"),\r\n    QUERY_PARAMETERS: prependEventNamePrefix(\"query_parameters\"),\r\n    API_VERSION: prependEventNamePrefix(\"api_version\"),\r\n    RESPONSE_CODE: prependEventNamePrefix(\"response_code\"),\r\n    O_AUTH_ERROR_CODE: prependEventNamePrefix(\"oauth_error_code\"),\r\n    HTTP_METHOD: prependEventNamePrefix(\"http_method\"),\r\n    REQUEST_ID_HEADER: prependEventNamePrefix(\"request_id_header\"),\r\n    SPE_INFO: prependEventNamePrefix(\"spe_info\"),\r\n    SERVER_ERROR_CODE: prependEventNamePrefix(\"server_error_code\"),\r\n    SERVER_SUB_ERROR_CODE: prependEventNamePrefix(\"server_sub_error_code\"),\r\n    URL: prependEventNamePrefix(\"url\")\r\n};\r\nvar HttpEvent = /** @class */ (function (_super) {\r\n    __extends(HttpEvent, _super);\r\n    function HttpEvent(correlationId, eventLabel) {\r\n        return _super.call(this, prependEventNamePrefix(\"http_event\"), correlationId, eventLabel) || this;\r\n    }\r\n    Object.defineProperty(HttpEvent.prototype, \"url\", {\r\n        set: function (url) {\r\n            var scrubbedUri = scrubTenantFromUri(url);\r\n            this.event[EVENT_KEYS.URL] = scrubbedUri && scrubbedUri.toLowerCase();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"httpPath\", {\r\n        set: function (httpPath) {\r\n            this.event[EVENT_KEYS.HTTP_PATH] = scrubTenantFromUri(httpPath).toLowerCase();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"userAgent\", {\r\n        set: function (userAgent) {\r\n            this.event[EVENT_KEYS.USER_AGENT] = userAgent;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"queryParams\", {\r\n        set: function (queryParams) {\r\n            this.event[EVENT_KEYS.QUERY_PARAMETERS] = ServerRequestParameters.generateQueryParametersString(queryParams);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"apiVersion\", {\r\n        set: function (apiVersion) {\r\n            this.event[EVENT_KEYS.API_VERSION] = apiVersion.toLowerCase();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"httpResponseStatus\", {\r\n        set: function (statusCode) {\r\n            this.event[EVENT_KEYS.RESPONSE_CODE] = statusCode;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"oAuthErrorCode\", {\r\n        set: function (errorCode) {\r\n            this.event[EVENT_KEYS.O_AUTH_ERROR_CODE] = errorCode;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"httpMethod\", {\r\n        set: function (httpMethod) {\r\n            this.event[EVENT_KEYS.HTTP_METHOD] = httpMethod;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"requestIdHeader\", {\r\n        set: function (requestIdHeader) {\r\n            this.event[EVENT_KEYS.REQUEST_ID_HEADER] = requestIdHeader;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"speInfo\", {\r\n        /**\r\n         * Indicates whether the request was executed on a ring serving SPE traffic.\r\n         * An empty string indicates this occurred on an outer ring, and the string \"I\"\r\n         * indicates the request occurred on the inner ring\r\n         */\r\n        set: function (speInfo) {\r\n            this.event[EVENT_KEYS.SPE_INFO] = speInfo;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"serverErrorCode\", {\r\n        set: function (errorCode) {\r\n            this.event[EVENT_KEYS.SERVER_ERROR_CODE] = errorCode;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpEvent.prototype, \"serverSubErrorCode\", {\r\n        set: function (subErrorCode) {\r\n            this.event[EVENT_KEYS.SERVER_SUB_ERROR_CODE] = subErrorCode;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return HttpEvent;\r\n}(TelemetryEvent));\r\nexport default HttpEvent;\r\n//# sourceMappingURL=HttpEvent.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __assign, __spreadArrays } from \"tslib\";\r\nimport DefaultEvent from \"./DefaultEvent\";\r\nimport { Constants } from \"../utils/Constants\";\r\nimport ApiEvent from \"./ApiEvent\";\r\nimport HttpEvent from \"./HttpEvent\";\r\nimport { version as libraryVersion } from \"../packageMetadata\";\r\nvar TelemetryManager = /** @class */ (function () {\r\n    function TelemetryManager(config, telemetryEmitter, logger) {\r\n        // correlation Id to list of events\r\n        this.completedEvents = {};\r\n        // event key to event\r\n        this.inProgressEvents = {};\r\n        // correlation id to map of eventname to count\r\n        this.eventCountByCorrelationId = {};\r\n        // Implement after API EVENT\r\n        this.onlySendFailureTelemetry = false;\r\n        // TODO THROW if bad options\r\n        this.telemetryPlatform = __assign({ sdk: Constants.libraryName, sdkVersion: libraryVersion, networkInformation: {\r\n                // @ts-ignore\r\n                connectionSpeed: typeof navigator !== \"undefined\" && navigator.connection && navigator.connection.effectiveType\r\n            } }, config.platform);\r\n        this.clientId = config.clientId;\r\n        this.onlySendFailureTelemetry = config.onlySendFailureTelemetry;\r\n        /*\r\n         * TODO, when i get to wiring this through, think about what it means if\r\n         * a developer does not implement telem at all, we still instrument, but telemetryEmitter can be\r\n         * optional?\r\n         */\r\n        this.telemetryEmitter = telemetryEmitter;\r\n        this.logger = logger;\r\n    }\r\n    TelemetryManager.getTelemetrymanagerStub = function (clientId, logger) {\r\n        var applicationName = \"UnSetStub\";\r\n        var applicationVersion = \"0.0\";\r\n        var telemetryEmitter = function () { };\r\n        var telemetryPlatform = {\r\n            applicationName: applicationName,\r\n            applicationVersion: applicationVersion\r\n        };\r\n        var telemetryManagerConfig = {\r\n            platform: telemetryPlatform,\r\n            clientId: clientId\r\n        };\r\n        return new this(telemetryManagerConfig, telemetryEmitter, logger);\r\n    };\r\n    TelemetryManager.prototype.startEvent = function (event) {\r\n        this.logger.verbose(\"Telemetry Event started: \" + event.key);\r\n        if (!this.telemetryEmitter) {\r\n            return;\r\n        }\r\n        event.start();\r\n        this.inProgressEvents[event.key] = event;\r\n    };\r\n    TelemetryManager.prototype.stopEvent = function (event) {\r\n        this.logger.verbose(\"Telemetry Event stopped: \" + event.key);\r\n        if (!this.telemetryEmitter || !this.inProgressEvents[event.key]) {\r\n            return;\r\n        }\r\n        event.stop();\r\n        this.incrementEventCount(event);\r\n        var completedEvents = this.completedEvents[event.telemetryCorrelationId];\r\n        this.completedEvents[event.telemetryCorrelationId] = __spreadArrays((completedEvents || []), [event]);\r\n        delete this.inProgressEvents[event.key];\r\n    };\r\n    TelemetryManager.prototype.flush = function (correlationId) {\r\n        var _this = this;\r\n        this.logger.verbose(\"Flushing telemetry events: \" + correlationId);\r\n        // If there is only unfinished events should this still return them?\r\n        if (!this.telemetryEmitter || !this.completedEvents[correlationId]) {\r\n            return;\r\n        }\r\n        var orphanedEvents = this.getOrphanedEvents(correlationId);\r\n        orphanedEvents.forEach(function (event) { return _this.incrementEventCount(event); });\r\n        var eventsToFlush = __spreadArrays(this.completedEvents[correlationId], orphanedEvents);\r\n        delete this.completedEvents[correlationId];\r\n        var eventCountsToFlush = this.eventCountByCorrelationId[correlationId];\r\n        delete this.eventCountByCorrelationId[correlationId];\r\n        // TODO add funcitonality for onlyFlushFailures after implementing api event? ??\r\n        if (!eventsToFlush || !eventsToFlush.length) {\r\n            return;\r\n        }\r\n        var defaultEvent = new DefaultEvent(this.telemetryPlatform, correlationId, this.clientId, eventCountsToFlush);\r\n        var eventsWithDefaultEvent = __spreadArrays(eventsToFlush, [defaultEvent]);\r\n        this.telemetryEmitter(eventsWithDefaultEvent.map(function (e) { return e.get(); }));\r\n    };\r\n    TelemetryManager.prototype.createAndStartApiEvent = function (correlationId, apiEventIdentifier) {\r\n        var apiEvent = new ApiEvent(correlationId, this.logger.isPiiLoggingEnabled(), apiEventIdentifier);\r\n        this.startEvent(apiEvent);\r\n        return apiEvent;\r\n    };\r\n    TelemetryManager.prototype.stopAndFlushApiEvent = function (correlationId, apiEvent, wasSuccessful, errorCode) {\r\n        apiEvent.wasSuccessful = wasSuccessful;\r\n        if (errorCode) {\r\n            apiEvent.apiErrorCode = errorCode;\r\n        }\r\n        this.stopEvent(apiEvent);\r\n        this.flush(correlationId);\r\n    };\r\n    TelemetryManager.prototype.createAndStartHttpEvent = function (correlation, httpMethod, url, eventLabel) {\r\n        var httpEvent = new HttpEvent(correlation, eventLabel);\r\n        httpEvent.url = url;\r\n        httpEvent.httpMethod = httpMethod;\r\n        this.startEvent(httpEvent);\r\n        return httpEvent;\r\n    };\r\n    TelemetryManager.prototype.incrementEventCount = function (event) {\r\n        var _a;\r\n        /*\r\n         * TODO, name cache event different?\r\n         * if type is cache event, change name\r\n         */\r\n        var eventName = event.eventName;\r\n        var eventCount = this.eventCountByCorrelationId[event.telemetryCorrelationId];\r\n        if (!eventCount) {\r\n            this.eventCountByCorrelationId[event.telemetryCorrelationId] = (_a = {},\r\n                _a[eventName] = 1,\r\n                _a);\r\n        }\r\n        else {\r\n            eventCount[eventName] = eventCount[eventName] ? eventCount[eventName] + 1 : 1;\r\n        }\r\n    };\r\n    TelemetryManager.prototype.getOrphanedEvents = function (correlationId) {\r\n        var _this = this;\r\n        return Object.keys(this.inProgressEvents)\r\n            .reduce(function (memo, eventKey) {\r\n            if (eventKey.indexOf(correlationId) !== -1) {\r\n                var event_1 = _this.inProgressEvents[eventKey];\r\n                delete _this.inProgressEvents[eventKey];\r\n                return __spreadArrays(memo, [event_1]);\r\n            }\r\n            return memo;\r\n        }, []);\r\n    };\r\n    return TelemetryManager;\r\n}());\r\nexport default TelemetryManager;\r\n//# sourceMappingURL=TelemetryManager.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { ScopeSet } from \"../ScopeSet\";\r\nimport { UrlUtils } from \"./UrlUtils\";\r\n/**\r\n * @hidden\r\n */\r\nvar AuthCacheUtils = /** @class */ (function () {\r\n    function AuthCacheUtils() {\r\n    }\r\n    AuthCacheUtils.filterTokenCacheItemsByScope = function (tokenCacheItems, requestScopes) {\r\n        return tokenCacheItems.filter(function (cacheItem) {\r\n            var cachedScopes = cacheItem.key.scopes.split(\" \");\r\n            var searchScopes = ScopeSet.removeDefaultScopes(requestScopes);\r\n            // If requestScopes contain only default scopes search for default scopes otherwise search for everything but default scopes\r\n            return searchScopes.length === 0 ? ScopeSet.containsScope(cachedScopes, requestScopes) : ScopeSet.containsScope(cachedScopes, searchScopes);\r\n        });\r\n    };\r\n    AuthCacheUtils.filterTokenCacheItemsByAuthority = function (tokenCacheItems, authority) {\r\n        return tokenCacheItems.filter(function (cacheItem) { return UrlUtils.CanonicalizeUri(cacheItem.key.authority) === authority; });\r\n    };\r\n    AuthCacheUtils.filterTokenCacheItemsByDomain = function (tokenCacheItems, requestDomain) {\r\n        return tokenCacheItems.filter(function (cacheItem) {\r\n            var cacheItemDomain = UrlUtils.GetUrlComponents(cacheItem.key.authority).HostNameAndPort;\r\n            return cacheItemDomain === requestDomain;\r\n        });\r\n    };\r\n    return AuthCacheUtils;\r\n}());\r\nexport { AuthCacheUtils };\r\n//# sourceMappingURL=AuthCacheUtils.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nimport { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { AccessTokenKey } from \"./cache/AccessTokenKey\";\r\nimport { AccessTokenValue } from \"./cache/AccessTokenValue\";\r\nimport { ServerRequestParameters } from \"./ServerRequestParameters\";\r\nimport { AuthorityType } from \"./authority/Authority\";\r\nimport { ClientInfo } from \"./ClientInfo\";\r\nimport { IdToken } from \"./IdToken\";\r\nimport { AuthCache } from \"./cache/AuthCache\";\r\nimport { Account } from \"./Account\";\r\nimport { ScopeSet } from \"./ScopeSet\";\r\nimport { StringUtils } from \"./utils/StringUtils\";\r\nimport { WindowUtils } from \"./utils/WindowUtils\";\r\nimport { TokenUtils } from \"./utils/TokenUtils\";\r\nimport { TimeUtils } from \"./utils/TimeUtils\";\r\nimport { UrlUtils } from \"./utils/UrlUtils\";\r\nimport { RequestUtils } from \"./utils/RequestUtils\";\r\nimport { ResponseUtils } from \"./utils/ResponseUtils\";\r\nimport { AuthorityFactory } from \"./authority/AuthorityFactory\";\r\nimport { buildConfiguration } from \"./Configuration\";\r\nimport { ClientConfigurationError } from \"./error/ClientConfigurationError\";\r\nimport { AuthError } from \"./error/AuthError\";\r\nimport { ClientAuthError, ClientAuthErrorMessage } from \"./error/ClientAuthError\";\r\nimport { ServerError } from \"./error/ServerError\";\r\nimport { InteractionRequiredAuthError } from \"./error/InteractionRequiredAuthError\";\r\nimport { buildResponseStateOnly } from \"./AuthResponse\";\r\nimport TelemetryManager from \"./telemetry/TelemetryManager\";\r\nimport { API_EVENT_IDENTIFIER } from \"./telemetry/ApiEvent\";\r\nimport { Constants, ServerHashParamKeys, ResponseTypes, TemporaryCacheKeys, PersistentCacheKeys, ErrorCacheKeys, FramePrefix } from \"./utils/Constants\";\r\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\r\nimport { TrustedAuthority } from \"./authority/TrustedAuthority\";\r\nimport { AuthCacheUtils } from \"./utils/AuthCacheUtils\";\r\n// default authority\r\nvar DEFAULT_AUTHORITY = \"https://login.microsoftonline.com/common\";\r\n/**\r\n * UserAgentApplication class\r\n *\r\n * Object Instance that the developer can use to make loginXX OR acquireTokenXX functions\r\n */\r\nvar UserAgentApplication = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * Constructor for the UserAgentApplication used to instantiate the UserAgentApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application.\r\n     * You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/&lt;Enter_the_Tenant_Info_Here&gt;.\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     *\r\n     * In Azure B2C, authority is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/&lt;policyName&gt;/\r\n     *\r\n     * @param {@link (Configuration:type)} configuration object for the MSAL UserAgentApplication instance\r\n     */\r\n    function UserAgentApplication(configuration) {\r\n        // callbacks for token/error\r\n        this.authResponseCallback = null;\r\n        this.tokenReceivedCallback = null;\r\n        this.errorReceivedCallback = null;\r\n        // Set the Configuration\r\n        this.config = buildConfiguration(configuration);\r\n        this.logger = this.config.system.logger;\r\n        this.clientId = this.config.auth.clientId;\r\n        this.inCookie = this.config.cache.storeAuthStateInCookie;\r\n        this.telemetryManager = this.getTelemetryManagerFromConfig(this.config.system.telemetry, this.clientId);\r\n        TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.auth.validateAuthority, this.config.auth.knownAuthorities);\r\n        AuthorityFactory.saveMetadataFromConfig(this.config.auth.authority, this.config.auth.authorityMetadata);\r\n        // if no authority is passed, set the default: \"https://login.microsoftonline.com/common\"\r\n        this.authority = this.config.auth.authority || DEFAULT_AUTHORITY;\r\n        // cache keys msal - typescript throws an error if any value other than \"localStorage\" or \"sessionStorage\" is passed\r\n        this.cacheStorage = new AuthCache(this.clientId, this.config.cache.cacheLocation, this.inCookie);\r\n        // Initialize window handling code\r\n        if (!window.activeRenewals) {\r\n            window.activeRenewals = {};\r\n        }\r\n        if (!window.renewStates) {\r\n            window.renewStates = [];\r\n        }\r\n        if (!window.callbackMappedToRenewStates) {\r\n            window.callbackMappedToRenewStates = {};\r\n        }\r\n        if (!window.promiseMappedToRenewStates) {\r\n            window.promiseMappedToRenewStates = {};\r\n        }\r\n        window.msal = this;\r\n        var urlHash = window.location.hash;\r\n        var urlContainsHash = UrlUtils.urlContainsHash(urlHash);\r\n        // check if back button is pressed\r\n        WindowUtils.checkIfBackButtonIsPressed(this.cacheStorage);\r\n        // On the server 302 - Redirect, handle this\r\n        if (urlContainsHash && this.cacheStorage.isInteractionInProgress(true)) {\r\n            var stateInfo = this.getResponseState(urlHash);\r\n            if (stateInfo.method === Constants.interactionTypeRedirect) {\r\n                this.handleRedirectAuthenticationResponse(urlHash);\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(UserAgentApplication.prototype, \"authority\", {\r\n        /**\r\n         * Method to manage the authority URL.\r\n         *\r\n         * @returns {string} authority\r\n         */\r\n        get: function () {\r\n            return this.authorityInstance.CanonicalAuthority;\r\n        },\r\n        /**\r\n         * setter for the authority URL\r\n         * @param {string} authority\r\n         */\r\n        // If the developer passes an authority, create an instance\r\n        set: function (val) {\r\n            this.authorityInstance = AuthorityFactory.CreateInstance(val, this.config.auth.validateAuthority);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Get the current authority instance from the MSAL configuration object\r\n     *\r\n     * @returns {@link Authority} authority instance\r\n     */\r\n    UserAgentApplication.prototype.getAuthorityInstance = function () {\r\n        return this.authorityInstance;\r\n    };\r\n    UserAgentApplication.prototype.handleRedirectCallback = function (authOrTokenCallback, errorReceivedCallback) {\r\n        if (!authOrTokenCallback) {\r\n            throw ClientConfigurationError.createInvalidCallbackObjectError(authOrTokenCallback);\r\n        }\r\n        // Set callbacks\r\n        if (errorReceivedCallback) {\r\n            this.tokenReceivedCallback = authOrTokenCallback;\r\n            this.errorReceivedCallback = errorReceivedCallback;\r\n            this.logger.warning(\"This overload for callback is deprecated - please change the format of the callbacks to a single callback as shown: (err: AuthError, response: AuthResponse).\");\r\n        }\r\n        else {\r\n            this.authResponseCallback = authOrTokenCallback;\r\n        }\r\n        if (this.redirectError) {\r\n            this.authErrorHandler(Constants.interactionTypeRedirect, this.redirectError, this.redirectResponse);\r\n        }\r\n        else if (this.redirectResponse) {\r\n            this.authResponseHandler(Constants.interactionTypeRedirect, this.redirectResponse);\r\n        }\r\n    };\r\n    /**\r\n     * Public API to verify if the URL contains the hash with known properties\r\n     * @param hash\r\n     */\r\n    UserAgentApplication.prototype.urlContainsHash = function (hash) {\r\n        this.logger.verbose(\"UrlContainsHash has been called\");\r\n        return UrlUtils.urlContainsHash(hash);\r\n    };\r\n    UserAgentApplication.prototype.authResponseHandler = function (interactionType, response, resolve) {\r\n        this.logger.verbose(\"AuthResponseHandler has been called\");\r\n        this.cacheStorage.setInteractionInProgress(false);\r\n        if (interactionType === Constants.interactionTypeRedirect) {\r\n            this.logger.verbose(\"Interaction type is redirect\");\r\n            if (this.errorReceivedCallback) {\r\n                this.logger.verbose(\"Two callbacks were provided to handleRedirectCallback, calling success callback with response\");\r\n                this.tokenReceivedCallback(response);\r\n            }\r\n            else if (this.authResponseCallback) {\r\n                this.logger.verbose(\"One callback was provided to handleRedirectCallback, calling authResponseCallback with response\");\r\n                this.authResponseCallback(null, response);\r\n            }\r\n        }\r\n        else if (interactionType === Constants.interactionTypePopup) {\r\n            this.logger.verbose(\"Interaction type is popup, resolving\");\r\n            resolve(response);\r\n        }\r\n        else {\r\n            throw ClientAuthError.createInvalidInteractionTypeError();\r\n        }\r\n    };\r\n    UserAgentApplication.prototype.authErrorHandler = function (interactionType, authErr, response, reject) {\r\n        this.logger.verbose(\"AuthErrorHandler has been called\");\r\n        // set interaction_status to complete\r\n        this.cacheStorage.setInteractionInProgress(false);\r\n        if (interactionType === Constants.interactionTypeRedirect) {\r\n            this.logger.verbose(\"Interaction type is redirect\");\r\n            if (this.errorReceivedCallback) {\r\n                this.logger.verbose(\"Two callbacks were provided to handleRedirectCallback, calling error callback\");\r\n                this.errorReceivedCallback(authErr, response.accountState);\r\n            }\r\n            else if (this.authResponseCallback) {\r\n                this.logger.verbose(\"One callback was provided to handleRedirectCallback, calling authResponseCallback with error\");\r\n                this.authResponseCallback(authErr, response);\r\n            }\r\n            else {\r\n                this.logger.verbose(\"handleRedirectCallback has not been called and no callbacks are registered, throwing error\");\r\n                throw authErr;\r\n            }\r\n        }\r\n        else if (interactionType === Constants.interactionTypePopup) {\r\n            this.logger.verbose(\"Interaction type is popup, rejecting\");\r\n            reject(authErr);\r\n        }\r\n        else {\r\n            throw ClientAuthError.createInvalidInteractionTypeError();\r\n        }\r\n    };\r\n    // #endregion\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     */\r\n    UserAgentApplication.prototype.loginRedirect = function (userRequest) {\r\n        this.logger.verbose(\"LoginRedirect has been called\");\r\n        // validate request\r\n        var request = RequestUtils.validateRequest(userRequest, true, this.clientId, Constants.interactionTypeRedirect);\r\n        this.acquireTokenInteractive(Constants.interactionTypeRedirect, true, request, null, null);\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenRedirect = function (userRequest) {\r\n        this.logger.verbose(\"AcquireTokenRedirect has been called\");\r\n        // validate request\r\n        var request = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypeRedirect);\r\n        this.acquireTokenInteractive(Constants.interactionTypeRedirect, false, request, null, null);\r\n    };\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    UserAgentApplication.prototype.loginPopup = function (userRequest) {\r\n        var _this = this;\r\n        this.logger.verbose(\"LoginPopup has been called\");\r\n        // validate request\r\n        var request = RequestUtils.validateRequest(userRequest, true, this.clientId, Constants.interactionTypePopup);\r\n        var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.LoginPopup);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.acquireTokenInteractive(Constants.interactionTypePopup, true, request, resolve, reject);\r\n        })\r\n            .then(function (resp) {\r\n            _this.logger.verbose(\"Successfully logged in\");\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\r\n            return resp;\r\n        })\r\n            .catch(function (error) {\r\n            _this.cacheStorage.resetTempCacheItems(request.state);\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\r\n            throw error;\r\n        });\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenPopup = function (userRequest) {\r\n        var _this = this;\r\n        this.logger.verbose(\"AcquireTokenPopup has been called\");\r\n        // validate request\r\n        var request = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypePopup);\r\n        var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.AcquireTokenPopup);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.acquireTokenInteractive(Constants.interactionTypePopup, false, request, resolve, reject);\r\n        })\r\n            .then(function (resp) {\r\n            _this.logger.verbose(\"Successfully acquired token\");\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\r\n            return resp;\r\n        })\r\n            .catch(function (error) {\r\n            _this.cacheStorage.resetTempCacheItems(request.state);\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\r\n            throw error;\r\n        });\r\n    };\r\n    // #region Acquire Token\r\n    /**\r\n     * Use when initiating the login process or when you want to obtain an access_token for your API,\r\n     * either by redirecting the user's browser window to the authorization endpoint or via opening a popup window in the user's browser.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenInteractive = function (interactionType, isLoginCall, request, resolve, reject) {\r\n        var _this = this;\r\n        this.logger.verbose(\"AcquireTokenInteractive has been called\");\r\n        // block the request if made from the hidden iframe\r\n        WindowUtils.blockReloadInHiddenIframes();\r\n        try {\r\n            this.cacheStorage.setInteractionInProgress(true);\r\n        }\r\n        catch (e) {\r\n            // If already in progress, do not proceed\r\n            var thrownError = isLoginCall ? ClientAuthError.createLoginInProgressError() : ClientAuthError.createAcquireTokenInProgressError();\r\n            var stateOnlyResponse = buildResponseStateOnly(this.getAccountState(request.state));\r\n            this.cacheStorage.resetTempCacheItems(request.state);\r\n            this.authErrorHandler(interactionType, thrownError, stateOnlyResponse, reject);\r\n            return;\r\n        }\r\n        if (interactionType === Constants.interactionTypeRedirect) {\r\n            this.cacheStorage.setItem(TemporaryCacheKeys.REDIRECT_REQUEST, \"\" + Constants.inProgress + Constants.resourceDelimiter + request.state);\r\n        }\r\n        // Get the account object if a session exists\r\n        var account;\r\n        if (request && request.account && !isLoginCall) {\r\n            account = request.account;\r\n            this.logger.verbose(\"Account set from request\");\r\n        }\r\n        else {\r\n            account = this.getAccount();\r\n            this.logger.verbose(\"Account set from MSAL Cache\");\r\n        }\r\n        // If no session exists, prompt the user to login.\r\n        if (!account && !ServerRequestParameters.isSSOParam(request)) {\r\n            if (isLoginCall) {\r\n                // extract ADAL id_token if exists\r\n                var adalIdToken = this.extractADALIdToken();\r\n                // silent login if ADAL id_token is retrieved successfully - SSO\r\n                if (adalIdToken && !request.scopes) {\r\n                    this.logger.info(\"ADAL's idToken exists. Extracting login information from ADAL's idToken\");\r\n                    var tokenRequest = this.buildIDTokenRequest(request);\r\n                    this.silentLogin = true;\r\n                    this.acquireTokenSilent(tokenRequest).then(function (response) {\r\n                        _this.silentLogin = false;\r\n                        _this.logger.info(\"Unified cache call is successful\");\r\n                        _this.authResponseHandler(interactionType, response, resolve);\r\n                        return;\r\n                    }, function (error) {\r\n                        _this.silentLogin = false;\r\n                        _this.logger.error(\"Error occurred during unified cache ATS: \" + error);\r\n                        // proceed to login since ATS failed\r\n                        _this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);\r\n                    });\r\n                }\r\n                // No ADAL token found, proceed to login\r\n                else {\r\n                    this.logger.verbose(\"Login call but no token found, proceed to login\");\r\n                    this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);\r\n                }\r\n            }\r\n            // AcquireToken call, but no account or context given, so throw error\r\n            else {\r\n                this.logger.verbose(\"AcquireToken call, no context or account given\");\r\n                this.logger.info(\"User login is required\");\r\n                var stateOnlyResponse = buildResponseStateOnly(this.getAccountState(request.state));\r\n                this.cacheStorage.resetTempCacheItems(request.state);\r\n                this.authErrorHandler(interactionType, ClientAuthError.createUserLoginRequiredError(), stateOnlyResponse, reject);\r\n                return;\r\n            }\r\n        }\r\n        // User session exists\r\n        else {\r\n            this.logger.verbose(\"User session exists, login not required\");\r\n            this.acquireTokenHelper(account, interactionType, isLoginCall, request, resolve, reject);\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     * Helper function to acquireToken\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenHelper = function (account, interactionType, isLoginCall, request, resolve, reject) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestSignature, serverAuthenticationRequest, acquireTokenAuthority, popUpWindow, responseType, loginStartPage, urlNavigate, hash, error_1, navigate, err_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"AcquireTokenHelper has been called\");\r\n                        this.logger.verbose(\"Interaction type: \" + interactionType + \". isLoginCall: \" + isLoginCall);\r\n                        requestSignature = request.scopes ? request.scopes.join(\" \").toLowerCase() : Constants.oidcScopes.join(\" \");\r\n                        this.logger.verbosePii(\"Request signature: \" + requestSignature);\r\n                        acquireTokenAuthority = (request && request.authority) ? AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata) : this.authorityInstance;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 11, , 12]);\r\n                        if (!!acquireTokenAuthority.hasCachedMetadata()) return [3 /*break*/, 3];\r\n                        this.logger.verbose(\"No cached metadata for authority\");\r\n                        return [4 /*yield*/, AuthorityFactory.saveMetadataFromNetwork(acquireTokenAuthority, this.telemetryManager, request.correlationId)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        this.logger.verbose(\"Cached metadata found for authority\");\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        responseType = isLoginCall ? ResponseTypes.id_token : this.getTokenType(account, request.scopes);\r\n                        loginStartPage = request.redirectStartPage || window.location.href;\r\n                        serverAuthenticationRequest = new ServerRequestParameters(acquireTokenAuthority, this.clientId, responseType, this.getRedirectUri(request && request.redirectUri), request.scopes, request.state, request.correlationId);\r\n                        this.logger.verbose(\"Finished building server authentication request\");\r\n                        this.updateCacheEntries(serverAuthenticationRequest, account, isLoginCall, loginStartPage);\r\n                        this.logger.verbose(\"Updating cache entries\");\r\n                        // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer\r\n                        serverAuthenticationRequest.populateQueryParams(account, request);\r\n                        this.logger.verbose(\"Query parameters populated from account\");\r\n                        urlNavigate = UrlUtils.createNavigateUrl(serverAuthenticationRequest) + Constants.response_mode_fragment;\r\n                        // set state in cache\r\n                        if (interactionType === Constants.interactionTypeRedirect) {\r\n                            if (!isLoginCall) {\r\n                                this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_ACQ_TOKEN, request.state), serverAuthenticationRequest.state, this.inCookie);\r\n                                this.logger.verbose(\"State cached for redirect\");\r\n                                this.logger.verbosePii(\"State cached: \" + serverAuthenticationRequest.state);\r\n                            }\r\n                            else {\r\n                                this.logger.verbose(\"Interaction type redirect but login call is true. State not cached\");\r\n                            }\r\n                        }\r\n                        else if (interactionType === Constants.interactionTypePopup) {\r\n                            window.renewStates.push(serverAuthenticationRequest.state);\r\n                            window.requestType = isLoginCall ? Constants.login : Constants.renewToken;\r\n                            this.logger.verbose(\"State saved to window\");\r\n                            this.logger.verbosePii(\"State saved: \" + serverAuthenticationRequest.state);\r\n                            // Register callback to capture results from server\r\n                            this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\r\n                        }\r\n                        else {\r\n                            this.logger.verbose(\"Invalid interaction error. State not cached\");\r\n                            throw ClientAuthError.createInvalidInteractionTypeError();\r\n                        }\r\n                        if (!(interactionType === Constants.interactionTypePopup)) return [3 /*break*/, 9];\r\n                        this.logger.verbose(\"Interaction type is popup. Generating popup window\");\r\n                        // Generate a popup window\r\n                        try {\r\n                            popUpWindow = this.openPopup(urlNavigate, \"msal\", Constants.popUpWidth, Constants.popUpHeight);\r\n                            // Push popup window handle onto stack for tracking\r\n                            WindowUtils.trackPopup(popUpWindow);\r\n                        }\r\n                        catch (e) {\r\n                            this.logger.info(ClientAuthErrorMessage.popUpWindowError.code + \":\" + ClientAuthErrorMessage.popUpWindowError.desc);\r\n                            this.cacheStorage.setItem(ErrorCacheKeys.ERROR, ClientAuthErrorMessage.popUpWindowError.code);\r\n                            this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, ClientAuthErrorMessage.popUpWindowError.desc);\r\n                            if (reject) {\r\n                                reject(ClientAuthError.createPopupWindowError());\r\n                                return [2 /*return*/];\r\n                            }\r\n                        }\r\n                        if (!popUpWindow) return [3 /*break*/, 8];\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, WindowUtils.monitorPopupForHash(popUpWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger)];\r\n                    case 6:\r\n                        hash = _a.sent();\r\n                        this.handleAuthenticationResponse(hash);\r\n                        // Request completed successfully, set to completed\r\n                        this.cacheStorage.setInteractionInProgress(false);\r\n                        this.logger.info(\"Closing popup window\");\r\n                        // TODO: Check how this can be extracted for any framework specific code?\r\n                        if (this.config.framework.isAngular) {\r\n                            this.broadcast(\"msal:popUpHashChanged\", hash);\r\n                        }\r\n                        WindowUtils.closePopups();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        error_1 = _a.sent();\r\n                        if (reject) {\r\n                            reject(error_1);\r\n                        }\r\n                        if (this.config.framework.isAngular) {\r\n                            this.broadcast(\"msal:popUpClosed\", error_1.errorCode + Constants.resourceDelimiter + error_1.errorMessage);\r\n                        }\r\n                        else {\r\n                            // Request failed, set to canceled\r\n                            this.cacheStorage.setInteractionInProgress(false);\r\n                            popUpWindow.close();\r\n                        }\r\n                        return [3 /*break*/, 8];\r\n                    case 8: return [3 /*break*/, 10];\r\n                    case 9:\r\n                        // If onRedirectNavigate is implemented, invoke it and provide urlNavigate\r\n                        if (request.onRedirectNavigate) {\r\n                            this.logger.verbose(\"Invoking onRedirectNavigate callback\");\r\n                            navigate = request.onRedirectNavigate(urlNavigate);\r\n                            // Returning false from onRedirectNavigate will stop navigation\r\n                            if (navigate !== false) {\r\n                                this.logger.verbose(\"onRedirectNavigate did not return false, navigating\");\r\n                                this.navigateWindow(urlNavigate);\r\n                            }\r\n                            else {\r\n                                this.logger.verbose(\"onRedirectNavigate returned false, stopping navigation\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Otherwise, perform navigation\r\n                            this.logger.verbose(\"Navigating window to urlNavigate\");\r\n                            this.navigateWindow(urlNavigate);\r\n                        }\r\n                        _a.label = 10;\r\n                    case 10: return [3 /*break*/, 12];\r\n                    case 11:\r\n                        err_1 = _a.sent();\r\n                        this.logger.error(err_1);\r\n                        this.cacheStorage.resetTempCacheItems(request.state);\r\n                        this.authErrorHandler(interactionType, ClientAuthError.createEndpointResolutionError(err_1.toString), buildResponseStateOnly(request.state), reject);\r\n                        if (popUpWindow) {\r\n                            popUpWindow.close();\r\n                        }\r\n                        return [3 /*break*/, 12];\r\n                    case 12: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * API interfacing idToken request when applications already have a session/hint acquired by authorization client applications\r\n     * @param request\r\n     */\r\n    UserAgentApplication.prototype.ssoSilent = function (request) {\r\n        this.logger.verbose(\"ssoSilent has been called\");\r\n        // throw an error on an empty request\r\n        if (!request) {\r\n            throw ClientConfigurationError.createEmptyRequestError();\r\n        }\r\n        // throw an error on no hints passed\r\n        if (!request.sid && !request.loginHint) {\r\n            throw ClientConfigurationError.createSsoSilentError();\r\n        }\r\n        return this.acquireTokenSilent(__assign(__assign({}, request), { scopes: Constants.oidcScopes }));\r\n    };\r\n    /**\r\n     * Use this function to obtain a token before every call to the API / resource provider\r\n     *\r\n     * MSAL return's a cached token when available\r\n     * Or it send's a request to the STS to obtain a new token using a hidden iframe.\r\n     *\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenSilent = function (userRequest) {\r\n        var _this = this;\r\n        this.logger.verbose(\"AcquireTokenSilent has been called\");\r\n        // validate the request\r\n        var request = RequestUtils.validateRequest(userRequest, false, this.clientId, Constants.interactionTypeSilent);\r\n        var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, API_EVENT_IDENTIFIER.AcquireTokenSilent);\r\n        var requestSignature = RequestUtils.createRequestSignature(request);\r\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n            var scope, account, adalIdToken, responseType, serverAuthenticationRequest, adalIdTokenObject, userContainedClaims, authErr, cacheResultResponse, logMessage, err_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // block the request if made from the hidden iframe\r\n                        WindowUtils.blockReloadInHiddenIframes();\r\n                        scope = request.scopes.join(\" \").toLowerCase();\r\n                        this.logger.verbosePii(\"Serialized scopes: \" + scope);\r\n                        if (request.account) {\r\n                            account = request.account;\r\n                            this.logger.verbose(\"Account set from request\");\r\n                        }\r\n                        else {\r\n                            account = this.getAccount();\r\n                            this.logger.verbose(\"Account set from MSAL Cache\");\r\n                        }\r\n                        adalIdToken = this.cacheStorage.getItem(Constants.adalIdToken);\r\n                        // In the event of no account being passed in the config, no session id, and no pre-existing adalIdToken, user will need to log in\r\n                        if (!account && !(request.sid || request.loginHint) && StringUtils.isEmpty(adalIdToken)) {\r\n                            this.logger.info(\"User login is required\");\r\n                            // The promise rejects with a UserLoginRequiredError, which should be caught and user should be prompted to log in interactively\r\n                            return [2 /*return*/, reject(ClientAuthError.createUserLoginRequiredError())];\r\n                        }\r\n                        responseType = this.getTokenType(account, request.scopes);\r\n                        this.logger.verbose(\"Response type: \" + responseType);\r\n                        serverAuthenticationRequest = new ServerRequestParameters(AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata), this.clientId, responseType, this.getRedirectUri(request.redirectUri), request.scopes, request.state, request.correlationId);\r\n                        this.logger.verbose(\"Finished building server authentication request\");\r\n                        // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer\r\n                        if (ServerRequestParameters.isSSOParam(request) || account) {\r\n                            serverAuthenticationRequest.populateQueryParams(account, request, null, true);\r\n                            this.logger.verbose(\"Query parameters populated from existing SSO or account\");\r\n                        }\r\n                        // if user didn't pass login_hint/sid and adal's idtoken is present, extract the login_hint from the adalIdToken\r\n                        else if (!account && !StringUtils.isEmpty(adalIdToken)) {\r\n                            adalIdTokenObject = TokenUtils.extractIdToken(adalIdToken);\r\n                            this.logger.verbose(\"ADAL's idToken exists. Extracting login information from ADAL's idToken to populate query parameters\");\r\n                            serverAuthenticationRequest.populateQueryParams(account, null, adalIdTokenObject, true);\r\n                        }\r\n                        else {\r\n                            this.logger.verbose(\"No additional query parameters added\");\r\n                        }\r\n                        userContainedClaims = request.claimsRequest || serverAuthenticationRequest.claimsValue;\r\n                        // If request.forceRefresh is set to true, force a request for a new token instead of getting it from the cache\r\n                        if (!userContainedClaims && !request.forceRefresh) {\r\n                            try {\r\n                                cacheResultResponse = this.getCachedToken(serverAuthenticationRequest, account);\r\n                            }\r\n                            catch (e) {\r\n                                authErr = e;\r\n                            }\r\n                        }\r\n                        if (!cacheResultResponse) return [3 /*break*/, 1];\r\n                        this.logger.verbose(\"Token found in cache lookup\");\r\n                        this.logger.verbosePii(\"Scopes found: \" + JSON.stringify(cacheResultResponse.scopes));\r\n                        resolve(cacheResultResponse);\r\n                        return [2 /*return*/, null];\r\n                    case 1:\r\n                        if (!authErr) return [3 /*break*/, 2];\r\n                        this.logger.infoPii(authErr.errorCode + \":\" + authErr.errorMessage);\r\n                        reject(authErr);\r\n                        return [2 /*return*/, null];\r\n                    case 2:\r\n                        logMessage = void 0;\r\n                        if (userContainedClaims) {\r\n                            logMessage = \"Skipped cache lookup since claims were given\";\r\n                        }\r\n                        else if (request.forceRefresh) {\r\n                            logMessage = \"Skipped cache lookup since request.forceRefresh option was set to true\";\r\n                        }\r\n                        else {\r\n                            logMessage = \"No valid token found in cache lookup\";\r\n                        }\r\n                        this.logger.verbose(logMessage);\r\n                        // Cache result can return null if cache is empty. In that case, set authority to default value if no authority is passed to the API.\r\n                        if (!serverAuthenticationRequest.authorityInstance) {\r\n                            serverAuthenticationRequest.authorityInstance = request.authority ?\r\n                                AuthorityFactory.CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata)\r\n                                : this.authorityInstance;\r\n                        }\r\n                        this.logger.verbosePii(\"Authority instance: \" + serverAuthenticationRequest.authority);\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 7, , 8]);\r\n                        if (!!serverAuthenticationRequest.authorityInstance.hasCachedMetadata()) return [3 /*break*/, 5];\r\n                        this.logger.verbose(\"No cached metadata for authority\");\r\n                        return [4 /*yield*/, AuthorityFactory.saveMetadataFromNetwork(serverAuthenticationRequest.authorityInstance, this.telemetryManager, request.correlationId)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.logger.verbose(\"Authority has been updated with endpoint discovery response\");\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        this.logger.verbose(\"Cached metadata found for authority\");\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        /*\r\n                         * refresh attempt with iframe\r\n                         * Already renewing for this scope, callback when we get the token.\r\n                         */\r\n                        if (window.activeRenewals[requestSignature]) {\r\n                            this.logger.verbose(\"Renewing token in progress. Registering callback\");\r\n                            // Active renewals contains the state for each renewal.\r\n                            this.registerCallback(window.activeRenewals[requestSignature], requestSignature, resolve, reject);\r\n                        }\r\n                        else {\r\n                            if (request.scopes && ScopeSet.onlyContainsOidcScopes(request.scopes)) {\r\n                                /*\r\n                                 * App uses idToken to send to api endpoints\r\n                                 * Default scope is tracked as OIDC scopes to store this token\r\n                                 */\r\n                                this.logger.verbose(\"OpenID Connect scopes only, renewing idToken\");\r\n                                this.silentLogin = true;\r\n                                this.renewIdToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);\r\n                            }\r\n                            else {\r\n                                // renew access token\r\n                                this.logger.verbose(\"Renewing access token\");\r\n                                this.renewToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        err_2 = _a.sent();\r\n                        this.logger.error(err_2);\r\n                        reject(ClientAuthError.createEndpointResolutionError(err_2.toString()));\r\n                        return [2 /*return*/, null];\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); })\r\n            .then(function (res) {\r\n            _this.logger.verbose(\"Successfully acquired token\");\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\r\n            return res;\r\n        })\r\n            .catch(function (error) {\r\n            _this.cacheStorage.resetTempCacheItems(request.state);\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\r\n            throw error;\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Popup Window Creation\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\r\n        this.logger.verbose(\"OpenPopup has been called\");\r\n        try {\r\n            /**\r\n             * adding winLeft and winTop to account for dual monitor\r\n             * using screenLeft and screenTop for IE8 and earlier\r\n             */\r\n            var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            var winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n             * using document.documentElement.clientWidth for IE8 and earlier\r\n             */\r\n            var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            var left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n            var top_1 = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n            // open the window\r\n            var popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top_1 + \", left=\" + left + \", scrollbars=yes\");\r\n            if (!popupWindow) {\r\n                throw ClientAuthError.createPopupWindowError();\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            return popupWindow;\r\n        }\r\n        catch (e) {\r\n            this.cacheStorage.setInteractionInProgress(false);\r\n            throw ClientAuthError.createPopupWindowError(e.toString());\r\n        }\r\n    };\r\n    // #endregion\r\n    // #region Iframe Management\r\n    /**\r\n     * @hidden\r\n     * Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left.\r\n     * registered when network errors occur and subsequent token requests for same resource are registered to the pending request.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.loadIframeTimeout = function (urlNavigate, frameName, requestSignature) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var expectedState, iframe, _a, hash, error_2;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        expectedState = window.activeRenewals[requestSignature];\r\n                        this.logger.verbosePii(\"Set loading state to pending for: \" + requestSignature + \":\" + expectedState);\r\n                        this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, expectedState), Constants.inProgress);\r\n                        if (!this.config.system.navigateFrameWait) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, WindowUtils.loadFrame(urlNavigate, frameName, this.config.system.navigateFrameWait, this.logger)];\r\n                    case 1:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        _a = WindowUtils.loadFrameSync(urlNavigate, frameName, this.logger);\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        iframe = _a;\r\n                        _b.label = 4;\r\n                    case 4:\r\n                        _b.trys.push([4, 6, , 7]);\r\n                        return [4 /*yield*/, WindowUtils.monitorIframeForHash(iframe.contentWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger)];\r\n                    case 5:\r\n                        hash = _b.sent();\r\n                        if (hash) {\r\n                            this.handleAuthenticationResponse(hash);\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        error_2 = _b.sent();\r\n                        if (this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, expectedState)) === Constants.inProgress) {\r\n                            // fail the iframe session if it's in pending state\r\n                            this.logger.verbose(\"Loading frame has timed out after: \" + (this.config.system.loadFrameTimeout / 1000) + \" seconds for scope/authority \" + requestSignature + \":\" + expectedState);\r\n                            // Error after timeout\r\n                            if (expectedState && window.callbackMappedToRenewStates[expectedState]) {\r\n                                window.callbackMappedToRenewStates[expectedState](null, error_2);\r\n                            }\r\n                            this.cacheStorage.removeItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, expectedState));\r\n                        }\r\n                        WindowUtils.removeHiddenIframe(iframe);\r\n                        throw error_2;\r\n                    case 7:\r\n                        WindowUtils.removeHiddenIframe(iframe);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region General Helpers\r\n    /**\r\n     * @hidden\r\n     * Used to redirect the browser to the STS authorization endpoint\r\n     * @param {string} urlNavigate - URL of the authorization endpoint\r\n     */\r\n    UserAgentApplication.prototype.navigateWindow = function (urlNavigate, popupWindow) {\r\n        // Navigate if valid URL\r\n        if (urlNavigate && !StringUtils.isEmpty(urlNavigate)) {\r\n            var navigateWindow = popupWindow ? popupWindow : window;\r\n            var logMessage = popupWindow ? \"Navigated Popup window to:\" + urlNavigate : \"Navigate to:\" + urlNavigate;\r\n            this.logger.infoPii(logMessage);\r\n            navigateWindow.location.assign(urlNavigate);\r\n        }\r\n        else {\r\n            this.logger.info(\"Navigate url is empty\");\r\n            throw AuthError.createUnexpectedError(\"Navigate url is empty\");\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Used to add the developer requested callback to the array of callbacks for the specified scopes. The updated array is stored on the window object\r\n     * @param {string} expectedState - Unique state identifier (guid).\r\n     * @param {string} scope - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {Function} resolve - The resolve function of the promise object.\r\n     * @param {Function} reject - The reject function of the promise object.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.registerCallback = function (expectedState, requestSignature, resolve, reject) {\r\n        var _this = this;\r\n        // track active renewals\r\n        window.activeRenewals[requestSignature] = expectedState;\r\n        // initialize callbacks mapped array\r\n        if (!window.promiseMappedToRenewStates[expectedState]) {\r\n            window.promiseMappedToRenewStates[expectedState] = [];\r\n        }\r\n        // indexing on the current state, push the callback params to callbacks mapped\r\n        window.promiseMappedToRenewStates[expectedState].push({ resolve: resolve, reject: reject });\r\n        // Store the server response in the current window??\r\n        if (!window.callbackMappedToRenewStates[expectedState]) {\r\n            window.callbackMappedToRenewStates[expectedState] = function (response, error) {\r\n                // reset active renewals\r\n                delete window.activeRenewals[requestSignature];\r\n                // for all promiseMappedtoRenewStates for a given 'state' - call the reject/resolve with error/token respectively\r\n                for (var i = 0; i < window.promiseMappedToRenewStates[expectedState].length; ++i) {\r\n                    try {\r\n                        if (error) {\r\n                            window.promiseMappedToRenewStates[expectedState][i].reject(error);\r\n                        }\r\n                        else if (response) {\r\n                            window.promiseMappedToRenewStates[expectedState][i].resolve(response);\r\n                        }\r\n                        else {\r\n                            _this.cacheStorage.resetTempCacheItems(expectedState);\r\n                            throw AuthError.createUnexpectedError(\"Error and response are both null\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _this.logger.warning(e);\r\n                    }\r\n                }\r\n                // reset\r\n                delete window.promiseMappedToRenewStates[expectedState];\r\n                delete window.callbackMappedToRenewStates[expectedState];\r\n            };\r\n        }\r\n    };\r\n    // #endregion\r\n    // #region Logout\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     */\r\n    UserAgentApplication.prototype.logout = function (correlationId) {\r\n        this.logger.verbose(\"Logout has been called\");\r\n        this.logoutAsync(correlationId);\r\n    };\r\n    /**\r\n     * Async version of logout(). Use to log out the current user.\r\n     * @param correlationId Request correlationId\r\n     */\r\n    UserAgentApplication.prototype.logoutAsync = function (correlationId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestCorrelationId, apiEvent, correlationIdParam, postLogoutQueryParam, urlNavigate, error_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        requestCorrelationId = correlationId || CryptoUtils.createNewGuid();\r\n                        apiEvent = this.telemetryManager.createAndStartApiEvent(requestCorrelationId, API_EVENT_IDENTIFIER.Logout);\r\n                        this.clearCache();\r\n                        this.account = null;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 5, , 6]);\r\n                        if (!!this.authorityInstance.hasCachedMetadata()) return [3 /*break*/, 3];\r\n                        this.logger.verbose(\"No cached metadata for authority\");\r\n                        return [4 /*yield*/, AuthorityFactory.saveMetadataFromNetwork(this.authorityInstance, this.telemetryManager, correlationId)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        this.logger.verbose(\"Cached metadata found for authority\");\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        correlationIdParam = \"client-request-id=\" + requestCorrelationId;\r\n                        postLogoutQueryParam = void 0;\r\n                        if (this.getPostLogoutRedirectUri()) {\r\n                            postLogoutQueryParam = \"&post_logout_redirect_uri=\" + encodeURIComponent(this.getPostLogoutRedirectUri());\r\n                            this.logger.verbose(\"redirectUri found and set\");\r\n                        }\r\n                        else {\r\n                            postLogoutQueryParam = \"\";\r\n                            this.logger.verbose(\"No redirectUri set for app. postLogoutQueryParam is empty\");\r\n                        }\r\n                        urlNavigate = void 0;\r\n                        if (this.authorityInstance.EndSessionEndpoint) {\r\n                            urlNavigate = this.authorityInstance.EndSessionEndpoint + \"?\" + correlationIdParam + postLogoutQueryParam;\r\n                            this.logger.verbose(\"EndSessionEndpoint found and urlNavigate set\");\r\n                            this.logger.verbosePii(\"urlNavigate set to: \" + this.authorityInstance.EndSessionEndpoint);\r\n                        }\r\n                        else {\r\n                            urlNavigate = this.authority + \"oauth2/v2.0/logout?\" + correlationIdParam + postLogoutQueryParam;\r\n                            this.logger.verbose(\"No endpoint, urlNavigate set to default\");\r\n                        }\r\n                        this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, true);\r\n                        this.logger.verbose(\"Navigating window to urlNavigate\");\r\n                        this.navigateWindow(urlNavigate);\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        error_3 = _a.sent();\r\n                        this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, false, error_3.errorCode);\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Clear all access tokens and ID tokens in the cache.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.clearCache = function () {\r\n        this.logger.verbose(\"Clearing cache\");\r\n        window.renewStates = [];\r\n        var tokenCacheItems = this.cacheStorage.getAllTokens(Constants.clientId, Constants.homeAccountIdentifier);\r\n        for (var i = 0; i < tokenCacheItems.length; i++) {\r\n            this.cacheStorage.removeItem(JSON.stringify(tokenCacheItems[i].key));\r\n        }\r\n        this.cacheStorage.resetCacheItems();\r\n        this.cacheStorage.clearMsalCookie();\r\n        this.logger.verbose(\"Cache cleared\");\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Clear a given access token from the cache.\r\n     *\r\n     * @param accessToken\r\n     */\r\n    UserAgentApplication.prototype.clearCacheForScope = function (accessToken) {\r\n        this.logger.verbose(\"Clearing access token from cache\");\r\n        var accessTokenItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\r\n        for (var i = 0; i < accessTokenItems.length; i++) {\r\n            var token = accessTokenItems[i];\r\n            if (token.value.accessToken === accessToken) {\r\n                this.cacheStorage.removeItem(JSON.stringify(token.key));\r\n                this.logger.verbosePii(\"Access token removed: \" + token.key);\r\n            }\r\n        }\r\n    };\r\n    // #endregion\r\n    // #region Response\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     * Checks if the redirect response is received from the STS. In case of redirect, the url fragment has either id_token, access_token or error.\r\n     * @param {string} hash - Hash passed from redirect page.\r\n     * @returns {Boolean} - true if response contains id_token, access_token or error, false otherwise.\r\n     */\r\n    UserAgentApplication.prototype.isCallback = function (hash) {\r\n        this.logger.info(\"isCallback will be deprecated in favor of urlContainsHash in MSAL.js v2.0.\");\r\n        this.logger.verbose(\"isCallback has been called\");\r\n        return UrlUtils.urlContainsHash(hash);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Used to call the constructor callback with the token/error\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    UserAgentApplication.prototype.processCallBack = function (hash, respStateInfo, parentCallback) {\r\n        this.logger.info(\"ProcessCallBack has been called. Processing callback from redirect response\");\r\n        // get the state info from the hash\r\n        var stateInfo = respStateInfo;\r\n        if (!stateInfo) {\r\n            this.logger.verbose(\"StateInfo is null, getting stateInfo from hash\");\r\n            stateInfo = this.getResponseState(hash);\r\n        }\r\n        var response;\r\n        var authErr;\r\n        // Save the token info from the hash\r\n        try {\r\n            response = this.saveTokenFromHash(hash, stateInfo);\r\n        }\r\n        catch (err) {\r\n            authErr = err;\r\n        }\r\n        try {\r\n            // Clear the cookie in the hash\r\n            this.cacheStorage.clearMsalCookie(stateInfo.state);\r\n            var accountState = this.getAccountState(stateInfo.state);\r\n            if (response) {\r\n                if ((stateInfo.requestType === Constants.renewToken) || response.accessToken) {\r\n                    if (window.parent !== window) {\r\n                        this.logger.verbose(\"Window is in iframe, acquiring token silently\");\r\n                    }\r\n                    else {\r\n                        this.logger.verbose(\"Acquiring token interactive in progress\");\r\n                    }\r\n                    this.logger.verbose(\"Response tokenType set to \" + ServerHashParamKeys.ACCESS_TOKEN);\r\n                    response.tokenType = ServerHashParamKeys.ACCESS_TOKEN;\r\n                }\r\n                else if (stateInfo.requestType === Constants.login) {\r\n                    this.logger.verbose(\"Response tokenType set to \" + ServerHashParamKeys.ID_TOKEN);\r\n                    response.tokenType = ServerHashParamKeys.ID_TOKEN;\r\n                }\r\n                if (!parentCallback) {\r\n                    this.logger.verbose(\"Setting redirectResponse\");\r\n                    this.redirectResponse = response;\r\n                    return;\r\n                }\r\n            }\r\n            else if (!parentCallback) {\r\n                this.logger.verbose(\"Response is null, setting redirectResponse with state\");\r\n                this.redirectResponse = buildResponseStateOnly(accountState);\r\n                this.redirectError = authErr;\r\n                this.cacheStorage.resetTempCacheItems(stateInfo.state);\r\n                return;\r\n            }\r\n            this.logger.verbose(\"Calling callback provided to processCallback\");\r\n            parentCallback(response, authErr);\r\n        }\r\n        catch (err) {\r\n            this.logger.error(\"Error occurred in token received callback function: \" + err);\r\n            throw ClientAuthError.createErrorInCallbackFunction(err.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * This method must be called for processing the response received from the STS if using popups or iframes. It extracts the hash, processes the token or error\r\n     * information and saves it in the cache. It then resolves the promises with the result.\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    UserAgentApplication.prototype.handleAuthenticationResponse = function (hash) {\r\n        this.logger.verbose(\"HandleAuthenticationResponse has been called\");\r\n        // retrieve the hash\r\n        var locationHash = hash || window.location.hash;\r\n        // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically\r\n        var stateInfo = this.getResponseState(locationHash);\r\n        this.logger.verbose(\"Obtained state from response\");\r\n        var tokenResponseCallback = window.callbackMappedToRenewStates[stateInfo.state];\r\n        this.processCallBack(locationHash, stateInfo, tokenResponseCallback);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * This method must be called for processing the response received from the STS when using redirect flows. It extracts the hash, processes the token or error\r\n     * information and saves it in the cache. The result can then be accessed by user registered callbacks.\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    UserAgentApplication.prototype.handleRedirectAuthenticationResponse = function (hash) {\r\n        this.logger.info(\"Returned from redirect url\");\r\n        this.logger.verbose(\"HandleRedirectAuthenticationResponse has been called\");\r\n        // clear hash from window\r\n        WindowUtils.clearUrlFragment(window);\r\n        this.logger.verbose(\"Window.location.hash cleared\");\r\n        // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically\r\n        var stateInfo = this.getResponseState(hash);\r\n        // if set to navigate to loginRequest page post login\r\n        if (this.config.auth.navigateToLoginRequestUrl && window.parent === window) {\r\n            this.logger.verbose(\"Window.parent is equal to window, not in popup or iframe. Navigation to login request url after login turned on\");\r\n            var loginRequestUrl = this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.LOGIN_REQUEST, stateInfo.state), this.inCookie);\r\n            // Redirect to home page if login request url is null (real null or the string null)\r\n            if (!loginRequestUrl || loginRequestUrl === \"null\") {\r\n                this.logger.error(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                window.location.assign(\"/\");\r\n                return;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Valid login request url obtained from cache\");\r\n                var currentUrl = UrlUtils.removeHashFromUrl(window.location.href);\r\n                var finalRedirectUrl = UrlUtils.removeHashFromUrl(loginRequestUrl);\r\n                if (currentUrl !== finalRedirectUrl) {\r\n                    this.logger.verbose(\"Current url is not login request url, navigating\");\r\n                    this.logger.verbosePii(\"CurrentUrl: \" + currentUrl + \", finalRedirectUrl: \" + finalRedirectUrl);\r\n                    window.location.assign(\"\" + finalRedirectUrl + hash);\r\n                    return;\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"Current url matches login request url\");\r\n                    var loginRequestUrlComponents = UrlUtils.GetUrlComponents(loginRequestUrl);\r\n                    if (loginRequestUrlComponents.Hash) {\r\n                        this.logger.verbose(\"Login request url contains hash, resetting non-msal hash\");\r\n                        window.location.hash = loginRequestUrlComponents.Hash;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (!this.config.auth.navigateToLoginRequestUrl) {\r\n            this.logger.verbose(\"Default navigation to start page after login turned off\");\r\n        }\r\n        this.processCallBack(hash, stateInfo, null);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Creates a stateInfo object from the URL fragment and returns it.\r\n     * @param {string} hash  -  Hash passed from redirect page\r\n     * @returns {TokenResponse} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getResponseState = function (hash) {\r\n        this.logger.verbose(\"GetResponseState has been called\");\r\n        var parameters = UrlUtils.deserializeHash(hash);\r\n        var stateResponse;\r\n        if (!parameters) {\r\n            throw AuthError.createUnexpectedError(\"Hash was not parsed correctly.\");\r\n        }\r\n        if (parameters.hasOwnProperty(ServerHashParamKeys.STATE)) {\r\n            this.logger.verbose(\"Hash contains state. Creating stateInfo object\");\r\n            var parsedState = RequestUtils.parseLibraryState(parameters[\"state\"]);\r\n            stateResponse = {\r\n                requestType: Constants.unknown,\r\n                state: parameters[\"state\"],\r\n                timestamp: parsedState.ts,\r\n                method: parsedState.method,\r\n                stateMatch: false\r\n            };\r\n        }\r\n        else {\r\n            throw AuthError.createUnexpectedError(\"Hash does not contain state.\");\r\n        }\r\n        /*\r\n         * async calls can fire iframe and login request at the same time if developer does not use the API as expected\r\n         * incoming callback needs to be looked up to find the request type\r\n         */\r\n        // loginRedirect\r\n        if (stateResponse.state === this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_LOGIN, stateResponse.state), this.inCookie) || stateResponse.state === this.silentAuthenticationState) {\r\n            this.logger.verbose(\"State matches cached state, setting requestType to login\");\r\n            stateResponse.requestType = Constants.login;\r\n            stateResponse.stateMatch = true;\r\n            return stateResponse;\r\n        }\r\n        // acquireTokenRedirect\r\n        else if (stateResponse.state === this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_ACQ_TOKEN, stateResponse.state), this.inCookie)) {\r\n            this.logger.verbose(\"State matches cached state, setting requestType to renewToken\");\r\n            stateResponse.requestType = Constants.renewToken;\r\n            stateResponse.stateMatch = true;\r\n            return stateResponse;\r\n        }\r\n        // external api requests may have many renewtoken requests for different resource\r\n        if (!stateResponse.stateMatch) {\r\n            this.logger.verbose(\"State does not match cached state, setting requestType to type from window\");\r\n            stateResponse.requestType = window.requestType;\r\n            var statesInParentContext = window.renewStates;\r\n            for (var i = 0; i < statesInParentContext.length; i++) {\r\n                if (statesInParentContext[i] === stateResponse.state) {\r\n                    this.logger.verbose(\"Matching state found for request\");\r\n                    stateResponse.stateMatch = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!stateResponse.stateMatch) {\r\n                this.logger.verbose(\"Matching state not found for request\");\r\n            }\r\n        }\r\n        return stateResponse;\r\n    };\r\n    // #endregion\r\n    // #region Token Processing (Extract to TokenProcessing.ts)\r\n    /**\r\n     * @hidden\r\n     * Used to get token for the specified set of scopes from the cache\r\n     * @param {@link ServerRequestParameters} - Request sent to the STS to obtain an id_token/access_token\r\n     * @param {Account} account - Account for which the scopes were requested\r\n     */\r\n    UserAgentApplication.prototype.getCachedToken = function (serverAuthenticationRequest, account) {\r\n        this.logger.verbose(\"GetCachedToken has been called\");\r\n        var scopes = serverAuthenticationRequest.scopes;\r\n        /**\r\n         * Id Token should be returned in every acquireTokenSilent call. The only exception is a response_type = token\r\n         * request when a valid ID Token is not present in the cache.\r\n         */\r\n        var idToken = this.getCachedIdToken(serverAuthenticationRequest, account);\r\n        var authResponse = this.getCachedAccessToken(serverAuthenticationRequest, account, scopes);\r\n        var accountState = this.getAccountState(serverAuthenticationRequest.state);\r\n        return ResponseUtils.buildAuthResponse(idToken, authResponse, serverAuthenticationRequest, account, scopes, accountState);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Uses passed in authority to further filter an array of tokenCacheItems until only the token being searched for remains, then returns that tokenCacheItem.\r\n     * This method will throw if authority filtering still yields multiple matching tokens and will return null if not tokens match the authority passed in.\r\n     *\r\n     * @param authority\r\n     * @param tokenCacheItems\r\n     * @param request\r\n     * @param requestScopes\r\n     * @param tokenType\r\n     */\r\n    UserAgentApplication.prototype.getTokenCacheItemByAuthority = function (authority, tokenCacheItems, requestScopes, tokenType) {\r\n        var _this = this;\r\n        var filteredAuthorityItems;\r\n        if (UrlUtils.isCommonAuthority(authority) || UrlUtils.isOrganizationsAuthority(authority) || UrlUtils.isConsumersAuthority(authority)) {\r\n            filteredAuthorityItems = AuthCacheUtils.filterTokenCacheItemsByDomain(tokenCacheItems, UrlUtils.GetUrlComponents(authority).HostNameAndPort);\r\n        }\r\n        else {\r\n            filteredAuthorityItems = AuthCacheUtils.filterTokenCacheItemsByAuthority(tokenCacheItems, authority);\r\n        }\r\n        if (filteredAuthorityItems.length === 1) {\r\n            return filteredAuthorityItems[0];\r\n        }\r\n        else if (filteredAuthorityItems.length > 1) {\r\n            this.logger.warning(\"Multiple matching tokens found. Cleaning cache and requesting a new token.\");\r\n            filteredAuthorityItems.forEach(function (accessTokenCacheItem) {\r\n                _this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n            });\r\n            return null;\r\n        }\r\n        else {\r\n            this.logger.verbose(\"No matching tokens of type \" + tokenType + \" found\");\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @hidden\r\n     *\r\n     * Searches the token cache for an ID Token that matches the request parameter and returns it as an IdToken object.\r\n     *\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    UserAgentApplication.prototype.getCachedIdToken = function (serverAuthenticationRequest, account) {\r\n        this.logger.verbose(\"Getting all cached tokens of type ID Token\");\r\n        var idTokenCacheItems = this.cacheStorage.getAllIdTokens(this.clientId, account ? account.homeAccountIdentifier : null);\r\n        var matchAuthority = serverAuthenticationRequest.authority || this.authority;\r\n        var idTokenCacheItem = this.getTokenCacheItemByAuthority(matchAuthority, idTokenCacheItems, null, ServerHashParamKeys.ID_TOKEN);\r\n        if (idTokenCacheItem) {\r\n            this.logger.verbose(\"Evaluating ID token found\");\r\n            var idTokenIsStillValid = this.evaluateTokenExpiration(idTokenCacheItem);\r\n            if (idTokenIsStillValid) {\r\n                this.logger.verbose(\"ID token expiration is within offset, using ID token found in cache\");\r\n                var idTokenValue = idTokenCacheItem.value;\r\n                if (idTokenValue) {\r\n                    this.logger.verbose(\"ID Token found in cache is valid and unexpired\");\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"ID Token found in cache is invalid\");\r\n                }\r\n                return (idTokenValue) ? new IdToken(idTokenValue.idToken) : null;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Cached ID token is expired, removing from cache\");\r\n                this.cacheStorage.removeItem(JSON.stringify(idTokenCacheItem.key));\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"No tokens found\");\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @hidden\r\n     *\r\n     * Searches the token cache for an access token that matches the request parameters and returns it as an AuthResponse.\r\n     *\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     * @param scopes\r\n     */\r\n    UserAgentApplication.prototype.getCachedAccessToken = function (serverAuthenticationRequest, account, scopes) {\r\n        this.logger.verbose(\"Getting all cached tokens of type Access Token\");\r\n        var tokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, account ? account.homeAccountIdentifier : null);\r\n        var scopeFilteredTokenCacheItems = AuthCacheUtils.filterTokenCacheItemsByScope(tokenCacheItems, scopes);\r\n        var matchAuthority = serverAuthenticationRequest.authority || this.authority;\r\n        // serverAuthenticationRequest.authority can only be common or organizations if not null\r\n        var accessTokenCacheItem = this.getTokenCacheItemByAuthority(matchAuthority, scopeFilteredTokenCacheItems, scopes, ServerHashParamKeys.ACCESS_TOKEN);\r\n        if (!accessTokenCacheItem) {\r\n            this.logger.verbose(\"No matching token found when filtering by scope and authority\");\r\n            return null;\r\n        }\r\n        else {\r\n            serverAuthenticationRequest.authorityInstance = AuthorityFactory.CreateInstance(accessTokenCacheItem.key.authority, this.config.auth.validateAuthority);\r\n            this.logger.verbose(\"Evaluating access token found\");\r\n            var tokenIsStillValid = this.evaluateTokenExpiration(accessTokenCacheItem);\r\n            // The response value will stay null if token retrieved from the cache is expired, otherwise it will be populated with said token's data\r\n            if (tokenIsStillValid) {\r\n                this.logger.verbose(\"Access token expiration is within offset, using access token found in cache\");\r\n                var responseAccount = account || this.getAccount();\r\n                if (!responseAccount) {\r\n                    throw AuthError.createUnexpectedError(\"Account should not be null here.\");\r\n                }\r\n                var aState = this.getAccountState(serverAuthenticationRequest.state);\r\n                var response = {\r\n                    uniqueId: \"\",\r\n                    tenantId: \"\",\r\n                    tokenType: ServerHashParamKeys.ACCESS_TOKEN,\r\n                    idToken: null,\r\n                    idTokenClaims: null,\r\n                    accessToken: accessTokenCacheItem.value.accessToken,\r\n                    scopes: accessTokenCacheItem.key.scopes.split(\" \"),\r\n                    expiresOn: new Date(Number(accessTokenCacheItem.value.expiresIn) * 1000),\r\n                    account: responseAccount,\r\n                    accountState: aState,\r\n                    fromCache: true\r\n                };\r\n                return response;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Access token expired, removing from cache\");\r\n                this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if the token passed in is within the acceptable expiration time offset, false if it is expired.\r\n     * @param tokenCacheItem\r\n     * @param serverAuthenticationRequest\r\n     */\r\n    UserAgentApplication.prototype.evaluateTokenExpiration = function (tokenCacheItem) {\r\n        var expiration = Number(tokenCacheItem.value.expiresIn);\r\n        return TokenUtils.validateExpirationIsWithinOffset(expiration, this.config.system.tokenRenewalOffsetSeconds);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Check if ADAL id_token exists and return if exists.\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.extractADALIdToken = function () {\r\n        this.logger.verbose(\"ExtractADALIdToken has been called\");\r\n        var adalIdToken = this.cacheStorage.getItem(Constants.adalIdToken);\r\n        return (!StringUtils.isEmpty(adalIdToken)) ? TokenUtils.extractIdToken(adalIdToken) : null;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Acquires access token using a hidden iframe.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.renewToken = function (requestSignature, resolve, reject, account, serverAuthenticationRequest) {\r\n        this.logger.verbose(\"RenewToken has been called\");\r\n        this.logger.verbosePii(\"RenewToken scope and authority: \" + requestSignature);\r\n        var frameName = WindowUtils.generateFrameName(FramePrefix.TOKEN_FRAME, requestSignature);\r\n        WindowUtils.addHiddenIFrame(frameName, this.logger);\r\n        this.updateCacheEntries(serverAuthenticationRequest, account, false);\r\n        this.logger.verbosePii(\"RenewToken expected state: \" + serverAuthenticationRequest.state);\r\n        // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\r\n        var urlNavigate = UrlUtils.urlRemoveQueryStringParameter(UrlUtils.createNavigateUrl(serverAuthenticationRequest), Constants.prompt) + Constants.prompt_none + Constants.response_mode_fragment;\r\n        window.renewStates.push(serverAuthenticationRequest.state);\r\n        window.requestType = Constants.renewToken;\r\n        this.logger.verbose(\"Set window.renewState and requestType\");\r\n        this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\r\n        this.logger.infoPii(\"Navigate to: \" + urlNavigate);\r\n        this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(function (error) { return reject(error); });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Renews idtoken for app's own backend when clientId is passed as a single scope in the scopes array.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.renewIdToken = function (requestSignature, resolve, reject, account, serverAuthenticationRequest) {\r\n        this.logger.info(\"RenewIdToken has been called\");\r\n        var frameName = WindowUtils.generateFrameName(FramePrefix.ID_TOKEN_FRAME, requestSignature);\r\n        WindowUtils.addHiddenIFrame(frameName, this.logger);\r\n        this.updateCacheEntries(serverAuthenticationRequest, account, false);\r\n        this.logger.verbose(\"RenewIdToken expected state: \" + serverAuthenticationRequest.state);\r\n        // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\r\n        var urlNavigate = UrlUtils.urlRemoveQueryStringParameter(UrlUtils.createNavigateUrl(serverAuthenticationRequest), Constants.prompt) + Constants.prompt_none + Constants.response_mode_fragment;\r\n        if (this.silentLogin) {\r\n            this.logger.verbose(\"Silent login is true, set silentAuthenticationState\");\r\n            window.requestType = Constants.login;\r\n            this.silentAuthenticationState = serverAuthenticationRequest.state;\r\n        }\r\n        else {\r\n            this.logger.verbose(\"Not silent login, set window.renewState and requestType\");\r\n            window.requestType = Constants.renewToken;\r\n            window.renewStates.push(serverAuthenticationRequest.state);\r\n        }\r\n        // note: scope here is clientId\r\n        this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\r\n        this.logger.infoPii(\"Navigate to:\\\" \" + urlNavigate);\r\n        this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(function (error) { return reject(error); });\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * This method builds an Access Token Cache item and saves it to the cache, returning the original\r\n     * AuthResponse augmented with a parsed expiresOn attribute.\r\n     *\r\n     * @param response The AuthResponse object that contains the token to be saved\r\n     * @param authority The authority under which the ID token will be cached\r\n     * @param scopes The scopes to be added to the cache item key (undefined for ID token cache items)\r\n     * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\r\n     * @param expiration Token expiration timestamp\r\n     */\r\n    UserAgentApplication.prototype.saveToken = function (response, authority, scopes, clientInfo, expiration) {\r\n        var accessTokenKey = new AccessTokenKey(authority, this.clientId, scopes, clientInfo.uid, clientInfo.utid);\r\n        var accessTokenValue = new AccessTokenValue(response.accessToken, response.idToken.rawIdToken, expiration.toString(), clientInfo.encodeClientInfo());\r\n        this.cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\r\n        if (expiration) {\r\n            this.logger.verbose(\"New expiration set for token\");\r\n            response.expiresOn = new Date(expiration * 1000);\r\n        }\r\n        else {\r\n            this.logger.error(\"Could not parse expiresIn parameter for access token\");\r\n        }\r\n        return response;\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * This method sets up the elements of an ID Token cache item and calls saveToken to save it in\r\n     * Access Token Cache item format for the client application to use.\r\n     *\r\n     * @param response The AuthResponse object that will be used to build the cache item\r\n     * @param authority The authority under which the ID token will be cached\r\n     * @param parameters The response's Hash Params, which contain the ID token returned from the server\r\n     * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\r\n     * @param idTokenObj ID Token object from which the ID token's expiration is extracted\r\n     */\r\n    /* tslint:disable:no-string-literal */\r\n    UserAgentApplication.prototype.saveIdToken = function (response, authority, parameters, clientInfo, idTokenObj) {\r\n        this.logger.verbose(\"SaveIdToken has been called\");\r\n        var idTokenResponse = __assign({}, response);\r\n        // Scopes are undefined so they don't show up in ID token cache key\r\n        var scopes;\r\n        idTokenResponse.scopes = Constants.oidcScopes;\r\n        idTokenResponse.accessToken = parameters[ServerHashParamKeys.ID_TOKEN];\r\n        var expiration = Number(idTokenObj.expiration);\r\n        // Set ID Token item in cache\r\n        this.logger.verbose(\"Saving ID token to cache\");\r\n        return this.saveToken(idTokenResponse, authority, scopes, clientInfo, expiration);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * This method sets up the elements of an Access Token cache item and calls saveToken to save it to the cache\r\n     *\r\n     * @param response The AuthResponse object that will be used to build the cache item\r\n     * @param authority The authority under which the access token will be cached\r\n     * @param parameters The response's Hash Params, which contain the access token returned from the server\r\n     * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\r\n     */\r\n    /* tslint:disable:no-string-literal */\r\n    UserAgentApplication.prototype.saveAccessToken = function (response, authority, parameters, clientInfo) {\r\n        this.logger.verbose(\"SaveAccessToken has been called\");\r\n        var accessTokenResponse = __assign({}, response);\r\n        // read the scopes\r\n        var scope = parameters[ServerHashParamKeys.SCOPE];\r\n        var consentedScopes = scope.split(\" \");\r\n        // retrieve all access tokens from the cache, remove the dup scopes\r\n        var accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, authority);\r\n        this.logger.verbose(\"Retrieving all access tokens from cache and removing duplicates\");\r\n        for (var i = 0; i < accessTokenCacheItems.length; i++) {\r\n            var accessTokenCacheItem = accessTokenCacheItems[i];\r\n            if (accessTokenCacheItem.key.homeAccountIdentifier === response.account.homeAccountIdentifier) {\r\n                var cachedScopes = accessTokenCacheItem.key.scopes.split(\" \");\r\n                if (ScopeSet.isIntersectingScopes(cachedScopes, consentedScopes)) {\r\n                    this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n                }\r\n            }\r\n        }\r\n        accessTokenResponse.accessToken = parameters[ServerHashParamKeys.ACCESS_TOKEN];\r\n        accessTokenResponse.scopes = consentedScopes;\r\n        var expiresIn = TimeUtils.parseExpiresIn(parameters[ServerHashParamKeys.EXPIRES_IN]);\r\n        var parsedState = RequestUtils.parseLibraryState(parameters[ServerHashParamKeys.STATE]);\r\n        var expiration = parsedState.ts + expiresIn;\r\n        this.logger.verbose(\"Saving access token to cache\");\r\n        return this.saveToken(accessTokenResponse, authority, scope, clientInfo, expiration);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the account object.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.saveTokenFromHash = function (hash, stateInfo) {\r\n        this.logger.verbose(\"SaveTokenFromHash has been called\");\r\n        this.logger.info(\"State status: \" + stateInfo.stateMatch + \"; Request type: \" + stateInfo.requestType);\r\n        var response = {\r\n            uniqueId: \"\",\r\n            tenantId: \"\",\r\n            tokenType: \"\",\r\n            idToken: null,\r\n            idTokenClaims: null,\r\n            accessToken: null,\r\n            scopes: [],\r\n            expiresOn: null,\r\n            account: null,\r\n            accountState: \"\",\r\n            fromCache: false\r\n        };\r\n        var error;\r\n        var hashParams = UrlUtils.deserializeHash(hash);\r\n        var authorityKey = \"\";\r\n        var acquireTokenAccountKey = \"\";\r\n        var idTokenObj = null;\r\n        // If server returns an error\r\n        if (hashParams.hasOwnProperty(ServerHashParamKeys.ERROR_DESCRIPTION) || hashParams.hasOwnProperty(ServerHashParamKeys.ERROR)) {\r\n            this.logger.verbose(\"Server returned an error\");\r\n            this.logger.infoPii(\"Error : \" + hashParams[ServerHashParamKeys.ERROR] + \"; Error description: \" + hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\r\n            this.cacheStorage.setItem(ErrorCacheKeys.ERROR, hashParams[ServerHashParamKeys.ERROR]);\r\n            this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\r\n            // login\r\n            if (stateInfo.requestType === Constants.login) {\r\n                this.logger.verbose(\"RequestType is login, caching login error, generating authorityKey\");\r\n                this.cacheStorage.setItem(ErrorCacheKeys.LOGIN_ERROR, hashParams[ServerHashParamKeys.ERROR_DESCRIPTION] + \":\" + hashParams[ServerHashParamKeys.ERROR]);\r\n                authorityKey = AuthCache.generateAuthorityKey(stateInfo.state);\r\n            }\r\n            // acquireToken\r\n            if (stateInfo.requestType === Constants.renewToken) {\r\n                this.logger.verbose(\"RequestType is renewToken, generating acquireTokenAccountKey\");\r\n                authorityKey = AuthCache.generateAuthorityKey(stateInfo.state);\r\n                var account = this.getAccount();\r\n                var accountId = void 0;\r\n                if (account && !StringUtils.isEmpty(account.homeAccountIdentifier)) {\r\n                    accountId = account.homeAccountIdentifier;\r\n                    this.logger.verbose(\"AccountId is set\");\r\n                }\r\n                else {\r\n                    accountId = Constants.no_account;\r\n                    this.logger.verbose(\"AccountId is set as no_account\");\r\n                }\r\n                acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountId, stateInfo.state);\r\n            }\r\n            var hashErr = hashParams[ServerHashParamKeys.ERROR];\r\n            var hashErrDesc = hashParams[ServerHashParamKeys.ERROR_DESCRIPTION];\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(hashErr) ||\r\n                InteractionRequiredAuthError.isInteractionRequiredError(hashErrDesc)) {\r\n                error = new InteractionRequiredAuthError(hashParams[ServerHashParamKeys.ERROR], hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\r\n            }\r\n            else {\r\n                error = new ServerError(hashParams[ServerHashParamKeys.ERROR], hashParams[ServerHashParamKeys.ERROR_DESCRIPTION]);\r\n            }\r\n        }\r\n        // If the server returns \"Success\"\r\n        else {\r\n            this.logger.verbose(\"Server returns success\");\r\n            // Verify the state from redirect and record tokens to storage if exists\r\n            if (stateInfo.stateMatch) {\r\n                this.logger.info(\"State is right\");\r\n                if (hashParams.hasOwnProperty(ServerHashParamKeys.SESSION_STATE)) {\r\n                    this.logger.verbose(\"Fragment has session state, caching\");\r\n                    this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.SESSION_STATE, stateInfo.state), hashParams[ServerHashParamKeys.SESSION_STATE]);\r\n                }\r\n                response.accountState = this.getAccountState(stateInfo.state);\r\n                var clientInfo = void 0;\r\n                // Process access_token\r\n                if (hashParams.hasOwnProperty(ServerHashParamKeys.ACCESS_TOKEN)) {\r\n                    this.logger.info(\"Fragment has access token\");\r\n                    response.accessToken = hashParams[ServerHashParamKeys.ACCESS_TOKEN];\r\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.SCOPE)) {\r\n                        response.scopes = hashParams[ServerHashParamKeys.SCOPE].split(\" \");\r\n                    }\r\n                    // retrieve the id_token from response if present\r\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.ID_TOKEN)) {\r\n                        this.logger.verbose(\"Fragment has id_token\");\r\n                        idTokenObj = new IdToken(hashParams[ServerHashParamKeys.ID_TOKEN]);\r\n                    }\r\n                    else {\r\n                        this.logger.verbose(\"No idToken on fragment, getting idToken from cache\");\r\n                        idTokenObj = new IdToken(this.cacheStorage.getItem(PersistentCacheKeys.IDTOKEN));\r\n                    }\r\n                    response = ResponseUtils.setResponseIdToken(response, idTokenObj);\r\n                    // set authority\r\n                    var authority = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);\r\n                    this.logger.verbose(\"Got authority from cache\");\r\n                    // retrieve client_info - if it is not found, generate the uid and utid from idToken\r\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.CLIENT_INFO)) {\r\n                        this.logger.verbose(\"Fragment has clientInfo\");\r\n                        clientInfo = new ClientInfo(hashParams[ServerHashParamKeys.CLIENT_INFO], authority);\r\n                    }\r\n                    else if (this.authorityInstance.AuthorityType === AuthorityType.Adfs) {\r\n                        clientInfo = ClientInfo.createClientInfoFromIdToken(idTokenObj, authority);\r\n                    }\r\n                    else {\r\n                        this.logger.warning(\"ClientInfo not received in the response from AAD\");\r\n                    }\r\n                    response.account = Account.createAccount(idTokenObj, clientInfo);\r\n                    this.logger.verbose(\"Account object created from response\");\r\n                    var accountKey = void 0;\r\n                    if (response.account && !StringUtils.isEmpty(response.account.homeAccountIdentifier)) {\r\n                        this.logger.verbose(\"AccountKey set\");\r\n                        accountKey = response.account.homeAccountIdentifier;\r\n                    }\r\n                    else {\r\n                        this.logger.verbose(\"AccountKey set as no_account\");\r\n                        accountKey = Constants.no_account;\r\n                    }\r\n                    acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountKey, stateInfo.state);\r\n                    var acquireTokenAccountKey_noaccount = AuthCache.generateAcquireTokenAccountKey(Constants.no_account, stateInfo.state);\r\n                    this.logger.verbose(\"AcquireTokenAccountKey generated\");\r\n                    var cachedAccount = this.cacheStorage.getItem(acquireTokenAccountKey);\r\n                    var acquireTokenAccount = void 0;\r\n                    // Check with the account in the Cache\r\n                    if (!StringUtils.isEmpty(cachedAccount)) {\r\n                        acquireTokenAccount = JSON.parse(cachedAccount);\r\n                        this.logger.verbose(\"AcquireToken request account retrieved from cache\");\r\n                        if (response.account && acquireTokenAccount && Account.compareAccounts(response.account, acquireTokenAccount)) {\r\n                            response = this.saveAccessToken(response, authority, hashParams, clientInfo);\r\n                            this.logger.info(\"The user object received in the response is the same as the one passed in the acquireToken request\");\r\n                        }\r\n                        else {\r\n                            this.logger.warning(\"The account object created from the response is not the same as the one passed in the acquireToken request\");\r\n                        }\r\n                    }\r\n                    else if (!StringUtils.isEmpty(this.cacheStorage.getItem(acquireTokenAccountKey_noaccount))) {\r\n                        this.logger.verbose(\"No acquireToken account retrieved from cache\");\r\n                        response = this.saveAccessToken(response, authority, hashParams, clientInfo);\r\n                    }\r\n                }\r\n                // Process id_token\r\n                if (hashParams.hasOwnProperty(ServerHashParamKeys.ID_TOKEN)) {\r\n                    this.logger.info(\"Fragment has idToken\");\r\n                    // set the idToken\r\n                    idTokenObj = new IdToken(hashParams[ServerHashParamKeys.ID_TOKEN]);\r\n                    // set authority\r\n                    var authority = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);\r\n                    response = ResponseUtils.setResponseIdToken(response, idTokenObj);\r\n                    if (hashParams.hasOwnProperty(ServerHashParamKeys.CLIENT_INFO)) {\r\n                        this.logger.verbose(\"Fragment has clientInfo\");\r\n                        clientInfo = new ClientInfo(hashParams[ServerHashParamKeys.CLIENT_INFO], authority);\r\n                    }\r\n                    else if (this.authorityInstance.AuthorityType === AuthorityType.Adfs) {\r\n                        clientInfo = ClientInfo.createClientInfoFromIdToken(idTokenObj, authority);\r\n                    }\r\n                    else {\r\n                        this.logger.warning(\"ClientInfo not received in the response from AAD\");\r\n                    }\r\n                    this.account = Account.createAccount(idTokenObj, clientInfo);\r\n                    response.account = this.account;\r\n                    this.logger.verbose(\"Account object created from response\");\r\n                    if (idTokenObj && idTokenObj.nonce) {\r\n                        this.logger.verbose(\"IdToken has nonce\");\r\n                        // check nonce integrity if idToken has nonce - throw an error if not matched\r\n                        var cachedNonce = this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.NONCE_IDTOKEN, stateInfo.state), this.inCookie);\r\n                        if (idTokenObj.nonce !== cachedNonce) {\r\n                            this.account = null;\r\n                            this.cacheStorage.setItem(ErrorCacheKeys.LOGIN_ERROR, \"Nonce Mismatch. Expected Nonce: \" + cachedNonce + \",\" + \"Actual Nonce: \" + idTokenObj.nonce);\r\n                            this.logger.error(\"Nonce Mismatch. Expected Nonce: \" + cachedNonce + \", Actual Nonce: \" + idTokenObj.nonce);\r\n                            error = ClientAuthError.createNonceMismatchError(cachedNonce, idTokenObj.nonce);\r\n                        }\r\n                        // Save the token\r\n                        else {\r\n                            this.logger.verbose(\"Nonce matches, saving idToken to cache\");\r\n                            this.cacheStorage.setItem(PersistentCacheKeys.IDTOKEN, hashParams[ServerHashParamKeys.ID_TOKEN], this.inCookie);\r\n                            this.cacheStorage.setItem(PersistentCacheKeys.CLIENT_INFO, clientInfo.encodeClientInfo(), this.inCookie);\r\n                            // Save idToken as access token item for app itself\r\n                            this.saveIdToken(response, authority, hashParams, clientInfo, idTokenObj);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.logger.verbose(\"No idToken or no nonce. Cache key for Authority set as state\");\r\n                        authorityKey = stateInfo.state;\r\n                        acquireTokenAccountKey = stateInfo.state;\r\n                        this.logger.error(\"Invalid id_token received in the response\");\r\n                        error = ClientAuthError.createInvalidIdTokenError(idTokenObj);\r\n                        this.cacheStorage.setItem(ErrorCacheKeys.ERROR, error.errorCode);\r\n                        this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, error.errorMessage);\r\n                    }\r\n                }\r\n            }\r\n            // State mismatch - unexpected/invalid state\r\n            else {\r\n                this.logger.verbose(\"State mismatch\");\r\n                authorityKey = stateInfo.state;\r\n                acquireTokenAccountKey = stateInfo.state;\r\n                var expectedState = this.cacheStorage.getItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_LOGIN, stateInfo.state), this.inCookie);\r\n                this.logger.error(\"State Mismatch. Expected State: \" + expectedState + \", Actual State: \" + stateInfo.state);\r\n                error = ClientAuthError.createInvalidStateError(stateInfo.state, expectedState);\r\n                this.cacheStorage.setItem(ErrorCacheKeys.ERROR, error.errorCode);\r\n                this.cacheStorage.setItem(ErrorCacheKeys.ERROR_DESC, error.errorMessage);\r\n            }\r\n        }\r\n        // Set status to completed\r\n        this.cacheStorage.removeItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.RENEW_STATUS, stateInfo.state));\r\n        this.cacheStorage.resetTempCacheItems(stateInfo.state);\r\n        this.logger.verbose(\"Status set to complete, temporary cache cleared\");\r\n        // this is required if navigateToLoginRequestUrl=false\r\n        if (this.inCookie) {\r\n            this.logger.verbose(\"InCookie is true, setting authorityKey in cookie\");\r\n            this.cacheStorage.setItemCookie(authorityKey, \"\", -1);\r\n            this.cacheStorage.clearMsalCookie(stateInfo.state);\r\n        }\r\n        if (error) {\r\n            // Error case, set status to cancelled\r\n            throw error;\r\n        }\r\n        if (!response) {\r\n            throw AuthError.createUnexpectedError(\"Response is null\");\r\n        }\r\n        return response;\r\n    };\r\n    /**\r\n     * Set Authority when saving Token from the hash\r\n     * @param state\r\n     * @param inCookie\r\n     * @param cacheStorage\r\n     * @param idTokenObj\r\n     * @param response\r\n     */\r\n    UserAgentApplication.prototype.populateAuthority = function (state, inCookie, cacheStorage, idTokenObj) {\r\n        this.logger.verbose(\"PopulateAuthority has been called\");\r\n        var authorityKey = AuthCache.generateAuthorityKey(state);\r\n        var cachedAuthority = cacheStorage.getItem(authorityKey, inCookie);\r\n        // retrieve the authority from cache and replace with tenantID\r\n        return StringUtils.isEmpty(cachedAuthority) ? cachedAuthority : UrlUtils.replaceTenantPath(cachedAuthority, idTokenObj.tenantId);\r\n    };\r\n    /* tslint:enable:no-string-literal */\r\n    // #endregion\r\n    // #region Account\r\n    /**\r\n     * Returns the signed in account\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link Account} - the account object stored in MSAL\r\n     */\r\n    UserAgentApplication.prototype.getAccount = function () {\r\n        // if a session already exists, get the account from the session\r\n        if (this.account) {\r\n            return this.account;\r\n        }\r\n        // frame is used to get idToken and populate the account for the given session\r\n        var rawIdToken = this.cacheStorage.getItem(PersistentCacheKeys.IDTOKEN, this.inCookie);\r\n        var rawClientInfo = this.cacheStorage.getItem(PersistentCacheKeys.CLIENT_INFO, this.inCookie);\r\n        if (!StringUtils.isEmpty(rawIdToken) && !StringUtils.isEmpty(rawClientInfo)) {\r\n            var idToken = new IdToken(rawIdToken);\r\n            var clientInfo = new ClientInfo(rawClientInfo, \"\");\r\n            this.account = Account.createAccount(idToken, clientInfo);\r\n            return this.account;\r\n        }\r\n        // if login not yet done, return null\r\n        return null;\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Extracts state value from the accountState sent with the authentication request.\r\n     * @returns {string} scope.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getAccountState = function (state) {\r\n        if (state) {\r\n            var splitIndex = state.indexOf(Constants.resourceDelimiter);\r\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n                return state.substring(splitIndex + 1);\r\n            }\r\n        }\r\n        return state;\r\n    };\r\n    /**\r\n     * Use to get a list of unique accounts in MSAL cache based on homeAccountIdentifier.\r\n     *\r\n     * @param {@link Array<Account>} Account - all unique accounts in MSAL cache.\r\n     */\r\n    UserAgentApplication.prototype.getAllAccounts = function () {\r\n        var accounts = [];\r\n        var accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(Constants.clientId, Constants.homeAccountIdentifier);\r\n        for (var i = 0; i < accessTokenCacheItems.length; i++) {\r\n            var idToken = new IdToken(accessTokenCacheItems[i].value.idToken);\r\n            var clientInfo = new ClientInfo(accessTokenCacheItems[i].value.homeAccountIdentifier, \"\");\r\n            var account = Account.createAccount(idToken, clientInfo);\r\n            accounts.push(account);\r\n        }\r\n        return this.getUniqueAccounts(accounts);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Used to filter accounts based on homeAccountIdentifier\r\n     * @param {Array<Account>}  Accounts - accounts saved in the cache\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getUniqueAccounts = function (accounts) {\r\n        if (!accounts || accounts.length <= 1) {\r\n            return accounts;\r\n        }\r\n        var flags = [];\r\n        var uniqueAccounts = [];\r\n        for (var index = 0; index < accounts.length; ++index) {\r\n            if (accounts[index].homeAccountIdentifier && flags.indexOf(accounts[index].homeAccountIdentifier) === -1) {\r\n                flags.push(accounts[index].homeAccountIdentifier);\r\n                uniqueAccounts.push(accounts[index]);\r\n            }\r\n        }\r\n        return uniqueAccounts;\r\n    };\r\n    // #endregion\r\n    // #region Angular\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Broadcast messages - Used only for Angular?  *\r\n     * @param eventName\r\n     * @param data\r\n     */\r\n    UserAgentApplication.prototype.broadcast = function (eventName, data) {\r\n        var evt = new CustomEvent(eventName, { detail: data });\r\n        window.dispatchEvent(evt);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Helper function to retrieve the cached token\r\n     *\r\n     * @param scopes\r\n     * @param {@link Account} account\r\n     * @param state\r\n     * @return {@link AuthResponse} AuthResponse\r\n     */\r\n    UserAgentApplication.prototype.getCachedTokenInternal = function (scopes, account, state, correlationId) {\r\n        // Get the current session's account object\r\n        var accountObject = account || this.getAccount();\r\n        if (!accountObject) {\r\n            return null;\r\n        }\r\n        // Construct AuthenticationRequest based on response type; set \"redirectUri\" from the \"request\" which makes this call from Angular - for this.getRedirectUri()\r\n        var newAuthority = this.authorityInstance ? this.authorityInstance : AuthorityFactory.CreateInstance(this.authority, this.config.auth.validateAuthority);\r\n        var responseType = this.getTokenType(accountObject, scopes);\r\n        var serverAuthenticationRequest = new ServerRequestParameters(newAuthority, this.clientId, responseType, this.getRedirectUri(), scopes, state, correlationId);\r\n        // get cached token\r\n        return this.getCachedToken(serverAuthenticationRequest, account);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Get scopes for the Endpoint - Used in Angular to track protected and unprotected resources without interaction from the developer app\r\n     * Note: Please check if we need to set the \"redirectUri\" from the \"request\" which makes this call from Angular - for this.getRedirectUri()\r\n     *\r\n     * @param endpoint\r\n     */\r\n    UserAgentApplication.prototype.getScopesForEndpoint = function (endpoint) {\r\n        // if user specified list of unprotectedResources, no need to send token to these endpoints, return null.\r\n        if (this.config.framework.unprotectedResources.length > 0) {\r\n            for (var i = 0; i < this.config.framework.unprotectedResources.length; i++) {\r\n                if (endpoint.indexOf(this.config.framework.unprotectedResources[i]) > -1) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        // process all protected resources and send the matched one\r\n        if (this.config.framework.protectedResourceMap.size > 0) {\r\n            for (var _i = 0, _a = Array.from(this.config.framework.protectedResourceMap.keys()); _i < _a.length; _i++) {\r\n                var key = _a[_i];\r\n                // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1\r\n                if (endpoint.indexOf(key) > -1) {\r\n                    return this.config.framework.protectedResourceMap.get(key);\r\n                }\r\n            }\r\n        }\r\n        /*\r\n         * default resource will be clientid if nothing specified\r\n         * App will use idtoken for calls to itself\r\n         * check if it's staring from http or https, needs to match with app host\r\n         */\r\n        if (endpoint.indexOf(\"http://\") > -1 || endpoint.indexOf(\"https://\") > -1) {\r\n            if (UrlUtils.getHostFromUri(endpoint) === UrlUtils.getHostFromUri(this.getRedirectUri())) {\r\n                return new Array(this.clientId);\r\n            }\r\n        }\r\n        else {\r\n            /*\r\n             * in angular level, the url for $http interceptor call could be relative url,\r\n             * if it's relative call, we'll treat it as app backend call.\r\n             */\r\n            return new Array(this.clientId);\r\n        }\r\n        // if not the app's own backend or not a domain listed in the endpoints structure\r\n        return null;\r\n    };\r\n    /**\r\n     * Return boolean flag to developer to help inform if login is in progress\r\n     * @returns {boolean} true/false\r\n     */\r\n    UserAgentApplication.prototype.getLoginInProgress = function () {\r\n        return this.cacheStorage.isInteractionInProgress(true);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * @param loginInProgress\r\n     */\r\n    UserAgentApplication.prototype.setInteractionInProgress = function (inProgress) {\r\n        this.cacheStorage.setInteractionInProgress(inProgress);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * @param loginInProgress\r\n     */\r\n    UserAgentApplication.prototype.setloginInProgress = function (loginInProgress) {\r\n        this.setInteractionInProgress(loginInProgress);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * returns the status of acquireTokenInProgress\r\n     */\r\n    UserAgentApplication.prototype.getAcquireTokenInProgress = function () {\r\n        return this.cacheStorage.isInteractionInProgress(true);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * @param acquireTokenInProgress\r\n     */\r\n    UserAgentApplication.prototype.setAcquireTokenInProgress = function (acquireTokenInProgress) {\r\n        this.setInteractionInProgress(acquireTokenInProgress);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * returns the logger handle\r\n     */\r\n    UserAgentApplication.prototype.getLogger = function () {\r\n        return this.logger;\r\n    };\r\n    /**\r\n     * Sets the logger callback.\r\n     * @param logger Logger callback\r\n     */\r\n    UserAgentApplication.prototype.setLogger = function (logger) {\r\n        this.logger = logger;\r\n    };\r\n    // #endregion\r\n    // #region Getters and Setters\r\n    /**\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * Evaluates redirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} redirect URL\r\n     */\r\n    UserAgentApplication.prototype.getRedirectUri = function (reqRedirectUri) {\r\n        if (reqRedirectUri) {\r\n            return reqRedirectUri;\r\n        }\r\n        else if (typeof this.config.auth.redirectUri === \"function\") {\r\n            return this.config.auth.redirectUri();\r\n        }\r\n        return this.config.auth.redirectUri;\r\n    };\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    UserAgentApplication.prototype.getPostLogoutRedirectUri = function () {\r\n        if (typeof this.config.auth.postLogoutRedirectUri === \"function\") {\r\n            return this.config.auth.postLogoutRedirectUri();\r\n        }\r\n        return this.config.auth.postLogoutRedirectUri;\r\n    };\r\n    /**\r\n     * Use to get the current {@link Configuration} object in MSAL\r\n     *\r\n     * @returns {@link Configuration}\r\n     */\r\n    UserAgentApplication.prototype.getCurrentConfiguration = function () {\r\n        if (!this.config) {\r\n            throw ClientConfigurationError.createNoSetConfigurationError();\r\n        }\r\n        return this.config;\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * Utils function to create the Authentication\r\n     * @param {@link account} account object\r\n     * @param scopes\r\n     *\r\n     * @returns {string} token type: token, id_token or id_token token\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.getTokenType = function (accountObject, scopes) {\r\n        var accountsMatch = Account.compareAccounts(accountObject, this.getAccount());\r\n        return ServerRequestParameters.determineResponseType(accountsMatch, scopes);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * Sets the cachekeys for and stores the account information in cache\r\n     * @param account\r\n     * @param state\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.setAccountCache = function (account, state) {\r\n        // Cache acquireTokenAccountKey\r\n        var accountId = account ? this.getAccountId(account) : Constants.no_account;\r\n        var acquireTokenAccountKey = AuthCache.generateAcquireTokenAccountKey(accountId, state);\r\n        this.cacheStorage.setItem(acquireTokenAccountKey, JSON.stringify(account));\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * Sets the cacheKey for and stores the authority information in cache\r\n     * @param state\r\n     * @param authority\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.setAuthorityCache = function (state, authority) {\r\n        // Cache authorityKey\r\n        var authorityKey = AuthCache.generateAuthorityKey(state);\r\n        this.cacheStorage.setItem(authorityKey, UrlUtils.CanonicalizeUri(authority), this.inCookie);\r\n    };\r\n    /**\r\n     * Updates account, authority, and nonce in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     * @hidden\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.updateCacheEntries = function (serverAuthenticationRequest, account, isLoginCall, loginStartPage) {\r\n        // Cache Request Originator Page\r\n        if (loginStartPage) {\r\n            this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.LOGIN_REQUEST, serverAuthenticationRequest.state), loginStartPage, this.inCookie);\r\n        }\r\n        // Cache account and authority\r\n        if (isLoginCall) {\r\n            // Cache the state\r\n            this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.STATE_LOGIN, serverAuthenticationRequest.state), serverAuthenticationRequest.state, this.inCookie);\r\n        }\r\n        else {\r\n            this.setAccountCache(account, serverAuthenticationRequest.state);\r\n        }\r\n        // Cache authorityKey\r\n        this.setAuthorityCache(serverAuthenticationRequest.state, serverAuthenticationRequest.authority);\r\n        // Cache nonce\r\n        this.cacheStorage.setItem(AuthCache.generateTemporaryCacheKey(TemporaryCacheKeys.NONCE_IDTOKEN, serverAuthenticationRequest.state), serverAuthenticationRequest.nonce, this.inCookie);\r\n    };\r\n    /**\r\n     * Returns the unique identifier for the logged in account\r\n     * @param account\r\n     * @hidden\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getAccountId = function (account) {\r\n        // return `${account.accountIdentifier}` + Constants.resourceDelimiter + `${account.homeAccountIdentifier}`;\r\n        var accountId;\r\n        if (!StringUtils.isEmpty(account.homeAccountIdentifier)) {\r\n            accountId = account.homeAccountIdentifier;\r\n        }\r\n        else {\r\n            accountId = Constants.no_account;\r\n        }\r\n        return accountId;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @param extraQueryParameters\r\n     *\r\n     * Construct 'tokenRequest' from the available data in adalIdToken\r\n     */\r\n    UserAgentApplication.prototype.buildIDTokenRequest = function (request) {\r\n        var tokenRequest = {\r\n            scopes: Constants.oidcScopes,\r\n            authority: this.authority,\r\n            account: this.getAccount(),\r\n            extraQueryParameters: request.extraQueryParameters,\r\n            correlationId: request.correlationId\r\n        };\r\n        return tokenRequest;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @param config\r\n     * @param clientId\r\n     *\r\n     * Construct TelemetryManager from Configuration\r\n     */\r\n    UserAgentApplication.prototype.getTelemetryManagerFromConfig = function (config, clientId) {\r\n        if (!config) { // if unset\r\n            return TelemetryManager.getTelemetrymanagerStub(clientId, this.logger);\r\n        }\r\n        // if set then validate\r\n        var applicationName = config.applicationName, applicationVersion = config.applicationVersion, telemetryEmitter = config.telemetryEmitter;\r\n        if (!applicationName || !applicationVersion || !telemetryEmitter) {\r\n            throw ClientConfigurationError.createTelemetryConfigError(config);\r\n        }\r\n        // if valid then construct\r\n        var telemetryPlatform = {\r\n            applicationName: applicationName,\r\n            applicationVersion: applicationVersion\r\n        };\r\n        var telemetryManagerConfig = {\r\n            platform: telemetryPlatform,\r\n            clientId: clientId\r\n        };\r\n        return new TelemetryManager(telemetryManagerConfig, telemetryEmitter, this.logger);\r\n    };\r\n    return UserAgentApplication;\r\n}());\r\nexport { UserAgentApplication };\r\n//# sourceMappingURL=UserAgentApplication.js.map","export default {\n    auth: {\n        grant_type:'client_credentials',\n        clientId: '72095d19-16c0-4354-b43a-605ffc55cf78',\n       // clientSecret:'kv_8Q~F16V2tkCYGtRkStH6p-Ee3lJaC_vcvbcos',\n        authority: 'https://login.microsoftonline.com/a2ab47da-3b49-4f99-be15-0cc2cd3ec287',\n       // resource:'https://vault.azure.net',\n       // scope:'api://a2ab47da-3b49-4f99-be15-0cc2cd3ec287/.default',\n        // redirectUri: 'https://omp.mudunuru.com/',\n        // graphendpoint: 'https://graph.microsoft.com/v1.0/me',\n        // graphscopes: ['user.read', 'mail.read']\n\n        // clientId: import.meta.env.VITE_MSAL_CLIENTID,\n        // authority: import.meta.env.VITE_MSAL_AUTHORITY,\n        redirectUri:'https://omp.mudunuru.com:9446/',\n        // graphendpoint: import.meta.env.VITE_MSAL_GRAPHENDPOINT,\n        // graphscopes: ['user.read', 'mail.read']\n\n    },\n    cache: {\n\n        cacheLocation: \"localStorage\",\n        storeAuthStateInCookie: true,\n        // 10 minutes in seconds\n    },\n\n\n}","<template>\r\n<v-container id=\"wrapper\" fluid class=\"down-top-padding\">\r\n      <div id=\"right\">\r\n        <div id=\"signin\">\r\n        </div>\r\n        <img :src=\"logo\" style=\"height: 15%; position: absolute; top: 70%; left: 5%; background-color: #ffffff; padding: 15px 24px 15px 24px; border-radius: 24px; z-index: 2;\"/>\r\n      </div>\r\n      <div id=\"left\">\r\n        <div id=\"showcase\">\r\n          <div class=\"showcase-content\">\r\n          <VCard  >\r\n        <VCardText>\r\n          <img\r\n            max-width=\"505\"\r\n            :src=\"logo\"\r\n            style=\"height: 135px; margin-bottom: 30px; object-fit: contain !important; \"\r\n          />\r\n\r\n          <p class=\"mb-0\">\r\n            Please sign-in to your account and start the adventure\r\n          </p>\r\n        </VCardText>\r\n\r\n        <VCardText>\r\n          <VForm ref=\"refVForm\" @submit.prevent=\"onSubmit\">\r\n            <VRow>\r\n              <VCol>\r\n                <div class=\"alert-demo-v-model-wrapper\">\r\n                 \r\n                </div>\r\n\r\n                <VBtn style=\"padding-left: 72px; padding-right: 72px; margin-left: 33px;\" type=\"button\" @click=\"msalLogin\" >\r\n                  <VImg style=\"position: absolute; z-index: 20; width: 21px; left: 40px;\" :src=\"microsoft\" />\r\n                  Sign in with MICROSOFT\r\n                </VBtn>\r\n              </VCol>\r\n            </VRow>\r\n          </VForm>\r\n        </VCardText>\r\n      </VCard>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </v-container>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n\r\nhtml, body {\r\n    min-block-size: 100% !important;\r\n    padding: 0px !important;\r\n}\r\n#wrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n#left {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n}\r\n\r\n#right {\r\n  flex: 2;\r\n}\r\n\r\n/* Sign In */\r\n#signin {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n/*   padding-bottom: 10rem; */\r\n  height: 100%;\r\n   background: url('/assets/port-4.b6211b0b.jpg') no-repeat center center / cover;\r\n   box-shadow: 8px 0 8px -5px #333;\r\n}\r\n\r\n#signin form {\r\n  width: 80%;\r\n  padding-bottom: 3rem;\r\n}\r\n\r\n#signin .logo {\r\n  margin-bottom: 8vh;\r\n}\r\n\r\n#signin .logo img {\r\n  width: 300px;\r\n}\r\n\r\n#signin label {\r\n  font-size: 0.9rem;\r\n  line-height: 2rem;\r\n  font-weight: 500;\r\n}\r\n\r\n#signin .text-input {\r\n  margin-bottom: 1.3rem;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  background: #181818;\r\n  border: 1px solid #555;\r\n  color: #ccc;\r\n  padding: 0.5rem 1rem;\r\n  line-height: 1.3rem;\r\n}\r\n\r\n#signin .primary-btn {\r\n  width: 100%;\r\n}\r\n\r\n#signin .secondary-btn,\r\n.or,\r\n.links {\r\n  width: 60%;\r\n}\r\n\r\n#signin .links a {\r\n  display: block;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n#signin .or {\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 1.2rem;\r\n  align-items: center;\r\n}\r\n\r\n#signin .or .bar {\r\n  flex: auto;\r\n  border: none;\r\n  height: 1px;\r\n  background: #aaa;\r\n}\r\n\r\n#signin .or span {\r\n  color: #ccc;\r\n  padding: 0 0.8rem;\r\n}\r\n\r\n/* Showcase */\r\n#showcase {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n \r\n  height: 100vh;\r\n  text-align: center;\r\n}\r\n\r\n#showcase .showcase-text {\r\n  font-size: 3rem;\r\n  width: 100%;\r\n  color: #fff;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n#showcase .secondary-btn {\r\n  width: 60%;\r\n  margin: auto;\r\n}\r\n\r\n/* Footer */\r\n#main-footer {\r\n  color: #ccc;\r\n  text-align: center;\r\n  font-size: 0.8rem;\r\n  max-width: 80%;\r\n  padding-top: 5rem;\r\n}\r\n\r\n#main-footer a {\r\n  color: #f96816;\r\n  text-decoration: underline;\r\n}\r\n\r\n/* Button */\r\n.primary-btn {\r\n  padding: 0.7rem 1rem;\r\n  height: 2.7rem;\r\n  display: block;\r\n  border: 0;\r\n  border-radius: 2px;\r\n  font-weight: 500;\r\n  background: #f96816;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  transition: all 0.5s;\r\n}\r\n\r\n.primary-btn:hover {\r\n  background-color: #ff7b39;\r\n}\r\n\r\n.secondary-btn {\r\n  padding: 0.7rem 1rem;\r\n  height: 2.7rem;\r\n  display: block;\r\n  border: 1px solid #f4f4f4;\r\n  border-radius: 2px;\r\n  font-weight: 500;\r\n  background: none;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  transition: all 0.5s;\r\n}\r\n\r\n.secondary-btn:hover {\r\n  border-color: #ff7b39;\r\n  color: #ff7b39;\r\n}\r\n\r\n/* Media Queries */\r\n@media (min-width: 1200px) {\r\n  #left {\r\n    flex: 1;\r\n  }\r\n\r\n  #right {\r\n    flex: 2;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  body {\r\n    overflow: auto;\r\n  }\r\n\r\n  #right {\r\n    display: none;\r\n  }\r\n\r\n  #left {\r\n    justify-content: start;\r\n    margin-top: 4vh;\r\n  }\r\n\r\n  #signin .logo {\r\n    margin-bottom: 2vh;\r\n  }\r\n\r\n  #signin .text-input {\r\n    margin-bottom: 0.7rem;\r\n  }\r\n\r\n  #main-footer {\r\n    padding-top: 1rem;\r\n  }\r\n}\r\n\r\n  </style>\r\n\r\n<script>\r\nimport * as msal from 'msal';\r\nimport axios from 'axios'\r\nimport msalConfig from '../config'\r\nimport Azureconfig from '../config/Azureconfig.js'\r\n\r\n\r\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\n\r\nexport default { \r\n  name:'login',\r\n  data() { \r\n    return { \r\n      accessToken:'',\r\n      idToken:'',\r\n      secretToken:'',\r\n      name:'',\r\n      email:''\r\n    }; \r\n  },\r\n  \r\n  methods: { \r\n    async msalLogin() { \r\n      const loginRequest = {\r\n    scopes: ['openid', 'profile'],\r\n    expiresIn: 600\r\n  };\r\n  const msalInstance = new msal.UserAgentApplication(msalConfig)\r\n  msalInstance.loginPopup(loginRequest)\r\n        .then((response) => {\r\n          console.log('Login success:', response);\r\n         // msalInstance.logout()\r\n          this.accessToken = response.idToken.rawIdToken\r\n\r\n          this.idToken = response.idToken.rawIdToken;\r\n          this.name=response.idToken.name,\r\n              this.email=response.idToken.preferredName,\r\n\r\n\r\n         axios.get(Azureconfig.url.server_url+`api/get-token`)\r\n    .then((response) => {\r\n      console.log('Check user status')\r\n      console.log(response.data);\r\n      let data = response.data\r\n      console.log(data);\r\n       this.secretToken=data.access_token\r\n       const  userData = {\r\n              token:this.idToken,\r\n              name:this.name,\r\n              email:this.preferredName,\r\n              secretToken:this.secretToken\r\n          }\r\n                \r\n\r\n                console.log(userData)\r\n                 localStorage.setItem('userData', JSON.stringify(userData))\r\n                 localStorage.setItem('isAuthenticated',true)\r\n                 window.location.href = '/#/dashboard';\r\n                 window.location.reload(); // Reload the page\r\n     \r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n           \r\n            // console.log(error.message)\r\n            // console.log(error.config)\r\n           console.log(error.response)\r\n          \r\n           \r\n        })\r\n        \r\n\r\n   \r\n        })\r\n        .catch((error) => {\r\n          console.log('Login error:', error);\r\n       //   isAlertVisible.value = true\r\n\r\n         //err.value = error\r\n         //console.error(error)\r\n         // msalInstance.logout()\r\n        });\r\n     \r\n    }, \r\n   \r\n  }, \r\n}; \r\n</script>\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./login.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./login.vue?vue&type=script&lang=js&\"","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","import { render, staticRenderFns } from \"./login.vue?vue&type=template&id=9de05cb2&scoped=true&\"\nimport script from \"./login.vue?vue&type=script&lang=js&\"\nexport * from \"./login.vue?vue&type=script&lang=js&\"\nimport style0 from \"./login.vue?vue&type=style&index=0&id=9de05cb2&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9de05cb2\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VForm } from 'vuetify/lib/components/VForm';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VCardText,VCol,VContainer,VForm,VImg,VRow})\n"],"sourceRoot":""}