{"version":3,"sources":["webpack:///./src/components/dashboardComponent/storage/NewSecret.vue?bc4d","webpack:///src/components/dashboardComponent/storage/NewSecret.vue","webpack:///./src/components/dashboardComponent/storage/NewSecret.vue?3fc9","webpack:///./src/components/dashboardComponent/storage/NewSecret.vue","webpack:///../../../src/components/VIcon/VIcon.ts","webpack:///../../../src/components/VIcon/index.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","secretName","attrs","model","value","callback","$$v","blob_connection_string","expression","blob_container","on","$event","submitForm","staticRenderFns","axios","name","data","created","console","log","error","methods","component","VBtn","VCard","VCardText","VDivider","VTextField","isFontAwesome5","some","val","iconType","isSvgPath","test","icon","SIZE_MAP","VIcon","props","dense","disabled","left","right","size","Number","tag","type","required","default","computed","medium","hasClickListener","Boolean","listeners$","click","getIcon","iconName","$slots","text","getSize","sizes","xSmall","small","large","xLarge","explicitSize","key","getDefaultData","class","attrs$","getSvgWrapperData","fontSize","wrapperData","style","height","width","undefined","applyColors","themeClasses","renderFontIcon","newChildren","delimiterIndex","isMaterialIcon","h","renderSvgIcon","svgData","xmlns","viewBox","role","d","renderSvgIconComponent","$_wrapperFor","functional","children"],"mappings":"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","file":"js/chunk-bd847aa6.56e50c08.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',[_c('v-card-text',[_c('h3',{staticClass:\"title blue-grey--text text--darken-2 font-weight-regular\"},[_vm._v(_vm._s(_vm.secretName))])]),_c('v-divider'),_c('v-card-text',[_c('v-text-field',{attrs:{\"label\":\"Blob connection string\",\"filled\":\"\",\"background-color\":\"transparent\"},model:{value:(_vm.blob_connection_string),callback:function ($$v) {_vm.blob_connection_string=$$v},expression:\"blob_connection_string\"}}),_c('v-text-field',{attrs:{\"label\":\"blob container\",\"filled\":\"\",\"background-color\":\"transparent\"},model:{value:(_vm.blob_container),callback:function ($$v) {_vm.blob_container=$$v},expression:\"blob_container\"}}),_c('v-btn',{staticClass:\"text-capitalize mt-5 element-0\",attrs:{\"id\":\"create\",\"color\":\"success\"},on:{\"click\":function($event){return _vm.submitForm('create')}}},[_vm._v(\"Create\")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-card>\r\n    <v-card-text>\r\n      <h3 class=\"title blue-grey--text text--darken-2 font-weight-regular\">{{secretName}}</h3>\r\n    </v-card-text>\r\n    <v-divider></v-divider>\r\n    <v-card-text>\r\n      <!--v-text-field\r\n        v-model=\"secretName\"\r\n        label=\"Secret name\"\r\n        filled\r\n        background-color=\"transparent\"\r\n      ></v-text-field -->\r\n      <v-text-field\r\n        v-model=\"blob_connection_string\"\r\n        label=\"Blob connection string\"\r\n        filled\r\n        background-color=\"transparent\"\r\n      ></v-text-field>\r\n      <v-text-field\r\n        v-model=\"blob_container\"\r\n        label=\"blob container\"\r\n        filled\r\n        background-color=\"transparent\"\r\n      ></v-text-field>\r\n     \r\n      <v-btn class=\"text-capitalize mt-5 element-0\" id=\"create\" color=\"success\" @click=\"submitForm('create')\">Create</v-btn>\r\n      <!--v-btn class=\"text-capitalize mt-5 element-0\" id=\"update\" color=\"success\" @click=\"submitForm('update')\">Update</v-btn--->\r\n\r\n    </v-card-text>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios'\r\nimport Azureconfig from '../../../config/Azureconfig.js'\r\n\r\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\n\r\nexport default {\r\n  name: \"StorageNewSecret\",\r\n  data: () => ({\r\n    secretName: \"mudunuru-dev-blob-config\",\r\n    blob_connection_string: \"\",\r\n    blob_container:\"\"\r\n  \r\n  }),\r\n  created() {\r\n\r\n// This code will be executed when the component is created\r\nconsole.log('Component created');\r\nconst userData= JSON.parse(localStorage.getItem('userData'));\r\n// You can perform initialization, data fetching, etc. here\r\nconst url = Azureconfig.url.server_url+Azureconfig.url.api_secret_name_verify\r\nconst jsonData = {\r\n    access_token: userData.secretToken,\r\n    secretName:this.secretName,\r\n   \r\n  };\r\n  try {    \r\n\r\n\r\n axios.post(url,jsonData,{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization':userData.secretToken\r\n      }\r\n    })\r\n.then((response) => {\r\n//   console.log('Check user status')\r\n   console.log(response.data);\r\n   let data = response.data\r\n \r\n//  alert('Secret success')\r\n  if(response.data){\r\n    data=atob(data);\r\n    const jsonData = JSON.parse(data);\r\n    console.log(jsonData);\r\n    \r\n    this.blob_connection_string= jsonData.blob_connection_string;\r\n    this.blob_container= jsonData.blob_container;\r\n  \r\n\r\n    document.getElementById('create').style.display='none';\r\n  //  document.getElementById('update').style.display='block'\r\n  }else{\r\n    document.getElementById('create').style.display='block';\r\n    //document.getElementById('update').style.display='none'\r\n  }    \r\n    })\r\n    .catch((error) => {\r\n        console.log(error)\r\n    \r\n       console.log(error.response)\r\n      \r\n       \r\n    })\r\n\r\n} catch (error) {\r\n  this.errorMessage = \"Error listing secret properties: \" + error.message;\r\n}\r\n\r\n},\r\n  methods: {\r\n    \r\n    async submitForm() { \r\n      const url = `https://omp-configurator.mudunuru.com:9445/api/secret`;\r\n    const userData= JSON.parse(localStorage.getItem('userData'));\r\n    \r\n     console.log(userData)\r\n     const jsonobject={\r\n     \r\n            blob_connection_string: this.blob_connection_string,\r\n            blob_container: this.blob_container,\r\n            \r\n        \r\n        }\r\n      const jsonData = {\r\n        access_token: userData.secretToken,\r\n        secretName:this.secretName,\r\n       // value:'secretName='+this.secretName+'&engine='+this.engine+'&DBName='+this.DBName+'&DBUserID='+this.DBUserID+'&DBPassword='+this.DBPassword+'&DBHost='+this.DBHost+'&Port='+this.Port\r\n        value:btoa(JSON.stringify(jsonobject))\r\n        // Add more key-value pairs as needed\r\n      };\r\n    try { \r\n     \r\n    \r\n\r\n     axios.put(url,jsonData,{\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization':userData.secretToken\r\n          }\r\n        })\r\n    .then((response) => {\r\n    //   console.log('Check user status')\r\n       console.log(response.data);\r\n    //   let data = response.data\r\n    //   console.log(data);\r\n    //  alert('Secret success')\r\n     this.$router.push({ name: 'prmms-blob-container' });\r\n     \r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n           \r\n            // console.log(error.message)\r\n            // console.log(error.config)\r\n           console.log(error.response)\r\n          \r\n           \r\n        })\r\n\r\n    } catch (error) {\r\n      this.errorMessage = \"Error listing secret properties: \" + error.message;\r\n    }\r\n    }, \r\n    \r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewSecret.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewSecret.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NewSecret.vue?vue&type=template&id=caec01ee&\"\nimport script from \"./NewSecret.vue?vue&type=script&lang=js&\"\nexport * from \"./NewSecret.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VCard,VCardText,VDivider,VTextField})\n","import './VIcon.sass'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Colorable from '../../mixins/colorable'\nimport Sizeable from '../../mixins/sizeable'\nimport Themeable from '../../mixins/themeable'\n\n// Util\nimport { convertToUnit, keys, remapInternalIcon } from '../../util/helpers'\n\n// Types\nimport Vue, { CreateElement, VNode, VNodeChildren, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\nimport { VuetifyIcon, VuetifyIconComponent } from 'vuetify/types/services/icons'\n\nenum SIZE_MAP {\n  xSmall = '12px',\n  small = '16px',\n  default = '24px',\n  medium = '28px',\n  large = '36px',\n  xLarge = '40px'\n}\n\nfunction isFontAwesome5 (iconType: string): boolean {\n  return ['fas', 'far', 'fal', 'fab', 'fad'].some(val => iconType.includes(val))\n}\n\nfunction isSvgPath (icon: string): boolean {\n  return (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(icon) && /[\\dz]$/i.test(icon) && icon.length > 4)\n}\n\nconst VIcon = mixins(\n  BindsAttrs,\n  Colorable,\n  Sizeable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-icon',\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    left: Boolean,\n    right: Boolean,\n    size: [Number, String],\n    tag: {\n      type: String,\n      required: false,\n      default: 'i',\n    },\n  },\n\n  computed: {\n    medium () {\n      return false\n    },\n    hasClickListener (): boolean {\n      return Boolean(\n        this.listeners$.click || this.listeners$['!click']\n      )\n    },\n  },\n\n  methods: {\n    getIcon (): VuetifyIcon {\n      let iconName = ''\n      if (this.$slots.default) iconName = this.$slots.default[0].text!.trim()\n\n      return remapInternalIcon(this, iconName)\n    },\n    getSize (): string | undefined {\n      const sizes = {\n        xSmall: this.xSmall,\n        small: this.small,\n        medium: this.medium,\n        large: this.large,\n        xLarge: this.xLarge,\n      }\n\n      const explicitSize = keys(sizes).find(key => sizes[key])\n\n      return (\n        (explicitSize && SIZE_MAP[explicitSize]) || convertToUnit(this.size)\n      )\n    },\n    // Component data for both font icon and SVG wrapper span\n    getDefaultData (): VNodeData {\n      return {\n        staticClass: 'v-icon notranslate',\n        class: {\n          'v-icon--disabled': this.disabled,\n          'v-icon--left': this.left,\n          'v-icon--link': this.hasClickListener,\n          'v-icon--right': this.right,\n          'v-icon--dense': this.dense,\n        },\n        attrs: {\n          'aria-hidden': !this.hasClickListener,\n          disabled: this.hasClickListener && this.disabled,\n          type: this.hasClickListener ? 'button' : undefined,\n          ...this.attrs$,\n        },\n        on: this.listeners$,\n      }\n    },\n    getSvgWrapperData () {\n      const fontSize = this.getSize()\n      const wrapperData = {\n        ...this.getDefaultData(),\n        style: fontSize ? {\n          fontSize,\n          height: fontSize,\n          width: fontSize,\n        } : undefined,\n      }\n      this.applyColors(wrapperData)\n\n      return wrapperData\n    },\n    applyColors (data: VNodeData): void {\n      data.class = { ...data.class, ...this.themeClasses }\n      this.setTextColor(this.color, data)\n    },\n    renderFontIcon (icon: string, h: CreateElement): VNode {\n      const newChildren: VNodeChildren = []\n      const data = this.getDefaultData()\n\n      let iconType = 'material-icons'\n      // Material Icon delimiter is _\n      // https://material.io/icons/\n      const delimiterIndex = icon.indexOf('-')\n      const isMaterialIcon = delimiterIndex <= -1\n\n      if (isMaterialIcon) {\n        // Material icon uses ligatures.\n        newChildren.push(icon)\n      } else {\n        iconType = icon.slice(0, delimiterIndex)\n        if (isFontAwesome5(iconType)) iconType = ''\n      }\n\n      data.class[iconType] = true\n      data.class[icon] = !isMaterialIcon\n\n      const fontSize = this.getSize()\n      if (fontSize) data.style = { fontSize }\n\n      this.applyColors(data)\n\n      return h(this.hasClickListener ? 'button' : this.tag, data, newChildren)\n    },\n    renderSvgIcon (icon: string, h: CreateElement): VNode {\n      const svgData: VNodeData = {\n        class: 'v-icon__svg',\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-hidden': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        svgData.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h('svg', svgData, [\n          h('path', {\n            attrs: {\n              d: icon,\n            },\n          }),\n        ]),\n      ])\n    },\n    renderSvgIconComponent (\n      icon: VuetifyIconComponent,\n      h: CreateElement\n    ): VNode {\n      const data: VNodeData = {\n        class: {\n          'v-icon__component': true,\n        },\n      }\n\n      const size = this.getSize()\n      if (size) {\n        data.style = {\n          fontSize: size,\n          height: size,\n          width: size,\n        }\n      }\n\n      this.applyColors(data)\n\n      const component = icon.component\n      data.props = icon.props\n      data.nativeOn = data.on\n\n      return h(this.hasClickListener ? 'button' : 'span', this.getSvgWrapperData(), [\n        h(component, data),\n      ])\n    },\n  },\n\n  render (h: CreateElement): VNode {\n    const icon = this.getIcon()\n\n    if (typeof icon === 'string') {\n      if (isSvgPath(icon)) {\n        return this.renderSvgIcon(icon, h)\n      }\n      return this.renderFontIcon(icon, h)\n    }\n\n    return this.renderSvgIconComponent(icon, h)\n  },\n})\n\nexport default Vue.extend({\n  name: 'v-icon',\n\n  $_wrapperFor: VIcon,\n\n  functional: true,\n\n  render (h, { data, children }): VNode {\n    let iconName = ''\n\n    // Support usage of v-text and v-html\n    if (data.domProps) {\n      iconName = data.domProps.textContent ||\n        data.domProps.innerHTML ||\n        iconName\n\n      // Remove nodes so it doesn't\n      // overwrite our changes\n      delete data.domProps.textContent\n      delete data.domProps.innerHTML\n    }\n\n    return h(VIcon, data, iconName ? [iconName] : children)\n  },\n})\n","import VIcon from './VIcon'\n\nexport { VIcon }\nexport default VIcon\n"],"sourceRoot":""}